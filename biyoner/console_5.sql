create or replace view V_DM_CUSTOMER_LOGIN_STATS_DAILY as
SELECT
PERIOD_ORDER,PERIOD,REPORT_DATE,CUSTOMER_ID,UYELIKTARIHI,UYELIKSURESI,DONEM_SAYISI_AY,NUMOFLOGIN_MIN,NUMOFLOGIN_MAX,NUMOFLOGIN_AVG,NUMOFLOGIN_STD,NUMOFLOGIN_AVG_SONHAFTA,NUMOFLOGIN_AVG_SONAY,NUMOFLOGIN_AVG_SON3AY,NUMOFLOGIN_AVG_SON6AY,NUMOFLOGIN_AVG_SON12AY,
(NumofLogin_Avg_SonHafta*0.2+NumofLogin_Avg_SonAy*0.3+NumofLogin_Avg_Son3Ay*0.2+NumofLogin_Avg_Son6Ay*0.2+NumofLogin_Avg_Son12Ay*0.1) as NumofLogin_Weighted_Average,
case when NumofLogin_Avg>0 then NumofLogin_Std/NumofLogin_Avg else -9 end as NumofLogin_Std_Avg_Ratio,
case when NumofLogin_Max>0 then (NumofLogin_Avg_SonAy/NumofLogin_Max)-1 else -9 end as NumofLogin_LastMonth_Max_Ratio,
case when (NumofLogin_Avg_SonHafta*0.2+NumofLogin_Avg_SonAy*0.3+NumofLogin_Avg_Son3Ay*0.2+NumofLogin_Avg_Son6Ay*0.2+NumofLogin_Avg_Son12Ay*0.1)>0 then (NumofLogin_Avg_SonAy/(NumofLogin_Avg_SonHafta*0.2+NumofLogin_Avg_SonAy*0.3+NumofLogin_Avg_Son3Ay*0.2+NumofLogin_Avg_Son6Ay*0.2+NumofLogin_Avg_Son12Ay*0.1))-1 else -9 end as NumofLogin_LastMonth_wAvg_Ratio,
case when NumofLogin_Max>0 then (NumofLogin_Avg_SonHafta/NumofLogin_Max)-1 else -9 end as NumofLogin_LastWeek_Max_Ratio,
case when (NumofLogin_Avg_SonHafta*0.2+NumofLogin_Avg_SonAy*0.3+NumofLogin_Avg_Son3Ay*0.2+NumofLogin_Avg_Son6Ay*0.2+NumofLogin_Avg_Son12Ay*0.1)>0 then (NumofLogin_Avg_SonHafta/(NumofLogin_Avg_SonHafta*0.2+NumofLogin_Avg_SonAy*0.3+NumofLogin_Avg_Son3Ay*0.2+NumofLogin_Avg_Son6Ay*0.2+NumofLogin_Avg_Son12Ay*0.1))-1 else -9 end as NumofLogin_LastWeek_wAvg_Ratio,
DDWH_DATE
FROM (
SELECT
PERIOD_ORDER,PERIOD,REPORT_DATE,CUSTOMER_ID,UYELIKTARIHI,UYELIKSURESI,
DONEM_SAYISI_AY,NUMOFLOGIN_MIN,NUMOFLOGIN_MAX,NUMOFLOGIN_AVG,NUMOFLOGIN_STD,
case when UyelikTarihi> trunc(sysdate) -7 then nvl(NumofLogin_LastWeek,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_LastWeek,0)*30.00/7 end as NumofLogin_Avg_SonHafta,
case when UyelikTarihi>add_months(trunc(sysdate) , -1 ) then nvl(NumofLogin_LastMonth,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_LastMonth,0)*30.00/30 end as NumofLogin_Avg_SonAy,
case when UyelikTarihi>add_months(trunc(sysdate) , -3 ) then nvl(NumofLogin_Last3Months,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_Last3Months,0)*30.00/90 end as NumofLogin_Avg_Son3Ay,
case when UyelikTarihi>add_months(trunc(sysdate) , -6 ) then nvl(NumofLogin_Last6Months,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_Last6Months,0)*30.00/180 end as NumofLogin_Avg_Son6Ay,
case when UyelikTarihi>add_months(trunc(sysdate) , -12 ) then nvl(NumofLogin_Last12Months,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_Last12Months,0)*30.00/360 end as NumofLogin_Avg_Son12Ay,
DDWH_DATE
FROM (
		select
		a.period_order as PERIOD_ORDER,
		po.PERIOD as PERIOD,
		po.RAPOR_TAR as REPORT_DATE,
		A.CUSTOMER_ID,
		trunc(CN.REGISTRATION_DATE) as UyelikTarihi,
		trunc(sysdate) - trunc(CN.REGISTRATION_DATE) as UyelikSuresi,
		count(B.PERIOD) as DONEM_SAYISI_AY,
		min(B.NumofLogin_LastMonth) AS NumofLogin_Min,
		max(B.NumofLogin_LastMonth) AS NumofLogin_Max,
		avg(B.NumofLogin_LastMonth) as NumofLogin_Avg,
		STDDEV(B.NumofLogin_LastMonth) AS NumofLogin_Std,
		a.NumofLogin_LastWeek,
		a.NumofLogin_Last12Months,
		a.NumofLogin_Last6Months,
		a.NumofLogin_Last3Months,
		a.NumofLogin_LastMonth,
		/*case when UyelikTarihi>dateadd(week, -1, xDate) then nvl(NumofLogin_LastWeek,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_LastWeek,0)*30.00/(datediff(day, dateadd(week, -1, xDate), xDate)) end as NumofLogin_Avg_SonHafta,
		case when UyelikTarihi>dateadd(Month, -1, xDate) then nvl(NumofLogin_LastMonth,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_LastMonth,0)*30.00/(datediff(day, dateadd(Month, -1, xDate), xDate)) end as NumofLogin_Avg_SonAy,
		case when UyelikTarihi>dateadd(Month, -3, xDate) then nvl(NumofLogin_Last3Months,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_Last3Months,0)*30.00/(datediff(day, dateadd(Month, -3, xDate), xDate)) end as NumofLogin_Avg_Son3Ay,
		case when UyelikTarihi>dateadd(Month, -6, xDate) then nvl(NumofLogin_Last6Months,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_Last6Months,0)*30.00/(datediff(day, dateadd(Month, -6, xDate), xDate)) end as NumofLogin_Avg_Son6Ay,
		case when UyelikTarihi>dateadd(Month, -12, xDate) then nvl(NumofLogin_Last12Months,0)*30.00/(case when UyelikSuresi<7 then 7 else UyelikSuresi end) else nvl(NumofLogin_Last12Months,0)*30.00/(datediff(day, dateadd(Month, -12, xDate), xDate)) end as NumofLogin_Avg_Son12Ay,
		(NumofLogin_Avg_SonHafta*0.2+NumofLogin_Avg_SonAy*0.3+NumofLogin_Avg_Son3Ay*0.2+NumofLogin_Avg_Son6Ay*0.2+NumofLogin_Avg_Son12Ay*0.1) as NumofLogin_Weighted_Average,
		case when NumofLogin_Avg>0 then NumofLogin_Std/NumofLogin_Avg else -9 end as NumofLogin_Std_Avg_Ratio,
		case when NumofLogin_Max>0 then (NumofLogin_Avg_SonAy/NumofLogin_Max)-1 else -9 end as NumofLogin_LastMonth_Max_Ratio,
		case when NumofLogin_Weighted_Average>0 then (NumofLogin_Avg_SonAy/NumofLogin_Weighted_Average)-1 else -9 end as NumofLogin_LastMonth_wAvg_Ratio,
		case when NumofLogin_Max>0 then (NumofLogin_Avg_SonHafta/NumofLogin_Max)-1 else -9 end as NumofLogin_LastWeek_Max_Ratio,
		case when NumofLogin_Weighted_Average>0 then (NumofLogin_Avg_SonHafta/NumofLogin_Weighted_Average)-1 else -9 end as NumofLogin_LastWeek_wAvg_Ratio,
		*/
		sysdate as DDWH_DATE
		FROM crm_dm.PERIOD_ORDER po
		INNER JOIN  crm_dm.DM_CUSTOMER_LOGIN_MONTHLY A
		ON po.PERIOD_ORDER = a.period_order
		join lbrdwh.Customer_new2 CN on A.CUSTOMER_ID=CN.CUSTOMER_ID
		LEFT JOIN  crm_dm.DM_CUSTOMER_LOGIN_MONTHLY  B ON A.CUSTOMER_ID=B.CUSTOMER_ID
		and B.PERIOD_ORDER between a.period_order-11 and a.period_order
		where 1=1
		AND  trunc(sysdate) BETWEEN  po.AYIN_ILK_GUNU AND po.AYIN_SON_GUNU
		GROUP BY a.period_order , po.PERIOD, po.RAPOR_TAR ,A.CUSTOMER_ID, trunc(CN.REGISTRATION_DATE),
		(trunc(sysdate) - trunc(CN.REGISTRATION_DATE)) ,  A.NumofLogin_LastWeek, A.NumofLogin_LastMonth, A.NumofLogin_Last3Months, A.NumofLogin_Last6Months, A.NumofLogin_Last12Months
)
)
/

create or replace view V_DM_CUSTOMER_CHURN_SCORE_DAILY as
SELECT PERIOD_ORDER,
           PERIOD,
           REPORT_DATE,
           CUSTOMER_ID,
           SCORE_PRE,
           CASE
               WHEN 1.012 * SCORE_PRE + 1.3537 > 99 THEN 99
               ELSE 1.012 * SCORE_PRE + 1.3537
           END    AS SCORE,
           CASE
               WHEN ActivityStatus = 'AKTIF'
               THEN
                   CASE
                       WHEN SEGMENT IN (1, 2, 3)
                       THEN
                           CASE
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    50
                               THEN
                                   'SIYAH'
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    20
                               THEN
                                   'KIRMIZI'
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    5
                               THEN
                                   'SARI'
                               ELSE
                                   'BEYAZ'
                           END
                       WHEN SEGMENT IN (4, 5)
                       THEN
                           CASE
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    40
                               THEN
                                   'SIYAH'
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    10
                               THEN
                                   'KIRMIZI'
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    5
                               THEN
                                   'SARI'
                               ELSE
                                   'BEYAZ'
                           END
                       ELSE
                           CASE
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    20
                               THEN
                                   'SIYAH'
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    10
                               THEN
                                   'KIRMIZI'
                               ELSE
                                   'SARI'
                           END
                   END
               ELSE
                   CASE
                       WHEN SEGMENT IN (1,
                                        2,
                                        3,
                                        4,
                                        5)
                       THEN
                           CASE
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    30
                               THEN
                                   'SIYAH'
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    10
                               THEN
                                   'KIRMIZI'
                               ELSE
                                   'SARI'
                           END
                       ELSE
                           CASE
                               WHEN CASE
                                        WHEN 1.012 * SCORE_PRE + 1.3537 > 99
                                        THEN
                                            99
                                        ELSE
                                            1.012 * SCORE_PRE + 1.3537
                                    END >=
                                    20
                               THEN
                                   'SIYAH'
                               ELSE
                                   'KIRMIZI'
                           END
                   END
           END    AS RISK_KATEGORI,
           DWH_DATE
      FROM (SELECT PERIOD_ORDER       AS PERIOD_ORDER,
                   PERIOD             AS PERIOD,
                   TRUNC (SYSDATE)    AS REPORT_DATE,
                   CUSTOMER_ID,
                     CASE
                         WHEN ActivityStatus = 'TERK'
                         THEN
                             0.99
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 12
                              AND ACTIVE_DURATION <= 28
                              AND NumofPlay_Day_Std_Avg_Ratio <= 1.101
                         THEN
                             0.223
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 28
                         THEN
                             0.192
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 16
                              AND NumofMoneyDepositDate_Last12Months > 15
                         THEN
                             0.241
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION > 22
                              AND ACTIVE_DURATION <= 28
                         THEN
                             0.182
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION > 28
                         THEN
                             0.121
                         WHEN     NumofPlay_Day_Weighted_Average > 1.984
                              AND NumofPlay_Day_Weighted_Average <= 3.034
                              AND ACTIVE_DURATION > 3
                              AND ACTIVE_DURATION <= 9
                              AND DaysAfterLastMoneyDeposit <= 29
                         THEN
                             0.233
                         WHEN     NumofPlay_Day_Weighted_Average > 1.984
                              AND NumofPlay_Day_Weighted_Average <= 3.034
                              AND ACTIVE_DURATION > 9
                              AND ACTIVE_DURATION <= 22
                              AND NumofLogin_Std_Avg_Ratio <= 0.973
                         THEN
                             0.156
                         WHEN     NumofPlay_Day_Weighted_Average > 1.984
                              AND NumofPlay_Day_Weighted_Average <= 3.034
                              AND ACTIVE_DURATION > 22
                              AND NumofMoneyDepositDate_LastMonth <= 0
                         THEN
                             0.154
                         WHEN     NumofPlay_Day_Weighted_Average > 1.984
                              AND NumofPlay_Day_Weighted_Average <= 3.034
                              AND ACTIVE_DURATION > 22
                              AND NumofMoneyDepositDate_LastMonth > 0
                         THEN
                             0.081
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION <= 4
                              AND Para_Bonus_Kontrol IN (0,
                                                         1,
                                                         2,
                                                         5)
                         THEN
                             0.152
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION > 4
                              AND ACTIVE_CONS_MAX_DURATION <= 7
                              AND Para_Bonus_Kontrol IN (-9,
                                                         -6,
                                                         -5,
                                                         -4,
                                                         0,
                                                         1,
                                                         2,
                                                         3,
                                                         5)
                         THEN
                             0.096
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION > 4
                              AND ACTIVE_CONS_MAX_DURATION <= 7
                              AND Para_Bonus_Kontrol IN (-8,
                                                         -7,
                                                         -3,
                                                         -2,
                                                         -1,
                                                         4,
                                                         6,
                                                         7,
                                                         8,
                                                         9,
                                                         10)
                         THEN
                             0.202
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION > 7
                              AND ACTIVE_CONS_MAX_DURATION <= 14
                              AND DaysAfterLastMoneyDeposit <= 17
                         THEN
                             0.049
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION > 7
                              AND ACTIVE_CONS_MAX_DURATION <= 14
                              AND DaysAfterLastMoneyDeposit > 17
                         THEN
                             0.126
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION > 14
                              AND NumofPlay_Day_Min <= 0
                         THEN
                             0.076
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION > 14
                              AND NumofPlay_Day_Min > 0
                         THEN
                             0.024
                         WHEN     NumofPlay_Day_Weighted_Average > 4.736
                              AND NumofPlay_Day_Weighted_Average <= 7.755
                              AND ACTIVE_CONS_MAX_DURATION <= 3
                         THEN
                             0.148
                         WHEN     NumofPlay_Day_Weighted_Average > 4.736
                              AND NumofPlay_Day_Weighted_Average <= 7.755
                              AND ACTIVE_CONS_MAX_DURATION > 3
                              AND ACTIVE_CONS_MAX_DURATION <= 7
                              AND NumofLogin_Weighted_Average <= 12.674
                         THEN
                             0.119
                         WHEN     NumofPlay_Day_Weighted_Average > 4.736
                              AND NumofPlay_Day_Weighted_Average <= 7.755
                              AND ACTIVE_CONS_MAX_DURATION > 3
                              AND ACTIVE_CONS_MAX_DURATION <= 7
                              AND NumofLogin_Weighted_Average > 12.674
                         THEN
                             0.067
                         WHEN     NumofPlay_Day_Weighted_Average > 4.736
                              AND NumofPlay_Day_Weighted_Average <= 7.755
                              AND ACTIVE_CONS_MAX_DURATION > 7
                              AND ACTIVE_CONS_MAX_DURATION <= 10
                         THEN
                             0.063
                         WHEN     NumofPlay_Day_Weighted_Average > 4.736
                              AND NumofPlay_Day_Weighted_Average <= 7.755
                              AND ACTIVE_CONS_MAX_DURATION > 10
                              AND Money_Deposit_Count_SonAy <= 1
                         THEN
                             0.055
                         WHEN     NumofPlay_Day_Weighted_Average > 4.736
                              AND NumofPlay_Day_Weighted_Average <= 7.755
                              AND ACTIVE_CONS_MAX_DURATION > 10
                              AND Money_Deposit_Count_SonAy > 1
                              AND Withdraw_Amount_Max_Ln <= 4.602
                         THEN
                             0.024
                         WHEN     NumofPlay_Day_Weighted_Average > 4.736
                              AND NumofPlay_Day_Weighted_Average <= 7.755
                              AND ACTIVE_CONS_MAX_DURATION > 10
                              AND Money_Deposit_Count_SonAy > 1
                              AND Withdraw_Amount_Max_Ln > 4.602
                         THEN
                             0.008
                         WHEN     NumofPlay_Day_Weighted_Average > 7.755
                              AND NumofPlay_Day_Weighted_Average <= 13.683
                              AND NumofLogin_Last12Months <= 93
                              AND NumofWithdrawDate_Last12Months <= 0
                         THEN
                             0.067
                         WHEN     NumofPlay_Day_Weighted_Average > 7.755
                              AND NumofPlay_Day_Weighted_Average <= 13.683
                              AND NumofLogin_Last12Months <= 93
                              AND NumofWithdrawDate_Last12Months > 0
                         THEN
                             0.034
                         WHEN     NumofPlay_Day_Weighted_Average > 7.755
                              AND NumofPlay_Day_Weighted_Average <= 13.683
                              AND NumofLogin_Last12Months > 93
                              AND NumofLogin_Last12Months <= 130
                         THEN
                             0.026
                         WHEN     NumofPlay_Day_Weighted_Average > 7.755
                              AND NumofPlay_Day_Weighted_Average <= 13.683
                              AND NumofLogin_Last12Months > 130
                              AND NumofLogin_Last12Months <= 263
                              AND Money_Deposit_Count_SonAy <= 2
                         THEN
                             0.028
                         WHEN     NumofPlay_Day_Weighted_Average > 7.755
                              AND NumofPlay_Day_Weighted_Average <= 13.683
                              AND NumofLogin_Last12Months > 130
                              AND NumofLogin_Last12Months <= 263
                              AND Money_Deposit_Count_SonAy > 2
                         THEN
                             0.007
                         WHEN     NumofPlay_Day_Weighted_Average > 7.755
                              AND NumofPlay_Day_Weighted_Average <= 13.683
                              AND NumofLogin_Last12Months > 263
                         THEN
                             0.007
                         WHEN     NumofPlay_Day_Weighted_Average > 13.683
                              AND ACTIVE_CONS_MAX_DURATION <= 5
                         THEN
                             0.017
                         WHEN     NumofPlay_Day_Weighted_Average > 13.683
                              AND ACTIVE_CONS_MAX_DURATION > 5
                              AND ACTIVE_CONS_MAX_DURATION <= 14
                              AND NumofBonus_Deposit_Day_Last3Months <= 0
                         THEN
                             0.007
                         WHEN     NumofPlay_Day_Weighted_Average > 13.683
                              AND ACTIVE_CONS_MAX_DURATION > 5
                              AND ACTIVE_CONS_MAX_DURATION <= 14
                              AND NumofBonus_Deposit_Day_Last3Months > 0
                         THEN
                             0
                         WHEN     NumofPlay_Day_Weighted_Average > 13.683
                              AND ACTIVE_CONS_MAX_DURATION > 14
                              AND DaysAfterLastMoneyDeposit <= 4
                         THEN
                             0
                         WHEN     NumofPlay_Day_Weighted_Average > 13.683
                              AND ACTIVE_CONS_MAX_DURATION > 14
                              AND DaysAfterLastMoneyDeposit > 4
                         THEN
                             0.003
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION <= 2
                              AND INACTIVE_CONS_DURATION <= 0
                         THEN
                             0.783
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION <= 2
                              AND INACTIVE_CONS_DURATION > 0
                              AND INACTIVE_CONS_DURATION <= 1
                         THEN
                             0.902
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION <= 2
                              AND INACTIVE_CONS_DURATION > 1
                         THEN
                             0.942
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND Bonus_Ratio_Son3Ay <= 0
                         THEN
                             0.726
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND Bonus_Ratio_Son3Ay > 0
                         THEN
                             0.844
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 16
                              AND DaysAfterLastMoneyDeposit <= 242
                         THEN
                             0.627
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 16
                              AND DaysAfterLastMoneyDeposit > 242
                         THEN
                             0.752
                         WHEN     NumofPlay_Day_Weighted_Average <= 0.231
                              AND ACTIVE_DURATION > 16
                         THEN
                             0.589
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION <= 2
                              AND Bonus_Ratio_Son3Ay <= 0.118
                         THEN
                             0.753
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION <= 2
                              AND Bonus_Ratio_Son3Ay > 0.118
                         THEN
                             0.88
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND NumofLogin_Std_Avg_Ratio <= 1.409
                         THEN
                             0.632
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND NumofLogin_Std_Avg_Ratio > 1.409
                         THEN
                             0.735
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 12
                              AND NumofLogin_Last6Months <= 10
                         THEN
                             0.647
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 12
                              AND NumofLogin_Last6Months > 10
                         THEN
                             0.552
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION > 12
                              AND Money_Deposit_Count_Son6Ay <= 1
                         THEN
                             0.549
                         WHEN     NumofPlay_Day_Weighted_Average > 0.231
                              AND NumofPlay_Day_Weighted_Average <= 0.477
                              AND ACTIVE_DURATION > 12
                              AND Money_Deposit_Count_Son6Ay > 1
                         THEN
                             0.431
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION <= 2
                         THEN
                             0.708
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND Money_Deposit_Count_Son12Ay <= 4
                         THEN
                             0.643
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND Money_Deposit_Count_Son12Ay > 4
                         THEN
                             0.544
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 12
                              AND DaysAfterLastLogin <= 16
                         THEN
                             0.422
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 12
                              AND DaysAfterLastLogin > 16
                         THEN
                             0.565
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION > 12
                              AND ACTIVE_DURATION <= 22
                              AND NumofMoneyDepositDate_Last12Months <= 6
                         THEN
                             0.485
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION > 12
                              AND ACTIVE_DURATION <= 22
                              AND NumofMoneyDepositDate_Last12Months > 6
                         THEN
                             0.359
                         WHEN     NumofPlay_Day_Weighted_Average > 0.477
                              AND NumofPlay_Day_Weighted_Average <= 0.821
                              AND ACTIVE_DURATION > 22
                         THEN
                             0.315
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION <= 2
                         THEN
                             0.642
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND Para_Bonus_Kontrol IN (-10,
                                                         -9,
                                                         -8,
                                                         -7,
                                                         -6,
                                                         -5,
                                                         -4,
                                                         -2,
                                                         9,
                                                         10)
                         THEN
                             0.554
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 2
                              AND ACTIVE_DURATION <= 6
                              AND Para_Bonus_Kontrol IN (-3,
                                                         -1,
                                                         0,
                                                         1,
                                                         2,
                                                         3,
                                                         4,
                                                         5,
                                                         6,
                                                         7,
                                                         8)
                         THEN
                             0.44
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 12
                              AND NumofMoneyDepositDate_Last6Months <= 3
                         THEN
                             0.48
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 12
                              AND NumofMoneyDepositDate_Last6Months > 3
                         THEN
                             0.347
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 12
                              AND ACTIVE_DURATION <= 28
                              AND NumofPlay_Day_Std_Avg_Ratio > 1.101
                              AND NumofPlay_Day_Std_Avg_Ratio <= 1.458
                         THEN
                             0.32
                         WHEN     NumofPlay_Day_Weighted_Average > 0.821
                              AND NumofPlay_Day_Weighted_Average <= 1.295
                              AND ACTIVE_DURATION > 12
                              AND ACTIVE_DURATION <= 28
                              AND NumofPlay_Day_Std_Avg_Ratio > 1.458
                         THEN
                             0.389
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION <= 3
                         THEN
                             0.552
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION > 3
                              AND ACTIVE_DURATION <= 6
                         THEN
                             0.441
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 16
                              AND NumofMoneyDepositDate_Last12Months <= 6
                         THEN
                             0.412
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION > 6
                              AND ACTIVE_DURATION <= 16
                              AND NumofMoneyDepositDate_Last12Months > 6
                              AND NumofMoneyDepositDate_Last12Months <= 15
                         THEN
                             0.302
                         WHEN     NumofPlay_Day_Weighted_Average > 1.295
                              AND NumofPlay_Day_Weighted_Average <= 1.984
                              AND ACTIVE_DURATION > 16
                              AND ACTIVE_DURATION <= 22
                         THEN
                             0.261
                         WHEN     NumofPlay_Day_Weighted_Average > 1.984
                              AND NumofPlay_Day_Weighted_Average <= 3.034
                              AND ACTIVE_DURATION <= 3
                         THEN
                             0.431
                         WHEN     NumofPlay_Day_Weighted_Average > 1.984
                              AND NumofPlay_Day_Weighted_Average <= 3.034
                              AND ACTIVE_DURATION > 3
                              AND ACTIVE_DURATION <= 9
                              AND DaysAfterLastMoneyDeposit > 29
                         THEN
                             0.388
                         WHEN     NumofPlay_Day_Weighted_Average > 1.984
                              AND NumofPlay_Day_Weighted_Average <= 3.034
                              AND ACTIVE_DURATION > 9
                              AND ACTIVE_DURATION <= 22
                              AND NumofLogin_Std_Avg_Ratio > 0.973
                         THEN
                             0.27
                         WHEN     NumofPlay_Day_Weighted_Average > 3.034
                              AND NumofPlay_Day_Weighted_Average <= 4.736
                              AND ACTIVE_CONS_MAX_DURATION <= 4
                              AND Para_Bonus_Kontrol IN (-10,
                                                         -9,
                                                         -8,
                                                         -7,
                                                         -6,
                                                         -5,
                                                         -4,
                                                         -3,
                                                         -2,
                                                         -1,
                                                         3,
                                                         4,
                                                         6,
                                                         7,
                                                         8,
                                                         9,
                                                         10)
                         THEN
                             0.311
                         ELSE
                             99
                     END
                   * 100              AS SCORE_PRE,
                   SEGMENT,
                   ActivityStatus,
                   SYSDATE            AS DWH_DATE
              FROM (SELECT P.PERIOD_ORDER,
                           P.PERIOD,
                           SM.CUSTOMER_ID,
                           SM.ActivityStatus,
                           CASE
                               WHEN SM.isnewcustomer = 1
                               THEN
                                   6
                               WHEN SM.isVIP = 1
                               THEN
                                   1
                               WHEN SUBSTR (SM.Segment_Assigned, 1, 1) = 'A'
                               THEN
                                   2
                               WHEN SUBSTR (SM.Segment_Assigned, 1, 1) = 'B'
                               THEN
                                   3
                               WHEN SUBSTR (SM.Segment_Assigned, 1, 1) = 'C'
                               THEN
                                   4
                               WHEN SUBSTR (SM.Segment_Assigned, 1, 1) = 'D'
                               THEN
                                   5
                               WHEN SUBSTR (SM.Segment_Assigned, 1, 1) = 'E'
                               THEN
                                   7
                               WHEN SUBSTR (SM.Segment_Assigned, 1, 1) = 'F'
                               THEN
                                   9
                               ELSE
                                   99
                           END
                               AS SEGMENT,
                           CASE
                               WHEN NVL (T0.Ciro_Son12Ay, 0) = 0
                               THEN
                                   -10
                               WHEN NVL (MD.DaysAfterLastMoneyDeposit, 400) =
                                    400
                               THEN
                                   -9
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.07
                                    AND   NVL (MD.DaysAfterLastMoneyDeposit,
                                               400)
                                        - NVL (B.DaysAfterLastBonus_Deposit,
                                               400) >
                                        0
                               THEN
                                   -8
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.05
                                    AND   NVL (MD.DaysAfterLastMoneyDeposit,
                                               400)
                                        - NVL (B.DaysAfterLastBonus_Deposit,
                                               400) >
                                        0
                               THEN
                                   -7
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.07
                                    AND NVL (B.DaysAfterLastBonus_Deposit,
                                             400) <
                                        10
                               THEN
                                   -6
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.05
                                    AND NVL (B.DaysAfterLastBonus_Deposit,
                                             400) <
                                        10
                               THEN
                                   -5
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.07
                                    AND NVL (B.DaysAfterLastBonus_Deposit,
                                             400) <
                                        30
                               THEN
                                   -4
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.07
                                    AND   NVL (MD.DaysAfterLastMoneyDeposit,
                                               400)
                                        - NVL (B.DaysAfterLastBonus_Deposit,
                                               400) <=
                                        0
                               THEN
                                   -3
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.05
                                    AND NVL (B.DaysAfterLastBonus_Deposit,
                                             400) <
                                        30
                               THEN
                                   -2
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) >
                                        0.05
                                    AND   NVL (MD.DaysAfterLastMoneyDeposit,
                                               400)
                                        - NVL (B.DaysAfterLastBonus_Deposit,
                                               400) <=
                                        0
                               THEN
                                   -1
                               WHEN     NVL (T0.Ciro_Son12Ay, 0) > 0
                                    AND   NVL (T0.Bonus_Ciro_Son12Ay, 0)
                                        * 1.0
                                        / NVL (T0.Ciro_Son12Ay, 0) <=
                                        0.05
                               THEN
                                   CASE
                                       WHEN NVL (
                                                MD.DaysAfterLastMoneyDeposit,
                                                400) <=
                                            10
                                       THEN
                                           CASE
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    10
                                               THEN
                                                   0
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    30
                                               THEN
                                                   1
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    60
                                               THEN
                                                   2
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    90
                                               THEN
                                                   3
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) >
                                                    90
                                               THEN
                                                   5
                                           END
                                       WHEN NVL (
                                                MD.DaysAfterLastMoneyDeposit,
                                                400) <=
                                            30
                                       THEN
                                           CASE
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    10
                                               THEN
                                                   1
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    20
                                               THEN
                                                   2
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    30
                                               THEN
                                                   3
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    60
                                               THEN
                                                   5
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    90
                                               THEN
                                                   7
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) >
                                                    90
                                               THEN
                                                   8
                                           END
                                       WHEN NVL (
                                                MD.DaysAfterLastMoneyDeposit,
                                                400) <=
                                            60
                                       THEN
                                           CASE
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    10
                                               THEN
                                                   2
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    20
                                               THEN
                                                   3
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    30
                                               THEN
                                                   4
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    60
                                               THEN
                                                   6
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    90
                                               THEN
                                                   8
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) >
                                                    90
                                               THEN
                                                   9
                                           END
                                       WHEN NVL (
                                                MD.DaysAfterLastMoneyDeposit,
                                                400) <=
                                            90
                                       THEN
                                           CASE
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    10
                                               THEN
                                                   3
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    20
                                               THEN
                                                   4
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    30
                                               THEN
                                                   5
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    60
                                               THEN
                                                   7
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    90
                                               THEN
                                                   9
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) >
                                                    90
                                               THEN
                                                   10
                                           END
                                       WHEN NVL (
                                                MD.DaysAfterLastMoneyDeposit,
                                                400) >
                                            90
                                       THEN
                                           CASE
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    10
                                               THEN
                                                   4
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    20
                                               THEN
                                                   5
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    30
                                               THEN
                                                   6
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    60
                                               THEN
                                                   8
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) <=
                                                    90
                                               THEN
                                                   9
                                               WHEN NVL (
                                                        B.DaysAfterLastBonus_Deposit,
                                                        400) >
                                                    90
                                               THEN
                                                   10
                                           END
                                   END
                               ELSE
                                   99
                           END
                               AS Para_Bonus_Kontrol,
                           CASE
                               WHEN NVL (L.DaysAfterLastLogin, 99) >
                                    DaysAfterLastPlay
                               THEN
                                   DaysAfterLastPlay
                               ELSE
                                   NVL (L.DaysAfterLastLogin, 99)
                           END
                               AS DaysAfterLastLogin,
                           CASE
                               WHEN NVL (L.NumofLogin_Last6Months, 0) <
                                    NumofPlay_Last6Months
                               THEN
                                   NumofPlay_Last6Months
                               ELSE
                                   NVL (L.NumofLogin_Last6Months, 0)
                           END
                               AS NumofLogin_Last6Months,
                           CASE
                               WHEN NVL (L.NumofLogin_Last12Months, 0) <
                                    NumofPlay_Last12Months
                               THEN
                                   NumofPlay_Last12Months
                               ELSE
                                   NVL (L.NumofLogin_Last12Months, 0)
                           END
                               AS NumofLogin_Last12Months,
                           NVL (MD.DaysAfterLastMoneyDeposit, 400)
                               AS DaysAfterLastMoneyDeposit,
                           NVL (MD.NumofMoneyDepositDate_LastMonth, 0)
                               AS NumofMoneyDepositDate_LastMonth,
                           NVL (MD.NumofMoneyDepositDate_Last6Months, 0)
                               AS NumofMoneyDepositDate_Last6Months,
                           NVL (MD.NumofMoneyDepositDate_Last12Months, 0)
                               AS NumofMoneyDepositDate_Last12Months,
                           NVL (MD.Money_Deposit_Count_SonAy, 0)
                               AS Money_Deposit_Count_SonAy,
                           NVL (MD.Money_Deposit_Count_Son6Ay, 0)
                               AS Money_Deposit_Count_Son6Ay,
                           NVL (MD.Money_Deposit_Count_Son12Ay, 0)
                               AS Money_Deposit_Count_Son12Ay,
                           NVL (W.NumofWithdrawDate_Last12Months, 0)
                               AS NumofWithdrawDate_Last12Months,
                           NVL (B.NumofBonus_Deposit_Day_Last3Months, 0)
                               AS NumofBonus_Deposit_Day_Last3Months,
                           CASE
                               WHEN NVL (T0.Ciro_Son3Ay, 0) = 0
                               THEN
                                   0
                               ELSE
                                     NVL (T0.Bonus_Ciro_Son3Ay, 0)
                                   * 1.0
                                   / NVL (T0.Ciro_Son3Ay, 0)
                           END
                               AS Bonus_Ratio_Son3Ay,
                           NVL (TS.NumofPlay_Day_Min, 0)
                               AS NumofPlay_Day_Min,
                           NVL (TS.NumofPlay_Day_Max, 0)
                               AS NumofPlay_Day_Max,
                           NVL (TS.NumofPlay_Day_Avg, 0)
                               AS NumofPlay_Day_Avg,
                           NVL (TS.NumofPlay_Day_Std, 0)
                               AS NumofPlay_Day_Std,
                           NVL (TS.NumofPlay_Day_Weighted_Average, 0)
                               AS NumofPlay_Day_Weighted_Average,
                           CASE
                               WHEN NVL (TS.NumofPlay_Day_Std_Avg_Ratio, 0) <
                                    -3.0
                               THEN
                                   0
                               ELSE
                                   NVL (TS.NumofPlay_Day_Std_Avg_Ratio, 0)
                           END
                               AS NumofPlay_Day_Std_Avg_Ratio,
                           NVL (LS.NumofLogin_Weighted_Average,
                                NumofPlay_Day_Weighted_Average)
                               AS NumofLogin_Weighted_Average,
                           CASE
                               WHEN NVL (LS.NumofLogin_Std_Avg_Ratio,
                                         NumofPlay_Day_Std_Avg_Ratio) <
                                    -3.0
                               THEN
                                   0
                               ELSE
                                   NVL (LS.NumofLogin_Std_Avg_Ratio,
                                        NumofPlay_Day_Std_Avg_Ratio)
                           END
                               AS NumofLogin_Std_Avg_Ratio,
                           CASE
                               WHEN NVL (WS.Withdraw_Amount_Max, 0) < 1
                               THEN
                                   0
                               ELSE
                                   LN (NVL (WS.Withdraw_Amount_Max, 0))
                           END
                               AS Withdraw_Amount_Max_Ln,
                           CAC.ACTIVE_DURATION,           --datatype değiştir-
                           CAC.INACTIVE_CONS_DURATION,    --datatype değiştir-
                           CAC.ACTIVE_CONS_MAX_DURATION   --datatype değiştir-
                      FROM CRM_DM.DM_CUSTOMER_SEGMENT_DAILY  SM
                           LEFT JOIN
                           CRM_DM.DM_CUSTOMER_TURNOVER_DETAIL_DAILY T0
                               ON SM.CUSTOMER_ID = T0.CUSTOMER_ID
                           LEFT JOIN lbrdwh.DM_CUSTOMER_LOGIN_DAILY L
                               ON L.CUSTOMER_ID = SM.CUSTOMER_ID
                           LEFT JOIN
                           CRM_DM.DM_CUSTOMER_MONEY_DEPOSIT_BASIC_DAILY MD
                               ON MD.CUSTOMER_ID = SM.CUSTOMER_ID
                           LEFT JOIN
                           CRM_DM.DM_CUSTOMER_WITHDRAW_BASIC_DAILY W
                               ON W.CUSTOMER_ID = SM.CUSTOMER_ID
                           LEFT JOIN CRM_DM.DM_CUSTOMER_BONUS_DAILY B
                               ON B.CUSTOMER_ID = SM.CUSTOMER_ID
                           LEFT JOIN
                           CRM_DM.DM_CUSTOMER_TURNOVER_STATS_DAILY TS
                               ON TS.CUSTOMER_ID = SM.CUSTOMER_ID
                           LEFT JOIN
                           CRM_DM.V_DM_CUSTOMER_LOGIN_STATS_DAILY LS
                               ON LS.CUSTOMER_ID = SM.CUSTOMER_ID
                           LEFT JOIN
                           CRM_DM.DM_CUSTOMER_WITHDRAW_STATS_DAILY WS
                               ON WS.CUSTOMER_ID = SM.CUSTOMER_ID
                           LEFT JOIN CRM_DM.DM_CUSTOMER_ACTIVITY_CHURN CAC
                               ON     CAC.CUSTOMER_ID = SM.CUSTOMER_ID
                                  AND CAC.REPORT_DATE = TRUNC (SYSDATE),
                           (SELECT PERIOD_ORDER, PERIOD
                              FROM CRM_DM.PERIOD_ORDER a
                             WHERE PERIOD =
                                     EXTRACT (YEAR FROM SYSDATE) * 100
                                   + EXTRACT (MONTH FROM SYSDATE)) P
                     WHERE isCustomer = 1) X) Y
/

create or replace view V_DM_CUSTOMER_MONEY_DEPOSIT_BASIC_RATIO_DAILY as
select
B.PERIOD_ORDER,
B.PERIOD,
TRUNC(SYSDATE) as REPORT_DATE,
A.CUSTOMER_ID,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN MobileBank_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS MobileBank_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN InternetBank_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS InternetBank_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN ATMCardless_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS ATMCardless_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN ATM_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS ATM_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN CC_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS CC_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN EFT_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS EFT_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Other_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Other_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN MobileBank_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS MobileBank_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN InternetBank_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS InternetBank_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN ATMCardless_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS ATMCardless_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN ATM_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS ATM_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN CC_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS CC_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN EFT_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS EFT_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Other_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Other_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Monday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Monday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Tuesday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Tuesday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Wednesday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Wednesday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Thursday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Thursday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Friday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Friday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Saturday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Saturday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Sunday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Sunday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Workday_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Workday_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Weekend_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Weekend_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Monday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Monday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Tuesday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Tuesday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Wednesday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Wednesday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Thursday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Thursday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Friday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Friday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Saturday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Saturday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Sunday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Sunday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Workday_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Workday_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Weekend_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Weekend_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Day_1_5_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Day_1_5_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Day_6_10_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Day_6_10_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Day_11_15_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Day_11_15_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Day_16_20_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Day_16_20_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Day_21_25_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Day_21_25_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Day_26_31_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Day_26_31_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Day_1_5_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Day_1_5_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Day_6_10_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Day_6_10_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Day_11_15_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Day_11_15_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Day_16_20_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Day_16_20_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Day_21_25_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Day_21_25_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Day_26_31_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Day_26_31_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_0_3_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_0_3_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_3_6_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_3_6_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_6_9_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_6_9_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_9_12_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_9_12_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_12_15_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_12_15_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_15_18_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_15_18_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_18_21_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_18_21_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN Hour_21_24_Deposit_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS Hour_21_24_Deposit_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_0_3_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_0_3_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_3_6_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_3_6_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_6_9_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_6_9_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_9_12_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_9_12_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_12_15_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_12_15_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_15_18_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_15_18_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_18_21_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_18_21_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN Hour_21_24_Deposit_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS Hour_21_24_Deposit_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_0_10_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_0_10_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_10_20_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_10_20_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_20_50_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_20_50_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_50_100_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_50_100_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_100_250_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_100_250_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_250_500_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_250_500_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_500_1K_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_500_1K_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_1K_5K_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_1K_5K_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_5K_10K_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_5K_10K_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonHafta>0 THEN DepositAmount_10KPlus_Coupon_Count_SonHafta*1.0/ Money_Deposit_Count_SonHafta ELSE -9 END AS DepositAmount_10KPlus_Coupon_Count_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_0_10_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_0_10_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_10_20_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_10_20_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_20_50_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_20_50_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_50_100_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_50_100_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_100_250_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_100_250_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_250_500_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_250_500_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_500_1K_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_500_1K_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_1K_5K_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_1K_5K_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_5K_10K_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_5K_10K_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Amount_SonHafta>0 THEN DepositAmount_10KPlus_Coupon_Amount_SonHafta*1.0/ Money_Deposit_Amount_SonHafta ELSE -9 END AS DepositAmount_10KPlus_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN MobileBank_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS MobileBank_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN InternetBank_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS InternetBank_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN ATMCardless_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS ATMCardless_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN ATM_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS ATM_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN CC_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS CC_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN EFT_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS EFT_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Other_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Other_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN MobileBank_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS MobileBank_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN InternetBank_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS InternetBank_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN ATMCardless_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS ATMCardless_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN ATM_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS ATM_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN CC_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS CC_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN EFT_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS EFT_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Other_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Other_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Monday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Monday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Tuesday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Tuesday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Wednesday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Wednesday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Thursday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Thursday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Friday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Friday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Saturday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Saturday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Sunday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Sunday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Workday_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Workday_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Weekend_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Weekend_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Monday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Monday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Tuesday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Tuesday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Wednesday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Wednesday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Thursday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Thursday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Friday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Friday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Saturday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Saturday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Sunday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Sunday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Workday_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Workday_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Weekend_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Weekend_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Day_1_5_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Day_1_5_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Day_6_10_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Day_6_10_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Day_11_15_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Day_11_15_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Day_16_20_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Day_16_20_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Day_21_25_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Day_21_25_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Day_26_31_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Day_26_31_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Day_1_5_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Day_1_5_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Day_6_10_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Day_6_10_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Day_11_15_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Day_11_15_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Day_16_20_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Day_16_20_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Day_21_25_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Day_21_25_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Day_26_31_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Day_26_31_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_0_3_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_0_3_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_3_6_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_3_6_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_6_9_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_6_9_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_9_12_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_9_12_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_12_15_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_12_15_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_15_18_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_15_18_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_18_21_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_18_21_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN Hour_21_24_Deposit_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS Hour_21_24_Deposit_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_0_3_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_0_3_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_3_6_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_3_6_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_6_9_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_6_9_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_9_12_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_9_12_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_12_15_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_12_15_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_15_18_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_15_18_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_18_21_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_18_21_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN Hour_21_24_Deposit_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS Hour_21_24_Deposit_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_0_10_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_0_10_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_10_20_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_10_20_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_20_50_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_20_50_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_50_100_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_50_100_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_100_250_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_100_250_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_250_500_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_250_500_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_500_1K_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_500_1K_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_1K_5K_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_1K_5K_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_5K_10K_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_5K_10K_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_SonAy>0 THEN DepositAmount_10KPlus_Coupon_Count_SonAy*1.0/ Money_Deposit_Count_SonAy ELSE -9 END AS DepositAmount_10KPlus_Coupon_Count_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_0_10_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_0_10_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_10_20_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_10_20_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_20_50_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_20_50_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_50_100_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_50_100_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_100_250_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_100_250_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_250_500_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_250_500_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_500_1K_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_500_1K_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_1K_5K_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_1K_5K_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_5K_10K_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_5K_10K_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Amount_SonAy>0 THEN DepositAmount_10KPlus_Coupon_Amount_SonAy*1.0/ Money_Deposit_Amount_SonAy ELSE -9 END AS DepositAmount_10KPlus_Coupon_Amount_SonAy_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN MobileBank_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS MobileBank_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN InternetBank_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS InternetBank_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN ATMCardless_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS ATMCardless_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN ATM_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS ATM_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN CC_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS CC_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN EFT_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS EFT_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Other_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Other_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN MobileBank_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS MobileBank_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN InternetBank_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS InternetBank_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN ATMCardless_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS ATMCardless_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN ATM_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS ATM_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN CC_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS CC_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN EFT_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS EFT_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Other_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Other_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Monday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Monday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Tuesday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Tuesday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Wednesday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Wednesday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Thursday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Thursday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Friday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Friday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Saturday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Saturday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Sunday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Sunday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Workday_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Workday_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Weekend_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Weekend_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Monday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Monday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Tuesday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Tuesday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Wednesday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Wednesday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Thursday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Thursday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Friday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Friday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Saturday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Saturday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Sunday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Sunday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Workday_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Workday_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Weekend_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Weekend_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Day_1_5_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Day_1_5_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Day_6_10_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Day_6_10_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Day_11_15_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Day_11_15_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Day_16_20_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Day_16_20_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Day_21_25_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Day_21_25_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Day_26_31_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Day_26_31_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Day_1_5_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Day_1_5_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Day_6_10_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Day_6_10_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Day_11_15_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Day_11_15_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Day_16_20_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Day_16_20_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Day_21_25_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Day_21_25_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Day_26_31_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Day_26_31_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_0_3_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_0_3_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_3_6_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_3_6_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_6_9_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_6_9_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_9_12_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_9_12_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_12_15_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_12_15_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_15_18_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_15_18_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_18_21_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_18_21_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN Hour_21_24_Deposit_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS Hour_21_24_Deposit_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_0_3_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_0_3_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_3_6_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_3_6_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_6_9_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_6_9_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_9_12_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_9_12_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_12_15_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_12_15_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_15_18_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_15_18_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_18_21_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_18_21_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN Hour_21_24_Deposit_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS Hour_21_24_Deposit_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_0_10_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_0_10_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_10_20_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_10_20_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_20_50_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_20_50_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_50_100_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_50_100_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_100_250_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_100_250_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_250_500_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_250_500_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_500_1K_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_500_1K_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_1K_5K_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_1K_5K_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_5K_10K_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_5K_10K_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son3Ay>0 THEN DepositAmount_10KPlus_Coupon_Count_Son3Ay*1.0/ Money_Deposit_Count_Son3Ay ELSE -9 END AS DepositAmount_10KPlus_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_0_10_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_0_10_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_10_20_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_10_20_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_20_50_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_20_50_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_50_100_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_50_100_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_100_250_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_100_250_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_250_500_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_250_500_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_500_1K_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_500_1K_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_1K_5K_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_1K_5K_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_5K_10K_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_5K_10K_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son3Ay>0 THEN DepositAmount_10KPlus_Coupon_Amount_Son3Ay*1.0/ Money_Deposit_Amount_Son3Ay ELSE -9 END AS DepositAmount_10KPlus_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN MobileBank_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS MobileBank_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN InternetBank_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS InternetBank_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN ATMCardless_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS ATMCardless_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN ATM_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS ATM_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN CC_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS CC_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN EFT_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS EFT_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Other_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Other_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN MobileBank_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS MobileBank_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN InternetBank_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS InternetBank_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN ATMCardless_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS ATMCardless_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN ATM_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS ATM_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN CC_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS CC_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN EFT_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS EFT_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Other_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Other_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Monday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Monday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Tuesday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Tuesday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Wednesday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Wednesday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Thursday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Thursday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Friday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Friday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Saturday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Saturday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Sunday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Sunday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Workday_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Workday_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Weekend_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Weekend_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Monday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Monday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Tuesday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Tuesday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Wednesday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Wednesday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Thursday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Thursday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Friday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Friday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Saturday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Saturday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Sunday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Sunday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Workday_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Workday_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Weekend_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Weekend_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Day_1_5_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Day_1_5_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Day_6_10_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Day_6_10_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Day_11_15_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Day_11_15_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Day_16_20_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Day_16_20_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Day_21_25_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Day_21_25_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Day_26_31_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Day_26_31_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Day_1_5_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Day_1_5_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Day_6_10_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Day_6_10_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Day_11_15_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Day_11_15_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Day_16_20_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Day_16_20_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Day_21_25_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Day_21_25_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Day_26_31_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Day_26_31_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_0_3_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_0_3_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_3_6_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_3_6_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_6_9_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_6_9_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_9_12_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_9_12_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_12_15_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_12_15_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_15_18_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_15_18_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_18_21_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_18_21_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN Hour_21_24_Deposit_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS Hour_21_24_Deposit_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_0_3_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_0_3_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_3_6_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_3_6_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_6_9_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_6_9_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_9_12_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_9_12_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_12_15_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_12_15_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_15_18_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_15_18_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_18_21_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_18_21_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN Hour_21_24_Deposit_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS Hour_21_24_Deposit_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_0_10_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_0_10_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_10_20_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_10_20_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_20_50_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_20_50_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_50_100_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_50_100_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_100_250_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_100_250_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_250_500_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_250_500_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_500_1K_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_500_1K_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_1K_5K_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_1K_5K_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_5K_10K_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_5K_10K_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son6Ay>0 THEN DepositAmount_10KPlus_Coupon_Count_Son6Ay*1.0/ Money_Deposit_Count_Son6Ay ELSE -9 END AS DepositAmount_10KPlus_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_0_10_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_0_10_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_10_20_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_10_20_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_20_50_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_20_50_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_50_100_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_50_100_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_100_250_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_100_250_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_250_500_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_250_500_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_500_1K_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_500_1K_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_1K_5K_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_1K_5K_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_5K_10K_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_5K_10K_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son6Ay>0 THEN DepositAmount_10KPlus_Coupon_Amount_Son6Ay*1.0/ Money_Deposit_Amount_Son6Ay ELSE -9 END AS DepositAmount_10KPlus_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN MobileBank_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS MobileBank_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN InternetBank_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS InternetBank_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN ATMCardless_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS ATMCardless_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN ATM_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS ATM_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN CC_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS CC_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN EFT_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS EFT_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Other_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Other_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN MobileBank_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS MobileBank_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN InternetBank_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS InternetBank_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN ATMCardless_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS ATMCardless_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN ATM_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS ATM_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN CC_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS CC_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN EFT_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS EFT_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Other_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Other_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Monday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Monday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Tuesday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Tuesday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Wednesday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Wednesday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Thursday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Thursday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Friday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Friday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Saturday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Saturday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Sunday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Sunday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Workday_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Workday_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Weekend_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Weekend_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Monday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Monday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Tuesday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Tuesday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Wednesday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Wednesday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Thursday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Thursday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Friday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Friday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Saturday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Saturday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Sunday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Sunday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Workday_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Workday_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Weekend_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Weekend_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Day_1_5_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Day_1_5_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Day_6_10_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Day_6_10_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Day_11_15_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Day_11_15_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Day_16_20_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Day_16_20_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Day_21_25_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Day_21_25_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Day_26_31_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Day_26_31_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Day_1_5_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Day_1_5_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Day_6_10_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Day_6_10_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Day_11_15_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Day_11_15_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Day_16_20_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Day_16_20_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Day_21_25_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Day_21_25_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Day_26_31_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Day_26_31_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_0_3_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_0_3_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_3_6_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_3_6_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_6_9_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_6_9_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_9_12_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_9_12_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_12_15_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_12_15_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_15_18_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_15_18_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_18_21_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_18_21_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN Hour_21_24_Deposit_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS Hour_21_24_Deposit_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_0_3_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_0_3_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_3_6_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_3_6_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_6_9_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_6_9_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_9_12_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_9_12_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_12_15_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_12_15_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_15_18_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_15_18_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_18_21_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_18_21_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN Hour_21_24_Deposit_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS Hour_21_24_Deposit_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_0_10_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_0_10_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_10_20_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_10_20_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_20_50_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_20_50_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_50_100_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_50_100_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_100_250_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_100_250_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_250_500_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_250_500_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_500_1K_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_500_1K_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_1K_5K_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_1K_5K_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_5K_10K_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_5K_10K_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Count_Son12Ay>0 THEN DepositAmount_10KPlus_Coupon_Count_Son12Ay*1.0/ Money_Deposit_Count_Son12Ay ELSE -9 END AS DepositAmount_10KPlus_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_0_10_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_0_10_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_10_20_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_10_20_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_20_50_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_20_50_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_50_100_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_50_100_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_100_250_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_100_250_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_250_500_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_250_500_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_500_1K_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_500_1K_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_1K_5K_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_1K_5K_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_5K_10K_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_5K_10K_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Money_Deposit_Amount_Son12Ay>0 THEN DepositAmount_10KPlus_Coupon_Amount_Son12Ay*1.0/ Money_Deposit_Amount_Son12Ay ELSE -9 END AS DepositAmount_10KPlus_Coupon_Amount_Son12Ay_Ratio,
SYSDATE as DWH_DATE
FROM CRM_DM.DM_CUSTOMER_MONEY_DEPOSIT_BASIC_DAILY A,
(SELECT * FROM CRM_DM.PERIOD_ORDER WHERE PERIOD=EXTRACT(YEAR FROM sysdate)*100+EXTRACT(MONTH FROM sysdate)) B
/

create or replace view V_DM_CUSTOMER_WITHDRAW_BASIC_RATIO_DAILY as
select
B.PERIOD_ORDER,
B.PERIOD,
TRUNC(SYSDATE) as REPORT_DATE,
A.CUSTOMER_ID,
CASE WHEN Withdraw_Count_SonHafta>0 THEN NumofWithdraw_Instant_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS NumofWithdraw_Instant_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_Instant_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_Instant_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN NumofWithdraw_WithinDay_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS NumofWithdraw_WithinDay_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_WithinDay_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_WithinDay_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Monday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Monday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Tuesday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Tuesday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Wednesday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Wednesday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Thursday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Thursday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Friday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Friday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Saturday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Saturday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Sunday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Sunday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Workday_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Workday_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Weekend_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Weekend_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Monday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Monday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Tuesday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Tuesday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Wednesday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Wednesday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Thursday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Thursday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Friday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Friday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Saturday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Saturday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Sunday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Sunday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Workday_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Workday_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Weekend_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Weekend_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Day_1_5_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Day_1_5_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Day_6_10_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Day_6_10_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Day_11_15_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Day_11_15_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Day_16_20_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Day_16_20_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Day_21_25_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Day_21_25_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Day_26_31_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Day_26_31_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Day_1_5_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Day_1_5_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Day_6_10_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Day_6_10_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Day_11_15_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Day_11_15_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Day_16_20_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Day_16_20_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Day_21_25_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Day_21_25_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Day_26_31_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Day_26_31_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_0_3_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_0_3_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_3_6_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_3_6_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_6_9_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_6_9_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_9_12_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_9_12_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_12_15_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_12_15_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_15_18_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_15_18_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_18_21_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_18_21_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN Hour_21_24_Withdraw_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS Hour_21_24_Withdraw_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_0_3_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_0_3_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_3_6_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_3_6_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_6_9_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_6_9_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_9_12_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_9_12_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_12_15_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_12_15_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_15_18_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_15_18_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_18_21_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_18_21_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN Hour_21_24_Withdraw_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS Hour_21_24_Withdraw_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_0_10_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_0_10_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_10_20_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_10_20_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_20_50_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_20_50_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_50_100_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_50_100_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_100_250_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_100_250_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_250_500_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_250_500_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_500_1K_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_1K_5K_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_5K_10K_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonHafta>0 THEN WithdrawAmount_10KPlus_Coupon_Count_SonHafta*1.0/ Withdraw_Count_SonHafta ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Count_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_0_10_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_0_10_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_10_20_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_10_20_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_20_50_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_20_50_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_50_100_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_50_100_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_100_250_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_100_250_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_250_500_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_250_500_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_500_1K_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_1K_5K_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_5K_10K_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Amount_SonHafta>0 THEN WithdrawAmount_10KPlus_Coupon_Amount_SonHafta*1.0/ Withdraw_Amount_SonHafta ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Amount_SonHafta_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN NumofWithdraw_Instant_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS NumofWithdraw_Instant_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_Instant_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_Instant_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN NumofWithdraw_WithinDay_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS NumofWithdraw_WithinDay_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_WithinDay_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_WithinDay_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Monday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Monday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Tuesday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Tuesday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Wednesday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Wednesday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Thursday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Thursday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Friday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Friday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Saturday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Saturday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Sunday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Sunday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Workday_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Workday_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Weekend_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Weekend_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Monday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Monday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Tuesday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Tuesday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Wednesday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Wednesday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Thursday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Thursday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Friday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Friday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Saturday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Saturday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Sunday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Sunday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Workday_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Workday_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Weekend_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Weekend_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Day_1_5_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Day_1_5_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Day_6_10_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Day_6_10_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Day_11_15_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Day_11_15_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Day_16_20_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Day_16_20_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Day_21_25_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Day_21_25_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Day_26_31_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Day_26_31_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Day_1_5_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Day_1_5_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Day_6_10_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Day_6_10_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Day_11_15_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Day_11_15_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Day_16_20_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Day_16_20_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Day_21_25_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Day_21_25_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Day_26_31_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Day_26_31_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_0_3_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_0_3_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_3_6_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_3_6_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_6_9_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_6_9_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_9_12_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_9_12_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_12_15_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_12_15_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_15_18_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_15_18_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_18_21_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_18_21_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN Hour_21_24_Withdraw_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS Hour_21_24_Withdraw_Count_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_0_3_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_0_3_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_3_6_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_3_6_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_6_9_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_6_9_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_9_12_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_9_12_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_12_15_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_12_15_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_15_18_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_15_18_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_18_21_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_18_21_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN Hour_21_24_Withdraw_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS Hour_21_24_Withdraw_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_0_10_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_0_10_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_10_20_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_10_20_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_20_50_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_20_50_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_50_100_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_50_100_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_100_250_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_100_250_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_250_500_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_250_500_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_500_1K_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_1K_5K_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_5K_10K_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Count_SonAy>0 THEN WithdrawAmount_10KPlus_Coupon_Count_SonAy*1.0/ Withdraw_Count_SonAy ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Count_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_0_10_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_0_10_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_10_20_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_10_20_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_20_50_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_20_50_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_50_100_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_50_100_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_100_250_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_100_250_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_250_500_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_250_500_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_500_1K_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_1K_5K_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_5K_10K_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Amount_SonAy>0 THEN WithdrawAmount_10KPlus_Coupon_Amount_SonAy*1.0/ Withdraw_Amount_SonAy ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Amount_SonAy_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN NumofWithdraw_Instant_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS NumofWithdraw_Instant_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_Instant_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_Instant_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN NumofWithdraw_WithinDay_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS NumofWithdraw_WithinDay_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_WithinDay_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_WithinDay_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Monday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Monday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Tuesday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Tuesday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Wednesday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Wednesday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Thursday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Thursday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Friday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Friday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Saturday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Saturday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Sunday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Sunday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Workday_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Workday_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Weekend_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Weekend_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Monday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Monday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Tuesday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Tuesday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Wednesday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Wednesday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Thursday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Thursday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Friday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Friday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Saturday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Saturday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Sunday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Sunday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Workday_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Workday_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Weekend_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Weekend_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Day_1_5_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Day_1_5_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Day_6_10_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Day_6_10_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Day_11_15_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Day_11_15_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Day_16_20_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Day_16_20_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Day_21_25_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Day_21_25_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Day_26_31_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Day_26_31_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Day_1_5_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Day_1_5_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Day_6_10_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Day_6_10_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Day_11_15_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Day_11_15_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Day_16_20_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Day_16_20_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Day_21_25_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Day_21_25_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Day_26_31_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Day_26_31_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_0_3_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_0_3_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_3_6_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_3_6_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_6_9_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_6_9_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_9_12_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_9_12_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_12_15_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_12_15_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_15_18_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_15_18_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_18_21_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_18_21_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN Hour_21_24_Withdraw_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS Hour_21_24_Withdraw_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_0_3_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_0_3_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_3_6_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_3_6_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_6_9_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_6_9_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_9_12_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_9_12_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_12_15_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_12_15_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_15_18_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_15_18_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_18_21_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_18_21_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN Hour_21_24_Withdraw_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS Hour_21_24_Withdraw_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_0_10_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_0_10_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_10_20_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_10_20_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_20_50_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_20_50_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_50_100_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_50_100_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_100_250_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_100_250_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_250_500_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_250_500_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_500_1K_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_1K_5K_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_5K_10K_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son3Ay>0 THEN WithdrawAmount_10KPlus_Coupon_Count_Son3Ay*1.0/ Withdraw_Count_Son3Ay ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Count_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_0_10_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_0_10_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_10_20_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_10_20_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_20_50_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_20_50_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_50_100_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_50_100_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_100_250_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_100_250_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_250_500_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_250_500_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_500_1K_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_1K_5K_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_5K_10K_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Amount_Son3Ay>0 THEN WithdrawAmount_10KPlus_Coupon_Amount_Son3Ay*1.0/ Withdraw_Amount_Son3Ay ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Amount_Son3Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN NumofWithdraw_Instant_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS NumofWithdraw_Instant_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_Instant_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_Instant_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN NumofWithdraw_WithinDay_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS NumofWithdraw_WithinDay_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_WithinDay_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_WithinDay_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Monday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Monday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Tuesday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Tuesday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Wednesday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Wednesday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Thursday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Thursday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Friday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Friday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Saturday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Saturday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Sunday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Sunday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Workday_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Workday_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Weekend_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Weekend_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Monday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Monday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Tuesday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Tuesday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Wednesday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Wednesday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Thursday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Thursday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Friday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Friday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Saturday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Saturday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Sunday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Sunday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Workday_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Workday_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Weekend_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Weekend_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Day_1_5_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Day_1_5_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Day_6_10_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Day_6_10_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Day_11_15_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Day_11_15_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Day_16_20_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Day_16_20_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Day_21_25_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Day_21_25_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Day_26_31_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Day_26_31_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Day_1_5_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Day_1_5_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Day_6_10_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Day_6_10_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Day_11_15_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Day_11_15_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Day_16_20_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Day_16_20_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Day_21_25_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Day_21_25_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Day_26_31_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Day_26_31_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_0_3_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_0_3_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_3_6_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_3_6_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_6_9_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_6_9_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_9_12_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_9_12_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_12_15_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_12_15_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_15_18_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_15_18_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_18_21_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_18_21_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN Hour_21_24_Withdraw_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS Hour_21_24_Withdraw_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_0_3_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_0_3_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_3_6_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_3_6_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_6_9_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_6_9_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_9_12_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_9_12_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_12_15_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_12_15_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_15_18_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_15_18_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_18_21_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_18_21_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN Hour_21_24_Withdraw_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS Hour_21_24_Withdraw_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_0_10_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_0_10_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_10_20_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_10_20_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_20_50_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_20_50_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_50_100_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_50_100_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_100_250_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_100_250_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_250_500_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_250_500_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_500_1K_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_1K_5K_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_5K_10K_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son6Ay>0 THEN WithdrawAmount_10KPlus_Coupon_Count_Son6Ay*1.0/ Withdraw_Count_Son6Ay ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Count_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_0_10_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_0_10_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_10_20_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_10_20_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_20_50_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_20_50_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_50_100_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_50_100_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_100_250_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_100_250_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_250_500_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_250_500_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_500_1K_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_1K_5K_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_5K_10K_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Amount_Son6Ay>0 THEN WithdrawAmount_10KPlus_Coupon_Amount_Son6Ay*1.0/ Withdraw_Amount_Son6Ay ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Amount_Son6Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN NumofWithdraw_Instant_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS NumofWithdraw_Instant_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_Instant_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_Instant_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN NumofWithdraw_WithinDay_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS NumofWithdraw_WithinDay_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_WithinDay_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_WithinDay_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Monday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Monday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Tuesday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Tuesday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Wednesday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Wednesday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Thursday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Thursday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Friday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Friday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Saturday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Saturday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Sunday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Sunday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Workday_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Workday_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Weekend_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Weekend_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Monday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Monday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Tuesday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Tuesday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Wednesday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Wednesday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Thursday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Thursday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Friday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Friday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Saturday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Saturday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Sunday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Sunday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Workday_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Workday_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Weekend_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Weekend_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Day_1_5_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Day_1_5_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Day_6_10_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Day_6_10_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Day_11_15_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Day_11_15_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Day_16_20_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Day_16_20_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Day_21_25_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Day_21_25_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Day_26_31_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Day_26_31_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Day_1_5_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Day_1_5_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Day_6_10_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Day_6_10_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Day_11_15_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Day_11_15_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Day_16_20_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Day_16_20_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Day_21_25_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Day_21_25_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Day_26_31_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Day_26_31_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_0_3_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_0_3_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_3_6_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_3_6_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_6_9_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_6_9_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_9_12_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_9_12_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_12_15_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_12_15_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_15_18_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_15_18_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_18_21_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_18_21_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN Hour_21_24_Withdraw_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS Hour_21_24_Withdraw_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_0_3_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_0_3_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_3_6_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_3_6_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_6_9_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_6_9_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_9_12_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_9_12_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_12_15_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_12_15_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_15_18_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_15_18_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_18_21_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_18_21_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN Hour_21_24_Withdraw_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS Hour_21_24_Withdraw_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_0_10_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_0_10_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_10_20_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_10_20_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_20_50_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_20_50_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_50_100_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_50_100_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_100_250_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_100_250_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_250_500_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_250_500_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_500_1K_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_1K_5K_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_5K_10K_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Count_Son12Ay>0 THEN WithdrawAmount_10KPlus_Coupon_Count_Son12Ay*1.0/ Withdraw_Count_Son12Ay ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Count_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_0_10_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_0_10_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_10_20_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_10_20_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_20_50_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_20_50_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_50_100_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_50_100_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_100_250_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_100_250_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_250_500_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_250_500_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_500_1K_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_500_1K_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_1K_5K_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_1K_5K_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_5K_10K_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_5K_10K_Coupon_Amount_Son12Ay_Ratio,
CASE WHEN Withdraw_Amount_Son12Ay>0 THEN WithdrawAmount_10KPlus_Coupon_Amount_Son12Ay*1.0/ Withdraw_Amount_Son12Ay ELSE -9 END AS WithdrawAmount_10KPlus_Coupon_Amount_Son12Ay_Ratio,
SYSDATE as DWH_DATE
FROM CRM_DM.DM_CUSTOMER_WITHDRAW_BASIC_DAILY a,
(SELECT * FROM CRM_DM.PERIOD_ORDER WHERE PERIOD=EXTRACT(YEAR FROM sysdate)*100+EXTRACT(MONTH FROM sysdate)) B
/

create or replace view V_DM_CUSTOMER_TURNOVER_DETAIL_RATIO_DAILY as
select
C.PERIOD_ORDER,
C.PERIOD,
TRUNC(SYSDATE) as REPORT_DATE,
A.CUSTOMER_ID,
CASE WHEN Ciro_SonHafta>0 and Payout_Amount_SonHafta IS NULL THEN 0
     WHEN Ciro_SonHafta>0 and Payout_Amount_SonHafta IS NOT NULL THEN 	Payout_Amount_SonHafta	 *1.0/	Ciro_SonHafta	ELSE -9 END AS Payout_Turnover_Ratio_SonHafta,
CASE WHEN Ciro_SonAy>0 and Payout_Amount_SonAy IS NULL THEN 0
     WHEN Ciro_SonAy>0 and Payout_Amount_SonAy IS NOT NULL THEN 	Payout_Amount_SonAy	 *1.0/	Ciro_SonAy	ELSE -9 END AS Payout_Turnover_Ratio_SonAy,
CASE WHEN Ciro_Son3Ay>0 and Payout_Amount_Son3Ay IS NULL THEN 0
     WHEN Ciro_Son3Ay>0 and Payout_Amount_Son3Ay IS NOT NULL THEN 	Payout_Amount_Son3Ay	 *1.0/	Ciro_Son3Ay	ELSE -9 END AS Payout_Turnover_Ratio_Son3Ay,
CASE WHEN Ciro_Son6Ay>0 and Payout_Amount_Son6Ay IS NULL THEN 0
     WHEN Ciro_Son6Ay>0 and Payout_Amount_Son6Ay IS NOT NULL THEN 	Payout_Amount_Son6Ay	 *1.0/	Ciro_Son6Ay	ELSE -9 END AS Payout_Turnover_Ratio_Son6Ay,
CASE WHEN Ciro_Son12Ay>0 and Payout_Amount_Son12Ay IS NULL THEN 0
     WHEN Ciro_Son12Ay>0 and Payout_Amount_Son12Ay IS NOT NULL THEN 	Payout_Amount_Son12Ay	 *1.0/	Ciro_Son12Ay	ELSE -9 END AS Payout_Turnover_Ratio_Son12Ay,
CASE WHEN Ciro_SonHafta>0 THEN KanalAndroid_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS KanalAndroid_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN KanalIOS_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS KanalIOS_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN KanalWEB_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS KanalWEB_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN KanalMobilSite_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS KanalMobilSite_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN KanalCC_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS KanalCC_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN KanalDiger_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS KanalDiger_Ciro_SonHafta_Ratio,
CASE WHEN Iddaa_Ciro_SonHafta>0 THEN Iddaa_KanalAndroid_Ciro_SonHafta*1.0/ Iddaa_Ciro_SonHafta ELSE -9 END AS Iddaa_KanalAndroid_Ciro_SonHafta_Ratio,
CASE WHEN Iddaa_Ciro_SonHafta>0 THEN Iddaa_KanalIOS_Ciro_SonHafta*1.0/ Iddaa_Ciro_SonHafta ELSE -9 END AS Iddaa_KanalIOS_Ciro_SonHafta_Ratio,
CASE WHEN Iddaa_Ciro_SonHafta>0 THEN Iddaa_KanalWEB_Ciro_SonHafta*1.0/ Iddaa_Ciro_SonHafta ELSE -9 END AS Iddaa_KanalWEB_Ciro_SonHafta_Ratio,
CASE WHEN Iddaa_Ciro_SonHafta>0 THEN Iddaa_KanalMobilSite_Ciro_SonHafta*1.0/ Iddaa_Ciro_SonHafta ELSE -9 END AS Iddaa_KanalMobilSite_Ciro_SonHafta_Ratio,
CASE WHEN Iddaa_Ciro_SonHafta>0 THEN Iddaa_KanalCC_Ciro_SonHafta*1.0/ Iddaa_Ciro_SonHafta ELSE -9 END AS Iddaa_KanalCC_Ciro_SonHafta_Ratio,
CASE WHEN Iddaa_Ciro_SonHafta>0 THEN Iddaa_KanalDiger_Ciro_SonHafta*1.0/ Iddaa_Ciro_SonHafta ELSE -9 END AS Iddaa_KanalDiger_Ciro_SonHafta_Ratio,
CASE WHEN STO_Ciro_SonHafta>0 THEN STO_KanalAndroid_Ciro_SonHafta*1.0/ STO_Ciro_SonHafta ELSE -9 END AS STO_KanalAndroid_Ciro_SonHafta_Ratio,
CASE WHEN STO_Ciro_SonHafta>0 THEN STO_KanalIOS_Ciro_SonHafta*1.0/ STO_Ciro_SonHafta ELSE -9 END AS STO_KanalIOS_Ciro_SonHafta_Ratio,
CASE WHEN STO_Ciro_SonHafta>0 THEN STO_KanalWEB_Ciro_SonHafta*1.0/ STO_Ciro_SonHafta ELSE -9 END AS STO_KanalWEB_Ciro_SonHafta_Ratio,
CASE WHEN STO_Ciro_SonHafta>0 THEN STO_KanalMobilSite_Ciro_SonHafta*1.0/ STO_Ciro_SonHafta ELSE -9 END AS STO_KanalMobilSite_Ciro_SonHafta_Ratio,
CASE WHEN STO_Ciro_SonHafta>0 THEN STO_KanalCC_Ciro_SonHafta*1.0/ STO_Ciro_SonHafta ELSE -9 END AS STO_KanalCC_Ciro_SonHafta_Ratio,
CASE WHEN STO_Ciro_SonHafta>0 THEN STO_KanalDiger_Ciro_SonHafta*1.0/ STO_Ciro_SonHafta ELSE -9 END AS STO_KanalDiger_Ciro_SonHafta_Ratio,
CASE WHEN MP_Ciro_SonHafta>0 THEN MP_KanalAndroid_Ciro_SonHafta*1.0/ MP_Ciro_SonHafta ELSE -9 END AS MP_KanalAndroid_Ciro_SonHafta_Ratio,
CASE WHEN MP_Ciro_SonHafta>0 THEN MP_KanalIOS_Ciro_SonHafta*1.0/ MP_Ciro_SonHafta ELSE -9 END AS MP_KanalIOS_Ciro_SonHafta_Ratio,
CASE WHEN MP_Ciro_SonHafta>0 THEN MP_KanalWEB_Ciro_SonHafta*1.0/ MP_Ciro_SonHafta ELSE -9 END AS MP_KanalWEB_Ciro_SonHafta_Ratio,
CASE WHEN MP_Ciro_SonHafta>0 THEN MP_KanalMobilSite_Ciro_SonHafta*1.0/ MP_Ciro_SonHafta ELSE -9 END AS MP_KanalMobilSite_Ciro_SonHafta_Ratio,
CASE WHEN MP_Ciro_SonHafta>0 THEN MP_KanalCC_Ciro_SonHafta*1.0/ MP_Ciro_SonHafta ELSE -9 END AS MP_KanalCC_Ciro_SonHafta_Ratio,
CASE WHEN MP_Ciro_SonHafta>0 THEN MP_KanalDiger_Ciro_SonHafta*1.0/ MP_Ciro_SonHafta ELSE -9 END AS MP_KanalDiger_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonAy>0 THEN Iddaa_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS Iddaa_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN STO_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS STO_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN MP_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS MP_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN MP_Hediye_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS MP_Hediye_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN KanalAndroid_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS KanalAndroid_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN KanalIOS_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS KanalIOS_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN KanalWEB_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS KanalWEB_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN KanalMobilSite_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS KanalMobilSite_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN KanalCC_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS KanalCC_Ciro_SonAy_Ratio,
CASE WHEN Ciro_SonAy>0 THEN KanalDiger_Ciro_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS KanalDiger_Ciro_SonAy_Ratio,
CASE WHEN Iddaa_Ciro_SonAy>0 THEN Iddaa_KanalAndroid_Ciro_SonAy*1.0/ Iddaa_Ciro_SonAy ELSE -9 END AS Iddaa_KanalAndroid_Ciro_SonAy_Ratio,
CASE WHEN Iddaa_Ciro_SonAy>0 THEN Iddaa_KanalIOS_Ciro_SonAy*1.0/ Iddaa_Ciro_SonAy ELSE -9 END AS Iddaa_KanalIOS_Ciro_SonAy_Ratio,
CASE WHEN Iddaa_Ciro_SonAy>0 THEN Iddaa_KanalWEB_Ciro_SonAy*1.0/ Iddaa_Ciro_SonAy ELSE -9 END AS Iddaa_KanalWEB_Ciro_SonAy_Ratio,
CASE WHEN Iddaa_Ciro_SonAy>0 THEN Iddaa_KanalMobilSite_Ciro_SonAy*1.0/ Iddaa_Ciro_SonAy ELSE -9 END AS Iddaa_KanalMobilSite_Ciro_SonAy_Ratio,
CASE WHEN Iddaa_Ciro_SonAy>0 THEN Iddaa_KanalCC_Ciro_SonAy*1.0/ Iddaa_Ciro_SonAy ELSE -9 END AS Iddaa_KanalCC_Ciro_SonAy_Ratio,
CASE WHEN Iddaa_Ciro_SonAy>0 THEN Iddaa_KanalDiger_Ciro_SonAy*1.0/ Iddaa_Ciro_SonAy ELSE -9 END AS Iddaa_KanalDiger_Ciro_SonAy_Ratio,
CASE WHEN STO_Ciro_SonAy>0 THEN STO_KanalAndroid_Ciro_SonAy*1.0/ STO_Ciro_SonAy ELSE -9 END AS STO_KanalAndroid_Ciro_SonAy_Ratio,
CASE WHEN STO_Ciro_SonAy>0 THEN STO_KanalIOS_Ciro_SonAy*1.0/ STO_Ciro_SonAy ELSE -9 END AS STO_KanalIOS_Ciro_SonAy_Ratio,
CASE WHEN STO_Ciro_SonAy>0 THEN STO_KanalWEB_Ciro_SonAy*1.0/ STO_Ciro_SonAy ELSE -9 END AS STO_KanalWEB_Ciro_SonAy_Ratio,
CASE WHEN STO_Ciro_SonAy>0 THEN STO_KanalMobilSite_Ciro_SonAy*1.0/ STO_Ciro_SonAy ELSE -9 END AS STO_KanalMobilSite_Ciro_SonAy_Ratio,
CASE WHEN STO_Ciro_SonAy>0 THEN STO_KanalCC_Ciro_SonAy*1.0/ STO_Ciro_SonAy ELSE -9 END AS STO_KanalCC_Ciro_SonAy_Ratio,
CASE WHEN STO_Ciro_SonAy>0 THEN STO_KanalDiger_Ciro_SonAy*1.0/ STO_Ciro_SonAy ELSE -9 END AS STO_KanalDiger_Ciro_SonAy_Ratio,
CASE WHEN MP_Ciro_SonAy>0 THEN MP_KanalAndroid_Ciro_SonAy*1.0/ MP_Ciro_SonAy ELSE -9 END AS MP_KanalAndroid_Ciro_SonAy_Ratio,
CASE WHEN MP_Ciro_SonAy>0 THEN MP_KanalIOS_Ciro_SonAy*1.0/ MP_Ciro_SonAy ELSE -9 END AS MP_KanalIOS_Ciro_SonAy_Ratio,
CASE WHEN MP_Ciro_SonAy>0 THEN MP_KanalWEB_Ciro_SonAy*1.0/ MP_Ciro_SonAy ELSE -9 END AS MP_KanalWEB_Ciro_SonAy_Ratio,
CASE WHEN MP_Ciro_SonAy>0 THEN MP_KanalMobilSite_Ciro_SonAy*1.0/ MP_Ciro_SonAy ELSE -9 END AS MP_KanalMobilSite_Ciro_SonAy_Ratio,
CASE WHEN MP_Ciro_SonAy>0 THEN MP_KanalCC_Ciro_SonAy*1.0/ MP_Ciro_SonAy ELSE -9 END AS MP_KanalCC_Ciro_SonAy_Ratio,
CASE WHEN MP_Ciro_SonAy>0 THEN MP_KanalDiger_Ciro_SonAy*1.0/ MP_Ciro_SonAy ELSE -9 END AS MP_KanalDiger_Ciro_SonAy_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN Ciro_HediyeBiletDahil_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS Ciro_HediyeBiletDahil_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN Iddaa_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS Iddaa_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN STO_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS STO_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN MP_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS MP_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN MP_Hediye_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS MP_Hediye_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN KanalAndroid_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS KanalAndroid_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN KanalIOS_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS KanalIOS_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN KanalWEB_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS KanalWEB_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN KanalMobilSite_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS KanalMobilSite_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN KanalCC_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS KanalCC_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son3Ay>0 THEN KanalDiger_Ciro_Son3Ay*1.0/ Ciro_Son3Ay ELSE -9 END AS KanalDiger_Ciro_Son3Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son3Ay>0 THEN Iddaa_KanalAndroid_Ciro_Son3Ay*1.0/ Iddaa_Ciro_Son3Ay ELSE -9 END AS Iddaa_KanalAndroid_Ciro_Son3Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son3Ay>0 THEN Iddaa_KanalIOS_Ciro_Son3Ay*1.0/ Iddaa_Ciro_Son3Ay ELSE -9 END AS Iddaa_KanalIOS_Ciro_Son3Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son3Ay>0 THEN Iddaa_KanalWEB_Ciro_Son3Ay*1.0/ Iddaa_Ciro_Son3Ay ELSE -9 END AS Iddaa_KanalWEB_Ciro_Son3Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son3Ay>0 THEN Iddaa_KanalMobilSite_Ciro_Son3Ay*1.0/ Iddaa_Ciro_Son3Ay ELSE -9 END AS Iddaa_KanalMobilSite_Ciro_Son3Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son3Ay>0 THEN Iddaa_KanalCC_Ciro_Son3Ay*1.0/ Iddaa_Ciro_Son3Ay ELSE -9 END AS Iddaa_KanalCC_Ciro_Son3Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son3Ay>0 THEN Iddaa_KanalDiger_Ciro_Son3Ay*1.0/ Iddaa_Ciro_Son3Ay ELSE -9 END AS Iddaa_KanalDiger_Ciro_Son3Ay_Ratio,
CASE WHEN STO_Ciro_Son3Ay>0 THEN STO_KanalAndroid_Ciro_Son3Ay*1.0/ STO_Ciro_Son3Ay ELSE -9 END AS STO_KanalAndroid_Ciro_Son3Ay_Ratio,
CASE WHEN STO_Ciro_Son3Ay>0 THEN STO_KanalIOS_Ciro_Son3Ay*1.0/ STO_Ciro_Son3Ay ELSE -9 END AS STO_KanalIOS_Ciro_Son3Ay_Ratio,
CASE WHEN STO_Ciro_Son3Ay>0 THEN STO_KanalWEB_Ciro_Son3Ay*1.0/ STO_Ciro_Son3Ay ELSE -9 END AS STO_KanalWEB_Ciro_Son3Ay_Ratio,
CASE WHEN STO_Ciro_Son3Ay>0 THEN STO_KanalMobilSite_Ciro_Son3Ay*1.0/ STO_Ciro_Son3Ay ELSE -9 END AS STO_KanalMobilSite_Ciro_Son3Ay_Ratio,
CASE WHEN STO_Ciro_Son3Ay>0 THEN STO_KanalCC_Ciro_Son3Ay*1.0/ STO_Ciro_Son3Ay ELSE -9 END AS STO_KanalCC_Ciro_Son3Ay_Ratio,
CASE WHEN STO_Ciro_Son3Ay>0 THEN STO_KanalDiger_Ciro_Son3Ay*1.0/ STO_Ciro_Son3Ay ELSE -9 END AS STO_KanalDiger_Ciro_Son3Ay_Ratio,
CASE WHEN MP_Ciro_Son3Ay>0 THEN MP_KanalAndroid_Ciro_Son3Ay*1.0/ MP_Ciro_Son3Ay ELSE -9 END AS MP_KanalAndroid_Ciro_Son3Ay_Ratio,
CASE WHEN MP_Ciro_Son3Ay>0 THEN MP_KanalIOS_Ciro_Son3Ay*1.0/ MP_Ciro_Son3Ay ELSE -9 END AS MP_KanalIOS_Ciro_Son3Ay_Ratio,
CASE WHEN MP_Ciro_Son3Ay>0 THEN MP_KanalWEB_Ciro_Son3Ay*1.0/ MP_Ciro_Son3Ay ELSE -9 END AS MP_KanalWEB_Ciro_Son3Ay_Ratio,
CASE WHEN MP_Ciro_Son3Ay>0 THEN MP_KanalMobilSite_Ciro_Son3Ay*1.0/ MP_Ciro_Son3Ay ELSE -9 END AS MP_KanalMobilSite_Ciro_Son3Ay_Ratio,
CASE WHEN MP_Ciro_Son3Ay>0 THEN MP_KanalCC_Ciro_Son3Ay*1.0/ MP_Ciro_Son3Ay ELSE -9 END AS MP_KanalCC_Ciro_Son3Ay_Ratio,
CASE WHEN MP_Ciro_Son3Ay>0 THEN MP_KanalDiger_Ciro_Son3Ay*1.0/ MP_Ciro_Son3Ay ELSE -9 END AS MP_KanalDiger_Ciro_Son3Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN Iddaa_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS Iddaa_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN STO_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS STO_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN MP_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS MP_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN MP_Hediye_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS MP_Hediye_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN KanalAndroid_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS KanalAndroid_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN KanalIOS_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS KanalIOS_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN KanalWEB_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS KanalWEB_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN KanalMobilSite_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS KanalMobilSite_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN KanalCC_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS KanalCC_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN KanalDiger_Ciro_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS KanalDiger_Ciro_Son6Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son6Ay>0 THEN Iddaa_KanalAndroid_Ciro_Son6Ay*1.0/ Iddaa_Ciro_Son6Ay ELSE -9 END AS Iddaa_KanalAndroid_Ciro_Son6Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son6Ay>0 THEN Iddaa_KanalIOS_Ciro_Son6Ay*1.0/ Iddaa_Ciro_Son6Ay ELSE -9 END AS Iddaa_KanalIOS_Ciro_Son6Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son6Ay>0 THEN Iddaa_KanalWEB_Ciro_Son6Ay*1.0/ Iddaa_Ciro_Son6Ay ELSE -9 END AS Iddaa_KanalWEB_Ciro_Son6Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son6Ay>0 THEN Iddaa_KanalMobilSite_Ciro_Son6Ay*1.0/ Iddaa_Ciro_Son6Ay ELSE -9 END AS Iddaa_KanalMobilSite_Ciro_Son6Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son6Ay>0 THEN Iddaa_KanalCC_Ciro_Son6Ay*1.0/ Iddaa_Ciro_Son6Ay ELSE -9 END AS Iddaa_KanalCC_Ciro_Son6Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son6Ay>0 THEN Iddaa_KanalDiger_Ciro_Son6Ay*1.0/ Iddaa_Ciro_Son6Ay ELSE -9 END AS Iddaa_KanalDiger_Ciro_Son6Ay_Ratio,
CASE WHEN STO_Ciro_Son6Ay>0 THEN STO_KanalAndroid_Ciro_Son6Ay*1.0/ STO_Ciro_Son6Ay ELSE -9 END AS STO_KanalAndroid_Ciro_Son6Ay_Ratio,
CASE WHEN STO_Ciro_Son6Ay>0 THEN STO_KanalIOS_Ciro_Son6Ay*1.0/ STO_Ciro_Son6Ay ELSE -9 END AS STO_KanalIOS_Ciro_Son6Ay_Ratio,
CASE WHEN STO_Ciro_Son6Ay>0 THEN STO_KanalWEB_Ciro_Son6Ay*1.0/ STO_Ciro_Son6Ay ELSE -9 END AS STO_KanalWEB_Ciro_Son6Ay_Ratio,
CASE WHEN STO_Ciro_Son6Ay>0 THEN STO_KanalMobilSite_Ciro_Son6Ay*1.0/ STO_Ciro_Son6Ay ELSE -9 END AS STO_KanalMobilSite_Ciro_Son6Ay_Ratio,
CASE WHEN STO_Ciro_Son6Ay>0 THEN STO_KanalCC_Ciro_Son6Ay*1.0/ STO_Ciro_Son6Ay ELSE -9 END AS STO_KanalCC_Ciro_Son6Ay_Ratio,
CASE WHEN STO_Ciro_Son6Ay>0 THEN STO_KanalDiger_Ciro_Son6Ay*1.0/ STO_Ciro_Son6Ay ELSE -9 END AS STO_KanalDiger_Ciro_Son6Ay_Ratio,
CASE WHEN MP_Ciro_Son6Ay>0 THEN MP_KanalAndroid_Ciro_Son6Ay*1.0/ MP_Ciro_Son6Ay ELSE -9 END AS MP_KanalAndroid_Ciro_Son6Ay_Ratio,
CASE WHEN MP_Ciro_Son6Ay>0 THEN MP_KanalIOS_Ciro_Son6Ay*1.0/ MP_Ciro_Son6Ay ELSE -9 END AS MP_KanalIOS_Ciro_Son6Ay_Ratio,
CASE WHEN MP_Ciro_Son6Ay>0 THEN MP_KanalWEB_Ciro_Son6Ay*1.0/ MP_Ciro_Son6Ay ELSE -9 END AS MP_KanalWEB_Ciro_Son6Ay_Ratio,
CASE WHEN MP_Ciro_Son6Ay>0 THEN MP_KanalMobilSite_Ciro_Son6Ay*1.0/ MP_Ciro_Son6Ay ELSE -9 END AS MP_KanalMobilSite_Ciro_Son6Ay_Ratio,
CASE WHEN MP_Ciro_Son6Ay>0 THEN MP_KanalCC_Ciro_Son6Ay*1.0/ MP_Ciro_Son6Ay ELSE -9 END AS MP_KanalCC_Ciro_Son6Ay_Ratio,
CASE WHEN MP_Ciro_Son6Ay>0 THEN MP_KanalDiger_Ciro_Son6Ay*1.0/ MP_Ciro_Son6Ay ELSE -9 END AS MP_KanalDiger_Ciro_Son6Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN Iddaa_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS Iddaa_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN STO_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS STO_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN MP_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS MP_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN MP_Hediye_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS MP_Hediye_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN KanalAndroid_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS KanalAndroid_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN KanalIOS_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS KanalIOS_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN KanalWEB_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS KanalWEB_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN KanalMobilSite_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS KanalMobilSite_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN KanalCC_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS KanalCC_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN KanalDiger_Ciro_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS KanalDiger_Ciro_Son12Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son12Ay>0 THEN Iddaa_KanalAndroid_Ciro_Son12Ay*1.0/ Iddaa_Ciro_Son12Ay ELSE -9 END AS Iddaa_KanalAndroid_Ciro_Son12Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son12Ay>0 THEN Iddaa_KanalIOS_Ciro_Son12Ay*1.0/ Iddaa_Ciro_Son12Ay ELSE -9 END AS Iddaa_KanalIOS_Ciro_Son12Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son12Ay>0 THEN Iddaa_KanalWEB_Ciro_Son12Ay*1.0/ Iddaa_Ciro_Son12Ay ELSE -9 END AS Iddaa_KanalWEB_Ciro_Son12Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son12Ay>0 THEN Iddaa_KanalMobilSite_Ciro_Son12Ay*1.0/ Iddaa_Ciro_Son12Ay ELSE -9 END AS Iddaa_KanalMobilSite_Ciro_Son12Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son12Ay>0 THEN Iddaa_KanalCC_Ciro_Son12Ay*1.0/ Iddaa_Ciro_Son12Ay ELSE -9 END AS Iddaa_KanalCC_Ciro_Son12Ay_Ratio,
CASE WHEN Iddaa_Ciro_Son12Ay>0 THEN Iddaa_KanalDiger_Ciro_Son12Ay*1.0/ Iddaa_Ciro_Son12Ay ELSE -9 END AS Iddaa_KanalDiger_Ciro_Son12Ay_Ratio,
CASE WHEN STO_Ciro_Son12Ay>0 THEN STO_KanalAndroid_Ciro_Son12Ay*1.0/ STO_Ciro_Son12Ay ELSE -9 END AS STO_KanalAndroid_Ciro_Son12Ay_Ratio,
CASE WHEN STO_Ciro_Son12Ay>0 THEN STO_KanalIOS_Ciro_Son12Ay*1.0/ STO_Ciro_Son12Ay ELSE -9 END AS STO_KanalIOS_Ciro_Son12Ay_Ratio,
CASE WHEN STO_Ciro_Son12Ay>0 THEN STO_KanalWEB_Ciro_Son12Ay*1.0/ STO_Ciro_Son12Ay ELSE -9 END AS STO_KanalWEB_Ciro_Son12Ay_Ratio,
CASE WHEN STO_Ciro_Son12Ay>0 THEN STO_KanalMobilSite_Ciro_Son12Ay*1.0/ STO_Ciro_Son12Ay ELSE -9 END AS STO_KanalMobilSite_Ciro_Son12Ay_Ratio,
CASE WHEN STO_Ciro_Son12Ay>0 THEN STO_KanalCC_Ciro_Son12Ay*1.0/ STO_Ciro_Son12Ay ELSE -9 END AS STO_KanalCC_Ciro_Son12Ay_Ratio,
CASE WHEN STO_Ciro_Son12Ay>0 THEN STO_KanalDiger_Ciro_Son12Ay*1.0/ STO_Ciro_Son12Ay ELSE -9 END AS STO_KanalDiger_Ciro_Son12Ay_Ratio,
CASE WHEN MP_Ciro_Son12Ay>0 THEN MP_KanalAndroid_Ciro_Son12Ay*1.0/ MP_Ciro_Son12Ay ELSE -9 END AS MP_KanalAndroid_Ciro_Son12Ay_Ratio,
CASE WHEN MP_Ciro_Son12Ay>0 THEN MP_KanalIOS_Ciro_Son12Ay*1.0/ MP_Ciro_Son12Ay ELSE -9 END AS MP_KanalIOS_Ciro_Son12Ay_Ratio,
CASE WHEN MP_Ciro_Son12Ay>0 THEN MP_KanalWEB_Ciro_Son12Ay*1.0/ MP_Ciro_Son12Ay ELSE -9 END AS MP_KanalWEB_Ciro_Son12Ay_Ratio,
CASE WHEN MP_Ciro_Son12Ay>0 THEN MP_KanalMobilSite_Ciro_Son12Ay*1.0/ MP_Ciro_Son12Ay ELSE -9 END AS MP_KanalMobilSite_Ciro_Son12Ay_Ratio,
CASE WHEN MP_Ciro_Son12Ay>0 THEN MP_KanalCC_Ciro_Son12Ay*1.0/ MP_Ciro_Son12Ay ELSE -9 END AS MP_KanalCC_Ciro_Son12Ay_Ratio,
CASE WHEN MP_Ciro_Son12Ay>0 THEN MP_KanalDiger_Ciro_Son12Ay*1.0/ MP_Ciro_Son12Ay ELSE -9 END AS MP_KanalDiger_Ciro_Son12Ay_Ratio,
CASE WHEN Ciro_SonAy>0 THEN Ciro_HediyeBiletDahil_SonAy*1.0/ Ciro_SonAy ELSE -9 END AS Ciro_HediyeBiletDahil_SonAy_Ratio,
CASE WHEN Ciro_Son6Ay>0 THEN Ciro_HediyeBiletDahil_Son6Ay*1.0/ Ciro_Son6Ay ELSE -9 END AS Ciro_HediyeBiletDahil_Son6Ay_Ratio,
CASE WHEN Ciro_Son12Ay>0 THEN Ciro_HediyeBiletDahil_Son12Ay*1.0/ Ciro_Son12Ay ELSE -9 END AS Ciro_HediyeBiletDahil_Son12Ay_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN Ciro_HediyeBiletDahil_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS Ciro_HediyeBiletDahil_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN Iddaa_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS Iddaa_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN MP_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS MP_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN MP_Hediye_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS MP_Hediye_Ciro_SonHafta_Ratio,
CASE WHEN Ciro_SonHafta>0 THEN STO_Ciro_SonHafta*1.0/ Ciro_SonHafta ELSE -9 END AS STO_Ciro_SonHafta_Ratio,
SYSDATE as DWH_DATE
FROM CRM_DM.DM_CUSTOMER_TURNOVER_DETAIL_DAILY a
left join CRM_DM.DM_CUSTOMER_PAYOUT_DAILY b on A.CUSTOMER_ID=B.CUSTOMER_ID,
(SELECT * FROM CRM_DM.PERIOD_ORDER WHERE PERIOD=EXTRACT(YEAR FROM sysdate)*100+EXTRACT(MONTH FROM sysdate)) C
/

create or replace view V_DM_CUSTOMER_TRIBUN_PLAYED_DAILY as
select
CUSTOMER_ID,
TRUNC(SYSDATE) as REPORT_DATE,
max(case when TribunRelated_Coupon_Count>0 then PLAY_DATE end) as Last_TribunRelated_Coupon_Date,
TRUNC(SYSDATE) -  max(case when TribunRelated_Coupon_Count>0 then PLAY_DATE end) as DaysAfterLastTribunRelated_Coupon,
max(case when TribunPlayed_Coupon_Count>0 then PLAY_DATE end) as Last_TribunPlayed_Coupon_Date,
TRUNC(SYSDATE) - max(case when TribunPlayed_Coupon_Count>0 then PLAY_DATE end) as DaysAfterLastTribunPlayed_Coupon,
count(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_LastWeek,
count(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_LastMonth,
count(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_Last3Months,
count(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_Last6Months,
count(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_Last12Months,
count(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) and TribunPlayed_Coupon_Count>0 then PLAY_DATE end) as NumofTribunPlayed_Coupon_Day_LastWeek,
count(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) and TribunPlayed_Coupon_Count>0 then PLAY_DATE end) as NumofTribunPlayed_Coupon_Day_LastMonth,
count(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) and TribunPlayed_Coupon_Count>0 then PLAY_DATE end) as NumofTribunPlayed_Coupon_Day_Last3Months,
count(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) and TribunPlayed_Coupon_Count>0 then PLAY_DATE end) as NumofTribunPlayed_Coupon_Day_Last6Months,
count(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) and TribunPlayed_Coupon_Count>0 then PLAY_DATE end) as NumofTribunPlayed_Coupon_Day_Last12Months,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Count else 0 end) as TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Amount else 0 end) as TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Count else 0 end) as Android_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Count else 0 end) as IOS_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Count else 0 end) as WEB_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Count else 0 end) as Mobilsite_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Count else 0 end) as CC_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Count else 0 end) as OtherChannel_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Count else 0 end) as MobileApp_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Count else 0 end) as MobileALL_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Amount else 0 end) as Android_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Amount else 0 end) as IOS_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Amount else 0 end) as WEB_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Amount else 0 end) as Mobilsite_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Amount else 0 end) as CC_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Amount else 0 end) as OtherChannel_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Amount else 0 end) as MobileApp_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Amount else 0 end) as MobileALL_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Count else 0 end) as Monday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Count else 0 end) as Tuesday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Count else 0 end) as Wednesday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Count else 0 end) as Thursday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Count else 0 end) as Friday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Count else 0 end) as Saturday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Count else 0 end) as Sunday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Count else 0 end) as Workday_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Count else 0 end) as Weekend_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Amount else 0 end) as Monday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Amount else 0 end) as Tuesday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Amount else 0 end) as Wednesday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Amount else 0 end) as Thursday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Amount else 0 end) as Friday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Amount else 0 end) as Saturday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Amount else 0 end) as Sunday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Amount else 0 end) as Workday_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Amount else 0 end) as Weekend_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Count else 0 end) as Day_1_5_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Count else 0 end) as Day_6_10_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Count else 0 end) as Day_11_15_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Count else 0 end) as Day_16_20_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Count else 0 end) as Day_21_25_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Count else 0 end) as Day_26_31_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Amount else 0 end) as Day_1_5_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Amount else 0 end) as Day_6_10_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Amount else 0 end) as Day_11_15_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Amount else 0 end) as Day_16_20_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Amount else 0 end) as Day_21_25_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Amount else 0 end) as Day_26_31_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Count else 0 end) as Hour_0_3_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Count else 0 end) as Hour_3_6_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Count else 0 end) as Hour_6_9_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Count else 0 end) as Hour_9_12_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Count else 0 end) as Hour_12_15_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Count else 0 end) as Hour_15_18_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Count else 0 end) as Hour_18_21_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Count else 0 end) as Hour_21_24_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Amount else 0 end) as Hour_0_3_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Amount else 0 end) as Hour_3_6_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Amount else 0 end) as Hour_6_9_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Amount else 0 end) as Hour_9_12_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Amount else 0 end) as Hour_12_15_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Amount else 0 end) as Hour_15_18_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Amount else 0 end) as Hour_18_21_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Amount else 0 end) as Hour_21_24_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Count else 0 end) as Football_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Count else 0 end) as Basketball_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Count else 0 end) as Duel_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Football_Duel_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Count else 0 end) as Live_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Count else 0 end) as Handball_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Count else 0 end) as Volleyball_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Count else 0 end) as Tennis_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Count else 0 end) as Motorsport_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Count else 0 end) as OtherGames_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Count else 0 end) as Only_Football_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Duel_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Count else 0 end) as Only_Live_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Count else 0 end) as Only_Handball_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Count else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Count else 0 end) as Only_Tennis_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Count else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Count else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Amount else 0 end) as Football_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Amount else 0 end) as Basketball_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Amount else 0 end) as Duel_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Football_Duel_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Amount else 0 end) as Live_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Amount else 0 end) as Handball_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Volleyball_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Amount else 0 end) as Tennis_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Motorsport_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Amount else 0 end) as OtherGames_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Duel_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Amount else 0 end) as Only_Live_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Amount else 0 end) as Only_Handball_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Amount else 0 end) as Only_Tennis_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Amount else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Count else 0 end) as Odd_1_3_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Count else 0 end) as Odd_3_5_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Count else 0 end) as Odd_5_10_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Count else 0 end) as Odd_10_20_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Count else 0 end) as Odd_20_50_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Count else 0 end) as Odd_50_100_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Count else 0 end) as Odd_100_250_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Count else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Count else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Count else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Count else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Amount else 0 end) as Odd_1_3_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Amount else 0 end) as Odd_3_5_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Amount else 0 end) as Odd_5_10_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Amount else 0 end) as Odd_10_20_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Amount else 0 end) as Odd_20_50_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Amount else 0 end) as Odd_50_100_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Amount else 0 end) as Odd_100_250_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Amount else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Amount else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Amount else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Amount else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Count else 0 end) as TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Amount else 0 end) as TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Count else 0 end) as Android_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Count else 0 end) as IOS_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Count else 0 end) as WEB_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Count else 0 end) as Mobilsite_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Count else 0 end) as CC_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Count else 0 end) as OtherChannel_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Count else 0 end) as MobileApp_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Count else 0 end) as MobileALL_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Amount else 0 end) as Android_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Amount else 0 end) as IOS_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Amount else 0 end) as WEB_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Amount else 0 end) as Mobilsite_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Amount else 0 end) as CC_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Amount else 0 end) as OtherChannel_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Amount else 0 end) as MobileApp_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Amount else 0 end) as MobileALL_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Count else 0 end) as Monday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Count else 0 end) as Tuesday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Count else 0 end) as Wednesday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Count else 0 end) as Thursday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Count else 0 end) as Friday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Count else 0 end) as Saturday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Count else 0 end) as Sunday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Count else 0 end) as Workday_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Count else 0 end) as Weekend_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Amount else 0 end) as Monday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Amount else 0 end) as Tuesday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Amount else 0 end) as Wednesday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Amount else 0 end) as Thursday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Amount else 0 end) as Friday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Amount else 0 end) as Saturday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Amount else 0 end) as Sunday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Amount else 0 end) as Workday_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Amount else 0 end) as Weekend_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Count else 0 end) as Day_1_5_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Count else 0 end) as Day_6_10_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Count else 0 end) as Day_11_15_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Count else 0 end) as Day_16_20_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Count else 0 end) as Day_21_25_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Count else 0 end) as Day_26_31_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Amount else 0 end) as Day_1_5_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Amount else 0 end) as Day_6_10_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Amount else 0 end) as Day_11_15_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Amount else 0 end) as Day_16_20_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Amount else 0 end) as Day_21_25_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Amount else 0 end) as Day_26_31_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Count else 0 end) as Hour_0_3_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Count else 0 end) as Hour_3_6_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Count else 0 end) as Hour_6_9_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Count else 0 end) as Hour_9_12_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Count else 0 end) as Hour_12_15_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Count else 0 end) as Hour_15_18_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Count else 0 end) as Hour_18_21_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Count else 0 end) as Hour_21_24_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Amount else 0 end) as Hour_0_3_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Amount else 0 end) as Hour_3_6_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Amount else 0 end) as Hour_6_9_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Amount else 0 end) as Hour_9_12_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Amount else 0 end) as Hour_12_15_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Amount else 0 end) as Hour_15_18_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Amount else 0 end) as Hour_18_21_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Amount else 0 end) as Hour_21_24_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Count else 0 end) as Football_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Count else 0 end) as Basketball_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Count else 0 end) as Duel_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Football_Duel_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Count else 0 end) as Live_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Count else 0 end) as Handball_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Count else 0 end) as Volleyball_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Count else 0 end) as Tennis_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Count else 0 end) as Motorsport_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Count else 0 end) as OtherGames_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Count else 0 end) as Only_Football_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Duel_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Count else 0 end) as Only_Live_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Count else 0 end) as Only_Handball_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Count else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Count else 0 end) as Only_Tennis_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Count else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Count else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Amount else 0 end) as Football_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Amount else 0 end) as Basketball_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Amount else 0 end) as Duel_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Football_Duel_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Amount else 0 end) as Live_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Amount else 0 end) as Handball_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Volleyball_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Amount else 0 end) as Tennis_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Motorsport_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Amount else 0 end) as OtherGames_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Duel_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Amount else 0 end) as Only_Live_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Amount else 0 end) as Only_Handball_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Amount else 0 end) as Only_Tennis_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Amount else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Count else 0 end) as Odd_1_3_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Count else 0 end) as Odd_3_5_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Count else 0 end) as Odd_5_10_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Count else 0 end) as Odd_10_20_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Count else 0 end) as Odd_20_50_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Count else 0 end) as Odd_50_100_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Count else 0 end) as Odd_100_250_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Count else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Count else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Count else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Count else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Amount else 0 end) as Odd_1_3_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Amount else 0 end) as Odd_3_5_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Amount else 0 end) as Odd_5_10_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Amount else 0 end) as Odd_10_20_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Amount else 0 end) as Odd_20_50_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Amount else 0 end) as Odd_50_100_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Amount else 0 end) as Odd_100_250_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Amount else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Amount else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Amount else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Amount else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Count else 0 end) as TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Amount else 0 end) as TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Count else 0 end) as Android_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Count else 0 end) as IOS_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Count else 0 end) as WEB_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Count else 0 end) as Mobilsite_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Count else 0 end) as CC_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Count else 0 end) as OtherChannel_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Count else 0 end) as MobileApp_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Count else 0 end) as MobileALL_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Amount else 0 end) as Android_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Amount else 0 end) as IOS_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Amount else 0 end) as WEB_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Amount else 0 end) as Mobilsite_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Amount else 0 end) as CC_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Amount else 0 end) as OtherChannel_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Amount else 0 end) as MobileApp_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Amount else 0 end) as MobileALL_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Count else 0 end) as Monday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Count else 0 end) as Tuesday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Count else 0 end) as Wednesday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Count else 0 end) as Thursday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Count else 0 end) as Friday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Count else 0 end) as Saturday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Count else 0 end) as Sunday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Count else 0 end) as Workday_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Count else 0 end) as Weekend_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Amount else 0 end) as Monday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Amount else 0 end) as Tuesday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Amount else 0 end) as Wednesday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Amount else 0 end) as Thursday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Amount else 0 end) as Friday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Amount else 0 end) as Saturday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Amount else 0 end) as Sunday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Amount else 0 end) as Workday_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Amount else 0 end) as Weekend_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Count else 0 end) as Day_1_5_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Count else 0 end) as Day_6_10_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Count else 0 end) as Day_11_15_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Count else 0 end) as Day_16_20_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Count else 0 end) as Day_21_25_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Count else 0 end) as Day_26_31_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Amount else 0 end) as Day_1_5_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Amount else 0 end) as Day_6_10_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Amount else 0 end) as Day_11_15_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Amount else 0 end) as Day_16_20_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Amount else 0 end) as Day_21_25_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Amount else 0 end) as Day_26_31_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Count else 0 end) as Hour_0_3_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Count else 0 end) as Hour_3_6_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Count else 0 end) as Hour_6_9_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Count else 0 end) as Hour_9_12_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Count else 0 end) as Hour_12_15_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Count else 0 end) as Hour_15_18_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Count else 0 end) as Hour_18_21_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Count else 0 end) as Hour_21_24_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Amount else 0 end) as Hour_0_3_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Amount else 0 end) as Hour_3_6_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Amount else 0 end) as Hour_6_9_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Amount else 0 end) as Hour_9_12_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Amount else 0 end) as Hour_12_15_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Amount else 0 end) as Hour_15_18_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Amount else 0 end) as Hour_18_21_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Amount else 0 end) as Hour_21_24_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Count else 0 end) as Football_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Count else 0 end) as Basketball_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Count else 0 end) as Duel_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Football_Duel_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Count else 0 end) as Live_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Count else 0 end) as Handball_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Count else 0 end) as Volleyball_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Count else 0 end) as Tennis_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Count else 0 end) as Motorsport_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Count else 0 end) as OtherGames_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Count else 0 end) as Only_Football_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Duel_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Count else 0 end) as Only_Live_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Count else 0 end) as Only_Handball_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Count else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Count else 0 end) as Only_Tennis_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Count else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Count else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Amount else 0 end) as Football_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Amount else 0 end) as Basketball_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Amount else 0 end) as Duel_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Football_Duel_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Amount else 0 end) as Live_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Amount else 0 end) as Handball_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Volleyball_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Amount else 0 end) as Tennis_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Motorsport_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Amount else 0 end) as OtherGames_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Duel_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Amount else 0 end) as Only_Live_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Amount else 0 end) as Only_Handball_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Amount else 0 end) as Only_Tennis_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Amount else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Count else 0 end) as Odd_1_3_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Count else 0 end) as Odd_3_5_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Count else 0 end) as Odd_5_10_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Count else 0 end) as Odd_10_20_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Count else 0 end) as Odd_20_50_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Count else 0 end) as Odd_50_100_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Count else 0 end) as Odd_100_250_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Count else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Count else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Count else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Count else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Amount else 0 end) as Odd_1_3_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Amount else 0 end) as Odd_3_5_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Amount else 0 end) as Odd_5_10_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Amount else 0 end) as Odd_10_20_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Amount else 0 end) as Odd_20_50_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Amount else 0 end) as Odd_50_100_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Amount else 0 end) as Odd_100_250_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Amount else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Amount else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Amount else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Amount else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Count else 0 end) as TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Amount else 0 end) as TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Count else 0 end) as Android_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Count else 0 end) as IOS_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Count else 0 end) as WEB_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Count else 0 end) as Mobilsite_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Count else 0 end) as CC_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Count else 0 end) as OtherChannel_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Count else 0 end) as MobileApp_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Count else 0 end) as MobileALL_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Amount else 0 end) as Android_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Amount else 0 end) as IOS_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Amount else 0 end) as WEB_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Amount else 0 end) as Mobilsite_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Amount else 0 end) as CC_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Amount else 0 end) as OtherChannel_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Amount else 0 end) as MobileApp_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Amount else 0 end) as MobileALL_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Count else 0 end) as Monday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Count else 0 end) as Tuesday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Count else 0 end) as Wednesday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Count else 0 end) as Thursday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Count else 0 end) as Friday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Count else 0 end) as Saturday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Count else 0 end) as Sunday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Count else 0 end) as Workday_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Count else 0 end) as Weekend_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Amount else 0 end) as Monday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Amount else 0 end) as Tuesday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Amount else 0 end) as Wednesday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Amount else 0 end) as Thursday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Amount else 0 end) as Friday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Amount else 0 end) as Saturday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Amount else 0 end) as Sunday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Amount else 0 end) as Workday_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Amount else 0 end) as Weekend_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Count else 0 end) as Day_1_5_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Count else 0 end) as Day_6_10_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Count else 0 end) as Day_11_15_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Count else 0 end) as Day_16_20_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Count else 0 end) as Day_21_25_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Count else 0 end) as Day_26_31_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Amount else 0 end) as Day_1_5_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Amount else 0 end) as Day_6_10_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Amount else 0 end) as Day_11_15_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Amount else 0 end) as Day_16_20_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Amount else 0 end) as Day_21_25_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Amount else 0 end) as Day_26_31_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Count else 0 end) as Hour_0_3_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Count else 0 end) as Hour_3_6_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Count else 0 end) as Hour_6_9_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Count else 0 end) as Hour_9_12_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Count else 0 end) as Hour_12_15_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Count else 0 end) as Hour_15_18_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Count else 0 end) as Hour_18_21_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Count else 0 end) as Hour_21_24_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Amount else 0 end) as Hour_0_3_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Amount else 0 end) as Hour_3_6_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Amount else 0 end) as Hour_6_9_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Amount else 0 end) as Hour_9_12_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Amount else 0 end) as Hour_12_15_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Amount else 0 end) as Hour_15_18_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Amount else 0 end) as Hour_18_21_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Amount else 0 end) as Hour_21_24_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Count else 0 end) as Football_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Count else 0 end) as Basketball_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Count else 0 end) as Duel_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Football_Duel_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Count else 0 end) as Live_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Count else 0 end) as Handball_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Count else 0 end) as Volleyball_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Count else 0 end) as Tennis_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Count else 0 end) as Motorsport_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Count else 0 end) as OtherGames_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Count else 0 end) as Only_Football_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Duel_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Count else 0 end) as Only_Live_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Count else 0 end) as Only_Handball_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Count else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Count else 0 end) as Only_Tennis_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Count else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Count else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Amount else 0 end) as Football_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Amount else 0 end) as Basketball_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Amount else 0 end) as Duel_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Football_Duel_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Amount else 0 end) as Live_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Amount else 0 end) as Handball_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Volleyball_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Amount else 0 end) as Tennis_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Motorsport_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Amount else 0 end) as OtherGames_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Duel_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Amount else 0 end) as Only_Live_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Amount else 0 end) as Only_Handball_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Amount else 0 end) as Only_Tennis_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Amount else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Count else 0 end) as Odd_1_3_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Count else 0 end) as Odd_3_5_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Count else 0 end) as Odd_5_10_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Count else 0 end) as Odd_10_20_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Count else 0 end) as Odd_20_50_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Count else 0 end) as Odd_50_100_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Count else 0 end) as Odd_100_250_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Count else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Count else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Count else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Count else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Amount else 0 end) as Odd_1_3_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Amount else 0 end) as Odd_3_5_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Amount else 0 end) as Odd_5_10_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Amount else 0 end) as Odd_10_20_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Amount else 0 end) as Odd_20_50_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Amount else 0 end) as Odd_50_100_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Amount else 0 end) as Odd_100_250_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Amount else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Amount else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Amount else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Amount else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Count else 0 end) as TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunPlayed_Coupon_Amount else 0 end) as TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Count else 0 end) as Android_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Count else 0 end) as IOS_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Count else 0 end) as WEB_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Count else 0 end) as Mobilsite_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Count else 0 end) as CC_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Count else 0 end) as OtherChannel_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Count else 0 end) as MobileApp_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Count else 0 end) as MobileALL_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunPlayed_Coupon_Amount else 0 end) as Android_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunPlayed_Coupon_Amount else 0 end) as IOS_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunPlayed_Coupon_Amount else 0 end) as WEB_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunPlayed_Coupon_Amount else 0 end) as Mobilsite_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunPlayed_Coupon_Amount else 0 end) as CC_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunPlayed_Coupon_Amount else 0 end) as OtherChannel_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunPlayed_Coupon_Amount else 0 end) as MobileApp_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunPlayed_Coupon_Amount else 0 end) as MobileALL_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Count else 0 end) as Monday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Count else 0 end) as Tuesday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Count else 0 end) as Wednesday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Count else 0 end) as Thursday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Count else 0 end) as Friday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Count else 0 end) as Saturday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Count else 0 end) as Sunday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Count else 0 end) as Workday_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Count else 0 end) as Weekend_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunPlayed_Coupon_Amount else 0 end) as Monday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunPlayed_Coupon_Amount else 0 end) as Tuesday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunPlayed_Coupon_Amount else 0 end) as Wednesday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunPlayed_Coupon_Amount else 0 end) as Thursday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunPlayed_Coupon_Amount else 0 end) as Friday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunPlayed_Coupon_Amount else 0 end) as Saturday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunPlayed_Coupon_Amount else 0 end) as Sunday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunPlayed_Coupon_Amount else 0 end) as Workday_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunPlayed_Coupon_Amount else 0 end) as Weekend_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Count else 0 end) as Day_1_5_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Count else 0 end) as Day_6_10_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Count else 0 end) as Day_11_15_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Count else 0 end) as Day_16_20_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Count else 0 end) as Day_21_25_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Count else 0 end) as Day_26_31_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunPlayed_Coupon_Amount else 0 end) as Day_1_5_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunPlayed_Coupon_Amount else 0 end) as Day_6_10_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunPlayed_Coupon_Amount else 0 end) as Day_11_15_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunPlayed_Coupon_Amount else 0 end) as Day_16_20_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunPlayed_Coupon_Amount else 0 end) as Day_21_25_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunPlayed_Coupon_Amount else 0 end) as Day_26_31_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Count else 0 end) as Hour_0_3_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Count else 0 end) as Hour_3_6_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Count else 0 end) as Hour_6_9_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Count else 0 end) as Hour_9_12_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Count else 0 end) as Hour_12_15_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Count else 0 end) as Hour_15_18_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Count else 0 end) as Hour_18_21_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Count else 0 end) as Hour_21_24_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunPlayed_Coupon_Amount else 0 end) as Hour_0_3_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunPlayed_Coupon_Amount else 0 end) as Hour_3_6_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunPlayed_Coupon_Amount else 0 end) as Hour_6_9_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunPlayed_Coupon_Amount else 0 end) as Hour_9_12_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunPlayed_Coupon_Amount else 0 end) as Hour_12_15_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunPlayed_Coupon_Amount else 0 end) as Hour_15_18_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunPlayed_Coupon_Amount else 0 end) as Hour_18_21_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunPlayed_Coupon_Amount else 0 end) as Hour_21_24_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Count else 0 end) as Football_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Count else 0 end) as Basketball_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Count else 0 end) as Duel_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Football_Duel_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Count else 0 end) as Live_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Count else 0 end) as Handball_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Count else 0 end) as Volleyball_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Count else 0 end) as Tennis_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Count else 0 end) as Motorsport_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Count else 0 end) as OtherGames_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Count else 0 end) as Only_Football_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Duel_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Count else 0 end) as Only_Live_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Count else 0 end) as Only_Handball_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Count else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Count else 0 end) as Only_Tennis_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Count else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Count else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunPlayed_Coupon_Amount else 0 end) as Football_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunPlayed_Coupon_Amount else 0 end) as Basketball_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunPlayed_Coupon_Amount else 0 end) as Duel_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Football_Duel_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Basketball_Duel_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunPlayed_Coupon_Amount else 0 end) as Live_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunPlayed_Coupon_Amount else 0 end) as Handball_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Volleyball_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunPlayed_Coupon_Amount else 0 end) as Tennis_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Motorsport_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunPlayed_Coupon_Amount else 0 end) as OtherGames_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Duel_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Football_Duel_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunPlayed_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunPlayed_Coupon_Amount else 0 end) as Only_Live_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunPlayed_Coupon_Amount else 0 end) as Only_Handball_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunPlayed_Coupon_Amount else 0 end) as Only_Volleyball_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunPlayed_Coupon_Amount else 0 end) as Only_Tennis_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunPlayed_Coupon_Amount else 0 end) as Only_Motorsport_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunPlayed_Coupon_Amount else 0 end) as Only_OtherGames_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Count else 0 end) as Odd_1_3_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Count else 0 end) as Odd_3_5_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Count else 0 end) as Odd_5_10_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Count else 0 end) as Odd_10_20_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Count else 0 end) as Odd_20_50_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Count else 0 end) as Odd_50_100_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Count else 0 end) as Odd_100_250_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Count else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Count else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Count else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Count else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunPlayed_Coupon_Amount else 0 end) as Odd_1_3_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunPlayed_Coupon_Amount else 0 end) as Odd_3_5_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunPlayed_Coupon_Amount else 0 end) as Odd_5_10_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunPlayed_Coupon_Amount else 0 end) as Odd_10_20_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunPlayed_Coupon_Amount else 0 end) as Odd_20_50_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunPlayed_Coupon_Amount else 0 end) as Odd_50_100_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunPlayed_Coupon_Amount else 0 end) as Odd_100_250_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunPlayed_Coupon_Amount else 0 end) as Odd_250_1k_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunPlayed_Coupon_Amount else 0 end) as Odd_1k_10k_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunPlayed_Coupon_Amount else 0 end) as Odd_10k_100k_TribunPlayed_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunPlayed_Coupon_Amount else 0 end) as Odd_100kPlus_TribunPlayed_Coupon_Amount_Son12Ay,
SYSDATE as DWH_DATE
from lbrdwh.CUSTOMER_TRIBUN_DAILY A
where PLAY_DATE<TRUNC(SYSDATE)
and PLAY_DATE>=add_months(sysdate,-12)
group by CUSTOMER_ID
/

create or replace view V_DM_CUSTOMER_TRIBUN_SHARED_DAILY as
select
CUSTOMER_ID,
TRUNC(SYSDATE) as REPORT_DATE,
max(case when TribunRelated_Coupon_Count>0 then PLAY_DATE end) as Last_TribunRelated_Coupon_Date,
TRUNC(SYSDATE) - max(case when TribunRelated_Coupon_Count>0 then PLAY_DATE end)  as DaysAfterLastTribunRelated_Coupon,
max(case when TribunShared_Coupon_Count>0 then PLAY_DATE end) as Last_TribunShared_Coupon_Date,
TRUNC(SYSDATE) - max(case when TribunShared_Coupon_Count>0 then PLAY_DATE end) as DaysAfterLastTribunShared_Coupon,
count(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_LastWeek,
count(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_LastMonth,
count(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_Last3Months,
count(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_Last6Months,
count(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) and TribunRelated_Coupon_Count>0 then PLAY_DATE end) as NumofTribunRelated_Coupon_Day_Last12Months,
count(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) and TribunShared_Coupon_Count>0 then PLAY_DATE end) as NumofTribunShared_Coupon_Day_LastWeek,
count(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) and TribunShared_Coupon_Count>0 then PLAY_DATE end) as NumofTribunShared_Coupon_Day_LastMonth,
count(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) and TribunShared_Coupon_Count>0 then PLAY_DATE end) as NumofTribunShared_Coupon_Day_Last3Months,
count(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) and TribunShared_Coupon_Count>0 then PLAY_DATE end) as NumofTribunShared_Coupon_Day_Last6Months,
count(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) and TribunShared_Coupon_Count>0 then PLAY_DATE end) as NumofTribunShared_Coupon_Day_Last12Months,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Count else 0 end) as TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Amount else 0 end) as TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Count else 0 end) as Android_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Count else 0 end) as IOS_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Count else 0 end) as WEB_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Count else 0 end) as Mobilsite_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Count else 0 end) as CC_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Count else 0 end) as OtherChannel_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Count else 0 end) as MobileApp_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Count else 0 end) as MobileALL_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Amount else 0 end) as Android_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Amount else 0 end) as IOS_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Amount else 0 end) as WEB_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Amount else 0 end) as Mobilsite_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Amount else 0 end) as CC_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Amount else 0 end) as OtherChannel_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Amount else 0 end) as MobileApp_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Amount else 0 end) as MobileALL_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Count else 0 end) as Monday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Count else 0 end) as Tuesday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Count else 0 end) as Wednesday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Count else 0 end) as Thursday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Count else 0 end) as Friday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Count else 0 end) as Saturday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Count else 0 end) as Sunday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Count else 0 end) as Workday_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Count else 0 end) as Weekend_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Amount else 0 end) as Monday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Amount else 0 end) as Tuesday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Amount else 0 end) as Wednesday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Amount else 0 end) as Thursday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Amount else 0 end) as Friday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Amount else 0 end) as Saturday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Amount else 0 end) as Sunday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Amount else 0 end) as Workday_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Amount else 0 end) as Weekend_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Count else 0 end) as Day_1_5_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Count else 0 end) as Day_6_10_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Count else 0 end) as Day_11_15_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Count else 0 end) as Day_16_20_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Count else 0 end) as Day_21_25_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Count else 0 end) as Day_26_31_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Amount else 0 end) as Day_1_5_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Amount else 0 end) as Day_6_10_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Amount else 0 end) as Day_11_15_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Amount else 0 end) as Day_16_20_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Amount else 0 end) as Day_21_25_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Amount else 0 end) as Day_26_31_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Count else 0 end) as Hour_0_3_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Count else 0 end) as Hour_3_6_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Count else 0 end) as Hour_6_9_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Count else 0 end) as Hour_9_12_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Count else 0 end) as Hour_12_15_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Count else 0 end) as Hour_15_18_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Count else 0 end) as Hour_18_21_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Count else 0 end) as Hour_21_24_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Amount else 0 end) as Hour_0_3_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Amount else 0 end) as Hour_3_6_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Amount else 0 end) as Hour_6_9_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Amount else 0 end) as Hour_9_12_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Amount else 0 end) as Hour_12_15_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Amount else 0 end) as Hour_15_18_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Amount else 0 end) as Hour_18_21_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Amount else 0 end) as Hour_21_24_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Count else 0 end) as Football_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Count else 0 end) as Basketball_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Count else 0 end) as Duel_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Count else 0 end) as Football_Duel_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Basketball_Duel_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Count else 0 end) as Live_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Count else 0 end) as Handball_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Count else 0 end) as Volleyball_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Count else 0 end) as Tennis_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Count else 0 end) as Motorsport_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Count else 0 end) as OtherGames_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Count else 0 end) as Only_Football_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Count else 0 end) as Only_Basketball_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Count else 0 end) as Only_Duel_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Count else 0 end) as Only_Football_Duel_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Count else 0 end) as Only_Live_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Count else 0 end) as Only_Handball_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Count else 0 end) as Only_Volleyball_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Count else 0 end) as Only_Tennis_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Count else 0 end) as Only_Motorsport_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Count else 0 end) as Only_OtherGames_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Amount else 0 end) as Football_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Amount else 0 end) as Basketball_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Amount else 0 end) as Duel_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Amount else 0 end) as Football_Duel_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Basketball_Duel_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Amount else 0 end) as Live_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Amount else 0 end) as Handball_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Amount else 0 end) as Volleyball_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Amount else 0 end) as Tennis_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Amount else 0 end) as Motorsport_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Amount else 0 end) as OtherGames_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Amount else 0 end) as Only_Football_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Duel_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Football_Duel_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Amount else 0 end) as Only_Live_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Amount else 0 end) as Only_Handball_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Amount else 0 end) as Only_Volleyball_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Amount else 0 end) as Only_Tennis_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Amount else 0 end) as Only_Motorsport_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Amount else 0 end) as Only_OtherGames_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Count else 0 end) as Odd_1_3_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Count else 0 end) as Odd_3_5_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Count else 0 end) as Odd_5_10_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Count else 0 end) as Odd_10_20_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Count else 0 end) as Odd_20_50_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Count else 0 end) as Odd_50_100_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Count else 0 end) as Odd_100_250_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Count else 0 end) as Odd_250_1k_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Count else 0 end) as Odd_1k_10k_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Count else 0 end) as Odd_10k_100k_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Count else 0 end) as Odd_100kPlus_TribunShared_Coupon_Count_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Amount else 0 end) as Odd_1_3_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Amount else 0 end) as Odd_3_5_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Amount else 0 end) as Odd_5_10_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Amount else 0 end) as Odd_10_20_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Amount else 0 end) as Odd_20_50_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Amount else 0 end) as Odd_50_100_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Amount else 0 end) as Odd_100_250_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Amount else 0 end) as Odd_250_1k_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Amount else 0 end) as Odd_1k_10k_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Amount else 0 end) as Odd_10k_100k_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=TRUNC(SYSDATE - 7)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Amount else 0 end) as Odd_100kPlus_TribunShared_Coupon_Amount_SonHafta,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Count else 0 end) as TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Amount else 0 end) as TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Count else 0 end) as Android_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Count else 0 end) as IOS_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Count else 0 end) as WEB_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Count else 0 end) as Mobilsite_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Count else 0 end) as CC_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Count else 0 end) as OtherChannel_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Count else 0 end) as MobileApp_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Count else 0 end) as MobileALL_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Amount else 0 end) as Android_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Amount else 0 end) as IOS_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Amount else 0 end) as WEB_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Amount else 0 end) as Mobilsite_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Amount else 0 end) as CC_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Amount else 0 end) as OtherChannel_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Amount else 0 end) as MobileApp_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Amount else 0 end) as MobileALL_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Count else 0 end) as Monday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Count else 0 end) as Tuesday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Count else 0 end) as Wednesday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Count else 0 end) as Thursday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Count else 0 end) as Friday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Count else 0 end) as Saturday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Count else 0 end) as Sunday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Count else 0 end) as Workday_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Count else 0 end) as Weekend_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Amount else 0 end) as Monday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Amount else 0 end) as Tuesday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Amount else 0 end) as Wednesday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Amount else 0 end) as Thursday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Amount else 0 end) as Friday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Amount else 0 end) as Saturday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Amount else 0 end) as Sunday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Amount else 0 end) as Workday_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Amount else 0 end) as Weekend_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Count else 0 end) as Day_1_5_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Count else 0 end) as Day_6_10_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Count else 0 end) as Day_11_15_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Count else 0 end) as Day_16_20_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Count else 0 end) as Day_21_25_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Count else 0 end) as Day_26_31_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Amount else 0 end) as Day_1_5_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Amount else 0 end) as Day_6_10_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Amount else 0 end) as Day_11_15_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Amount else 0 end) as Day_16_20_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Amount else 0 end) as Day_21_25_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Amount else 0 end) as Day_26_31_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Count else 0 end) as Hour_0_3_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Count else 0 end) as Hour_3_6_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Count else 0 end) as Hour_6_9_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Count else 0 end) as Hour_9_12_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Count else 0 end) as Hour_12_15_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Count else 0 end) as Hour_15_18_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Count else 0 end) as Hour_18_21_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Count else 0 end) as Hour_21_24_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Amount else 0 end) as Hour_0_3_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Amount else 0 end) as Hour_3_6_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Amount else 0 end) as Hour_6_9_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Amount else 0 end) as Hour_9_12_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Amount else 0 end) as Hour_12_15_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Amount else 0 end) as Hour_15_18_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Amount else 0 end) as Hour_18_21_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Amount else 0 end) as Hour_21_24_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Count else 0 end) as Football_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Count else 0 end) as Basketball_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Count else 0 end) as Duel_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Count else 0 end) as Football_Duel_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Basketball_Duel_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Count else 0 end) as Live_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Count else 0 end) as Handball_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Count else 0 end) as Volleyball_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Count else 0 end) as Tennis_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Count else 0 end) as Motorsport_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Count else 0 end) as OtherGames_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Count else 0 end) as Only_Football_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Count else 0 end) as Only_Basketball_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Count else 0 end) as Only_Duel_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Count else 0 end) as Only_Football_Duel_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Count else 0 end) as Only_Live_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Count else 0 end) as Only_Handball_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Count else 0 end) as Only_Volleyball_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Count else 0 end) as Only_Tennis_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Count else 0 end) as Only_Motorsport_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Count else 0 end) as Only_OtherGames_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Amount else 0 end) as Football_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Amount else 0 end) as Basketball_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Amount else 0 end) as Duel_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Amount else 0 end) as Football_Duel_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Basketball_Duel_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Amount else 0 end) as Live_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Amount else 0 end) as Handball_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Amount else 0 end) as Volleyball_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Amount else 0 end) as Tennis_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Amount else 0 end) as Motorsport_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Amount else 0 end) as OtherGames_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Amount else 0 end) as Only_Football_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Duel_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Football_Duel_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Amount else 0 end) as Only_Live_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Amount else 0 end) as Only_Handball_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Amount else 0 end) as Only_Volleyball_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Amount else 0 end) as Only_Tennis_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Amount else 0 end) as Only_Motorsport_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Amount else 0 end) as Only_OtherGames_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Count else 0 end) as Odd_1_3_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Count else 0 end) as Odd_3_5_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Count else 0 end) as Odd_5_10_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Count else 0 end) as Odd_10_20_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Count else 0 end) as Odd_20_50_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Count else 0 end) as Odd_50_100_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Count else 0 end) as Odd_100_250_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Count else 0 end) as Odd_250_1k_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Count else 0 end) as Odd_1k_10k_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Count else 0 end) as Odd_10k_100k_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Count else 0 end) as Odd_100kPlus_TribunShared_Coupon_Count_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Amount else 0 end) as Odd_1_3_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Amount else 0 end) as Odd_3_5_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Amount else 0 end) as Odd_5_10_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Amount else 0 end) as Odd_10_20_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Amount else 0 end) as Odd_20_50_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Amount else 0 end) as Odd_50_100_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Amount else 0 end) as Odd_100_250_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Amount else 0 end) as Odd_250_1k_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Amount else 0 end) as Odd_1k_10k_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Amount else 0 end) as Odd_10k_100k_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-1)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Amount else 0 end) as Odd_100kPlus_TribunShared_Coupon_Amount_SonAy,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Count else 0 end) as TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Amount else 0 end) as TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Count else 0 end) as Android_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Count else 0 end) as IOS_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Count else 0 end) as WEB_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Count else 0 end) as Mobilsite_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Count else 0 end) as CC_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Count else 0 end) as OtherChannel_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Count else 0 end) as MobileApp_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Count else 0 end) as MobileALL_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Amount else 0 end) as Android_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Amount else 0 end) as IOS_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Amount else 0 end) as WEB_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Amount else 0 end) as Mobilsite_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Amount else 0 end) as CC_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Amount else 0 end) as OtherChannel_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Amount else 0 end) as MobileApp_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Amount else 0 end) as MobileALL_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Count else 0 end) as Monday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Count else 0 end) as Tuesday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Count else 0 end) as Wednesday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Count else 0 end) as Thursday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Count else 0 end) as Friday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Count else 0 end) as Saturday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Count else 0 end) as Sunday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Count else 0 end) as Workday_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Count else 0 end) as Weekend_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Amount else 0 end) as Monday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Amount else 0 end) as Tuesday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Amount else 0 end) as Wednesday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Amount else 0 end) as Thursday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Amount else 0 end) as Friday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Amount else 0 end) as Saturday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Amount else 0 end) as Sunday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Amount else 0 end) as Workday_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Amount else 0 end) as Weekend_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Count else 0 end) as Day_1_5_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Count else 0 end) as Day_6_10_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Count else 0 end) as Day_11_15_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Count else 0 end) as Day_16_20_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Count else 0 end) as Day_21_25_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Count else 0 end) as Day_26_31_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Amount else 0 end) as Day_1_5_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Amount else 0 end) as Day_6_10_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Amount else 0 end) as Day_11_15_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Amount else 0 end) as Day_16_20_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Amount else 0 end) as Day_21_25_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Amount else 0 end) as Day_26_31_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Count else 0 end) as Hour_0_3_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Count else 0 end) as Hour_3_6_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Count else 0 end) as Hour_6_9_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Count else 0 end) as Hour_9_12_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Count else 0 end) as Hour_12_15_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Count else 0 end) as Hour_15_18_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Count else 0 end) as Hour_18_21_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Count else 0 end) as Hour_21_24_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Amount else 0 end) as Hour_0_3_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Amount else 0 end) as Hour_3_6_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Amount else 0 end) as Hour_6_9_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Amount else 0 end) as Hour_9_12_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Amount else 0 end) as Hour_12_15_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Amount else 0 end) as Hour_15_18_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Amount else 0 end) as Hour_18_21_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Amount else 0 end) as Hour_21_24_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Count else 0 end) as Football_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Count else 0 end) as Basketball_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Count else 0 end) as Duel_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Count else 0 end) as Football_Duel_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Basketball_Duel_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Count else 0 end) as Live_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Count else 0 end) as Handball_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Count else 0 end) as Volleyball_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Count else 0 end) as Tennis_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Count else 0 end) as Motorsport_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Count else 0 end) as OtherGames_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Count else 0 end) as Only_Football_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Count else 0 end) as Only_Basketball_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Count else 0 end) as Only_Duel_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Count else 0 end) as Only_Football_Duel_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Count else 0 end) as Only_Live_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Count else 0 end) as Only_Handball_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Count else 0 end) as Only_Volleyball_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Count else 0 end) as Only_Tennis_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Count else 0 end) as Only_Motorsport_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Count else 0 end) as Only_OtherGames_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Amount else 0 end) as Football_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Amount else 0 end) as Basketball_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Amount else 0 end) as Duel_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Amount else 0 end) as Football_Duel_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Basketball_Duel_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Amount else 0 end) as Live_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Amount else 0 end) as Handball_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Amount else 0 end) as Volleyball_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Amount else 0 end) as Tennis_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Amount else 0 end) as Motorsport_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Amount else 0 end) as OtherGames_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Amount else 0 end) as Only_Football_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Duel_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Football_Duel_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Amount else 0 end) as Only_Live_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Amount else 0 end) as Only_Handball_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Amount else 0 end) as Only_Volleyball_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Amount else 0 end) as Only_Tennis_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Amount else 0 end) as Only_Motorsport_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Amount else 0 end) as Only_OtherGames_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Count else 0 end) as Odd_1_3_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Count else 0 end) as Odd_3_5_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Count else 0 end) as Odd_5_10_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Count else 0 end) as Odd_10_20_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Count else 0 end) as Odd_20_50_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Count else 0 end) as Odd_50_100_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Count else 0 end) as Odd_100_250_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Count else 0 end) as Odd_250_1k_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Count else 0 end) as Odd_1k_10k_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Count else 0 end) as Odd_10k_100k_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Count else 0 end) as Odd_100kPlus_TribunShared_Coupon_Count_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Amount else 0 end) as Odd_1_3_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Amount else 0 end) as Odd_3_5_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Amount else 0 end) as Odd_5_10_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Amount else 0 end) as Odd_10_20_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Amount else 0 end) as Odd_20_50_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Amount else 0 end) as Odd_50_100_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Amount else 0 end) as Odd_100_250_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Amount else 0 end) as Odd_250_1k_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Amount else 0 end) as Odd_1k_10k_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Amount else 0 end) as Odd_10k_100k_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-3)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Amount else 0 end) as Odd_100kPlus_TribunShared_Coupon_Amount_Son3Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Count else 0 end) as TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Amount else 0 end) as TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Count else 0 end) as Android_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Count else 0 end) as IOS_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Count else 0 end) as WEB_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Count else 0 end) as Mobilsite_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Count else 0 end) as CC_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Count else 0 end) as OtherChannel_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Count else 0 end) as MobileApp_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Count else 0 end) as MobileALL_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Amount else 0 end) as Android_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Amount else 0 end) as IOS_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Amount else 0 end) as WEB_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Amount else 0 end) as Mobilsite_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Amount else 0 end) as CC_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Amount else 0 end) as OtherChannel_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Amount else 0 end) as MobileApp_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Amount else 0 end) as MobileALL_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Count else 0 end) as Monday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Count else 0 end) as Tuesday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Count else 0 end) as Wednesday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Count else 0 end) as Thursday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Count else 0 end) as Friday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Count else 0 end) as Saturday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Count else 0 end) as Sunday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Count else 0 end) as Workday_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Count else 0 end) as Weekend_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Amount else 0 end) as Monday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Amount else 0 end) as Tuesday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Amount else 0 end) as Wednesday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Amount else 0 end) as Thursday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Amount else 0 end) as Friday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Amount else 0 end) as Saturday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Amount else 0 end) as Sunday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Amount else 0 end) as Workday_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Amount else 0 end) as Weekend_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Count else 0 end) as Day_1_5_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Count else 0 end) as Day_6_10_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Count else 0 end) as Day_11_15_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Count else 0 end) as Day_16_20_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Count else 0 end) as Day_21_25_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Count else 0 end) as Day_26_31_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Amount else 0 end) as Day_1_5_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Amount else 0 end) as Day_6_10_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Amount else 0 end) as Day_11_15_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Amount else 0 end) as Day_16_20_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Amount else 0 end) as Day_21_25_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Amount else 0 end) as Day_26_31_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Count else 0 end) as Hour_0_3_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Count else 0 end) as Hour_3_6_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Count else 0 end) as Hour_6_9_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Count else 0 end) as Hour_9_12_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Count else 0 end) as Hour_12_15_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Count else 0 end) as Hour_15_18_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Count else 0 end) as Hour_18_21_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Count else 0 end) as Hour_21_24_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Amount else 0 end) as Hour_0_3_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Amount else 0 end) as Hour_3_6_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Amount else 0 end) as Hour_6_9_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Amount else 0 end) as Hour_9_12_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Amount else 0 end) as Hour_12_15_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Amount else 0 end) as Hour_15_18_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Amount else 0 end) as Hour_18_21_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Amount else 0 end) as Hour_21_24_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Count else 0 end) as Football_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Count else 0 end) as Basketball_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Count else 0 end) as Duel_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Count else 0 end) as Football_Duel_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Basketball_Duel_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Count else 0 end) as Live_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Count else 0 end) as Handball_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Count else 0 end) as Volleyball_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Count else 0 end) as Tennis_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Count else 0 end) as Motorsport_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Count else 0 end) as OtherGames_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Count else 0 end) as Only_Football_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Count else 0 end) as Only_Basketball_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Count else 0 end) as Only_Duel_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Count else 0 end) as Only_Football_Duel_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Count else 0 end) as Only_Live_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Count else 0 end) as Only_Handball_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Count else 0 end) as Only_Volleyball_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Count else 0 end) as Only_Tennis_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Count else 0 end) as Only_Motorsport_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Count else 0 end) as Only_OtherGames_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Amount else 0 end) as Football_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Amount else 0 end) as Basketball_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Amount else 0 end) as Duel_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Amount else 0 end) as Football_Duel_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Basketball_Duel_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Amount else 0 end) as Live_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Amount else 0 end) as Handball_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Amount else 0 end) as Volleyball_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Amount else 0 end) as Tennis_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Amount else 0 end) as Motorsport_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Amount else 0 end) as OtherGames_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Amount else 0 end) as Only_Football_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Duel_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Football_Duel_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Amount else 0 end) as Only_Live_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Amount else 0 end) as Only_Handball_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Amount else 0 end) as Only_Volleyball_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Amount else 0 end) as Only_Tennis_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Amount else 0 end) as Only_Motorsport_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Amount else 0 end) as Only_OtherGames_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Count else 0 end) as Odd_1_3_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Count else 0 end) as Odd_3_5_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Count else 0 end) as Odd_5_10_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Count else 0 end) as Odd_10_20_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Count else 0 end) as Odd_20_50_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Count else 0 end) as Odd_50_100_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Count else 0 end) as Odd_100_250_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Count else 0 end) as Odd_250_1k_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Count else 0 end) as Odd_1k_10k_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Count else 0 end) as Odd_10k_100k_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Count else 0 end) as Odd_100kPlus_TribunShared_Coupon_Count_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Amount else 0 end) as Odd_1_3_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Amount else 0 end) as Odd_3_5_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Amount else 0 end) as Odd_5_10_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Amount else 0 end) as Odd_10_20_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Amount else 0 end) as Odd_20_50_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Amount else 0 end) as Odd_50_100_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Amount else 0 end) as Odd_100_250_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Amount else 0 end) as Odd_250_1k_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Amount else 0 end) as Odd_1k_10k_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Amount else 0 end) as Odd_10k_100k_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-6)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Amount else 0 end) as Odd_100kPlus_TribunShared_Coupon_Amount_Son6Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Count else 0 end) as TribunRelated_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunRelated_Coupon_Amount else 0 end) as TribunRelated_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Count else 0 end) as TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then TribunShared_Coupon_Amount else 0 end) as TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Count else 0 end) as Android_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Count else 0 end) as IOS_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Count else 0 end) as WEB_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Count else 0 end) as Mobilsite_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Count else 0 end) as CC_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Count else 0 end) as OtherChannel_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Count else 0 end) as MobileApp_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Count else 0 end) as MobileALL_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Android_TribunShared_Coupon_Amount else 0 end) as Android_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then IOS_TribunShared_Coupon_Amount else 0 end) as IOS_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then WEB_TribunShared_Coupon_Amount else 0 end) as WEB_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Mobilsite_TribunShared_Coupon_Amount else 0 end) as Mobilsite_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then CC_TribunShared_Coupon_Amount else 0 end) as CC_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherChannel_TribunShared_Coupon_Amount else 0 end) as OtherChannel_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileApp_TribunShared_Coupon_Amount else 0 end) as MobileApp_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then MobileALL_TribunShared_Coupon_Amount else 0 end) as MobileALL_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Count else 0 end) as Monday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Count else 0 end) as Tuesday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Count else 0 end) as Wednesday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Count else 0 end) as Thursday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Count else 0 end) as Friday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Count else 0 end) as Saturday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Count else 0 end) as Sunday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Count else 0 end) as Workday_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Count else 0 end) as Weekend_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Monday_TribunShared_Coupon_Amount else 0 end) as Monday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tuesday_TribunShared_Coupon_Amount else 0 end) as Tuesday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Wednesday_TribunShared_Coupon_Amount else 0 end) as Wednesday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Thursday_TribunShared_Coupon_Amount else 0 end) as Thursday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Friday_TribunShared_Coupon_Amount else 0 end) as Friday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Saturday_TribunShared_Coupon_Amount else 0 end) as Saturday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Sunday_TribunShared_Coupon_Amount else 0 end) as Sunday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Workday_TribunShared_Coupon_Amount else 0 end) as Workday_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Weekend_TribunShared_Coupon_Amount else 0 end) as Weekend_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Count else 0 end) as Day_1_5_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Count else 0 end) as Day_6_10_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Count else 0 end) as Day_11_15_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Count else 0 end) as Day_16_20_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Count else 0 end) as Day_21_25_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Count else 0 end) as Day_26_31_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_1_5_TribunShared_Coupon_Amount else 0 end) as Day_1_5_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_6_10_TribunShared_Coupon_Amount else 0 end) as Day_6_10_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_11_15_TribunShared_Coupon_Amount else 0 end) as Day_11_15_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_16_20_TribunShared_Coupon_Amount else 0 end) as Day_16_20_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_21_25_TribunShared_Coupon_Amount else 0 end) as Day_21_25_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Day_26_31_TribunShared_Coupon_Amount else 0 end) as Day_26_31_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Count else 0 end) as Hour_0_3_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Count else 0 end) as Hour_3_6_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Count else 0 end) as Hour_6_9_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Count else 0 end) as Hour_9_12_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Count else 0 end) as Hour_12_15_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Count else 0 end) as Hour_15_18_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Count else 0 end) as Hour_18_21_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Count else 0 end) as Hour_21_24_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_0_3_TribunShared_Coupon_Amount else 0 end) as Hour_0_3_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_3_6_TribunShared_Coupon_Amount else 0 end) as Hour_3_6_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_6_9_TribunShared_Coupon_Amount else 0 end) as Hour_6_9_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_9_12_TribunShared_Coupon_Amount else 0 end) as Hour_9_12_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_12_15_TribunShared_Coupon_Amount else 0 end) as Hour_12_15_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_15_18_TribunShared_Coupon_Amount else 0 end) as Hour_15_18_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_18_21_TribunShared_Coupon_Amount else 0 end) as Hour_18_21_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Hour_21_24_TribunShared_Coupon_Amount else 0 end) as Hour_21_24_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Count else 0 end) as Football_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Count else 0 end) as Basketball_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Count else 0 end) as Duel_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Count else 0 end) as Football_Duel_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Basketball_Duel_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Count else 0 end) as Live_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Count else 0 end) as Handball_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Count else 0 end) as Volleyball_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Count else 0 end) as Tennis_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Count else 0 end) as Motorsport_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Count else 0 end) as OtherGames_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Count else 0 end) as Only_Football_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Count else 0 end) as Only_Basketball_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Count else 0 end) as Only_Duel_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Count else 0 end) as Only_Football_Duel_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Count else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Count else 0 end) as Only_Live_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Count else 0 end) as Only_Handball_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Count else 0 end) as Only_Volleyball_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Count else 0 end) as Only_Tennis_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Count else 0 end) as Only_Motorsport_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Count else 0 end) as Only_OtherGames_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_TribunShared_Coupon_Amount else 0 end) as Football_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_TribunShared_Coupon_Amount else 0 end) as Basketball_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Duel_TribunShared_Coupon_Amount else 0 end) as Duel_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Football_Duel_TribunShared_Coupon_Amount else 0 end) as Football_Duel_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Basketball_Duel_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Live_TribunShared_Coupon_Amount else 0 end) as Live_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Handball_TribunShared_Coupon_Amount else 0 end) as Handball_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Volleyball_TribunShared_Coupon_Amount else 0 end) as Volleyball_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Tennis_TribunShared_Coupon_Amount else 0 end) as Tennis_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Motorsport_TribunShared_Coupon_Amount else 0 end) as Motorsport_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then OtherGames_TribunShared_Coupon_Amount else 0 end) as OtherGames_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_TribunShared_Coupon_Amount else 0 end) as Only_Football_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Duel_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Football_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Football_Duel_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Basketball_Duel_TribunShared_Coupon_Amount else 0 end) as Only_Basketball_Duel_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Live_TribunShared_Coupon_Amount else 0 end) as Only_Live_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Handball_TribunShared_Coupon_Amount else 0 end) as Only_Handball_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Volleyball_TribunShared_Coupon_Amount else 0 end) as Only_Volleyball_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Tennis_TribunShared_Coupon_Amount else 0 end) as Only_Tennis_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_Motorsport_TribunShared_Coupon_Amount else 0 end) as Only_Motorsport_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Only_OtherGames_TribunShared_Coupon_Amount else 0 end) as Only_OtherGames_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Count else 0 end) as Odd_1_3_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Count else 0 end) as Odd_3_5_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Count else 0 end) as Odd_5_10_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Count else 0 end) as Odd_10_20_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Count else 0 end) as Odd_20_50_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Count else 0 end) as Odd_50_100_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Count else 0 end) as Odd_100_250_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Count else 0 end) as Odd_250_1k_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Count else 0 end) as Odd_1k_10k_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Count else 0 end) as Odd_10k_100k_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Count else 0 end) as Odd_100kPlus_TribunShared_Coupon_Count_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1_3_TribunShared_Coupon_Amount else 0 end) as Odd_1_3_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_3_5_TribunShared_Coupon_Amount else 0 end) as Odd_3_5_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_5_10_TribunShared_Coupon_Amount else 0 end) as Odd_5_10_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10_20_TribunShared_Coupon_Amount else 0 end) as Odd_10_20_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_20_50_TribunShared_Coupon_Amount else 0 end) as Odd_20_50_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_50_100_TribunShared_Coupon_Amount else 0 end) as Odd_50_100_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100_250_TribunShared_Coupon_Amount else 0 end) as Odd_100_250_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_250_1k_TribunShared_Coupon_Amount else 0 end) as Odd_250_1k_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_1k_10k_TribunShared_Coupon_Amount else 0 end) as Odd_1k_10k_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_10k_100k_TribunShared_Coupon_Amount else 0 end) as Odd_10k_100k_TribunShared_Coupon_Amount_Son12Ay,
sum(case when PLAY_DATE>=add_months(sysdate,-12)  and PLAY_DATE<TRUNC(SYSDATE) then Odd_100kPlus_TribunShared_Coupon_Amount else 0 end) as Odd_100kPlus_TribunShared_Coupon_Amount_Son12Ay,
SYSDATE as DWH_DATE
from lbrdwh.CUSTOMER_TRIBUN_DAILY A
where PLAY_DATE<TRUNC(SYSDATE)
and PLAY_DATE>=add_months(sysdate,-12)
group by CUSTOMER_ID
/

create or replace view V_DM_CUSTOMER_PAYOUT_DAILY as
select
CUSTOMER_ID,
trunc(sysdate) as REPORT_DATE,
max(case when NumofSingleCoupon_Payout>0 then REAL_DATE end) as Last_Payout_Date,
trunc(sysdate) - trunc(max(case when NumofSingleCoupon_Payout>0 then REAL_DATE end))  as DaysAfterLastPayout,
max(case when NumofSingleCoupon_Payout_Iddaa>0 then REAL_DATE end) as Last_Iddaa_Payout_Date,
trunc(sysdate) - trunc(max(case when NumofSingleCoupon_Payout_Iddaa>0 then REAL_DATE end)) as DaysAfterLastPayout_Iddaa,
max(case when NumofSingleCoupon_Payout_STO>0 then REAL_DATE end) as Last_STO_Payout_Date,
trunc(sysdate)- trunc(max(case when NumofSingleCoupon_Payout_STO>0 then REAL_DATE end)) as DaysAfterLastPayout_STO,
max(case when NumofSingleCoupon_Payout_MP>0 then REAL_DATE end) as Last_MP_Payout_Date,
trunc(sysdate)- trunc(max(case when NumofSingleCoupon_Payout_MP>0 then REAL_DATE end)) as DaysAfterLastPayout_MP,
count(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then REAL_DATE end) as NumofPayoutDay_LastWeek,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then REAL_DATE end) as NumofPayoutDay_LastMonth,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then REAL_DATE end) as NumofPayoutDay_Last3Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then REAL_DATE end) as NumofPayoutDay_Last6Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then REAL_DATE end) as NumofPayoutDay_Last12Months,
count(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_Iddaa>0 then REAL_DATE end) as NumofPayoutDay_Iddaa_LastWeek,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_Iddaa>0 then REAL_DATE end) as NumofPayoutDay_Iddaa_LastMonth,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_Iddaa>0 then REAL_DATE end) as NumofPayoutDay_Iddaa_Last3Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_Iddaa>0 then REAL_DATE end) as NumofPayoutDay_Iddaa_Last6Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_Iddaa>0 then REAL_DATE end) as NumofPayoutDay_Iddaa_Last12Months,
count(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_STO>0 then REAL_DATE end) as NumofPayoutDay_STO_LastWeek,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_STO>0 then REAL_DATE end) as NumofPayoutDay_STO_LastMonth,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_STO>0 then REAL_DATE end) as NumofPayoutDay_STO_Last3Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_STO>0 then REAL_DATE end) as NumofPayoutDay_STO_Last6Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_STO>0 then REAL_DATE end) as NumofPayoutDay_STO_Last12Months,
count(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_MP>0 then REAL_DATE end) as NumofPayoutDay_MP_LastWeek,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_MP>0 then REAL_DATE end) as NumofPayoutDay_MP_LastMonth,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_MP>0 then REAL_DATE end) as NumofPayoutDay_MP_Last3Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_MP>0 then REAL_DATE end) as NumofPayoutDay_MP_Last6Months,
count(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) and NumofSingleCoupon_Payout_MP>0 then REAL_DATE end) as NumofPayoutDay_MP_Last12Months,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout else 0 end) as NumofSingleCoupon_Payout_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_Iddaa else 0 end) as NumofSingleCoupon_Payout_Iddaa_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_STO else 0 end) as NumofSingleCoupon_Payout_STO_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_MP else 0 end) as NumofSingleCoupon_Payout_MP_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Payout_Amount else 0 end) as Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Payout_Amount_Iddaa else 0 end) as Payout_Amount_Iddaa_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Payout_Amount_STO else 0 end) as Payout_Amount_STO_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Payout_Amount_MP else 0 end) as Payout_Amount_MP_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Monday_SingleCoupon_Payout_Count else 0 end) as Monday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Tuesday_SingleCoupon_Payout_Count else 0 end) as Tuesday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Wednesday_SingleCoupon_Payout_Count else 0 end) as Wednesday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Thursday_SingleCoupon_Payout_Count else 0 end) as Thursday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Friday_SingleCoupon_Payout_Count else 0 end) as Friday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Saturday_SingleCoupon_Payout_Count else 0 end) as Saturday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Sunday_SingleCoupon_Payout_Count else 0 end) as Sunday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_SingleCoupon_Payout_Count else 0 end) as Workday_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_SingleCoupon_Payout_Count else 0 end) as Weekend_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Monday_Payout_Amount else 0 end) as Monday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Tuesday_Payout_Amount else 0 end) as Tuesday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Wednesday_Payout_Amount else 0 end) as Wednesday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Thursday_Payout_Amount else 0 end) as Thursday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Friday_Payout_Amount else 0 end) as Friday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Saturday_Payout_Amount else 0 end) as Saturday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Sunday_Payout_Amount else 0 end) as Sunday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_Payout_Amount else 0 end) as Workday_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_Payout_Amount else 0 end) as Weekend_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_1_5_SingleCoupon_Payout_Count else 0 end) as Day_1_5_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_6_10_SingleCoupon_Payout_Count else 0 end) as Day_6_10_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_11_15_SingleCoupon_Payout_Count else 0 end) as Day_11_15_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_16_20_SingleCoupon_Payout_Count else 0 end) as Day_16_20_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_21_25_SingleCoupon_Payout_Count else 0 end) as Day_21_25_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_26_31_SingleCoupon_Payout_Count else 0 end) as Day_26_31_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_1_5_Payout_Amount else 0 end) as Day_1_5_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_6_10_Payout_Amount else 0 end) as Day_6_10_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_11_15_Payout_Amount else 0 end) as Day_11_15_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_16_20_Payout_Amount else 0 end) as Day_16_20_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_21_25_Payout_Amount else 0 end) as Day_21_25_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_26_31_Payout_Amount else 0 end) as Day_26_31_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_0_3_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_3_6_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_6_9_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_9_12_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_12_15_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_15_18_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_18_21_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_21_24_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_0_3_Payout_Amount else 0 end) as Hour_0_3_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_3_6_Payout_Amount else 0 end) as Hour_3_6_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_6_9_Payout_Amount else 0 end) as Hour_6_9_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_9_12_Payout_Amount else 0 end) as Hour_9_12_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_12_15_Payout_Amount else 0 end) as Hour_12_15_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_15_18_Payout_Amount else 0 end) as Hour_15_18_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_18_21_Payout_Amount else 0 end) as Hour_18_21_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_21_24_Payout_Amount else 0 end) as Hour_21_24_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_0_3_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_3_6_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_6_9_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_9_12_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_12_15_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_15_18_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_18_21_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_21_24_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Payout_Amount else 0 end) as Workday_H_0_3_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Payout_Amount else 0 end) as Workday_H_3_6_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Payout_Amount else 0 end) as Workday_H_6_9_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Payout_Amount else 0 end) as Workday_H_9_12_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Payout_Amount else 0 end) as Workday_H_12_15_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Payout_Amount else 0 end) as Workday_H_15_18_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Payout_Amount else 0 end) as Workday_H_18_21_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Payout_Amount else 0 end) as Workday_H_21_24_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Payout_Amount else 0 end) as Weekend_H_0_3_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Payout_Amount else 0 end) as Weekend_H_3_6_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Payout_Amount else 0 end) as Weekend_H_6_9_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Payout_Amount else 0 end) as Weekend_H_9_12_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Payout_Amount else 0 end) as Weekend_H_12_15_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Payout_Amount else 0 end) as Weekend_H_15_18_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Payout_Amount else 0 end) as Weekend_H_18_21_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Payout_Amount else 0 end) as Weekend_H_21_24_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Monday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Monday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Tuesday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Wednesday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Thursday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Friday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Friday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Saturday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Sunday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Monday_Iddaa_Payout_Amount else 0 end) as Monday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_Payout_Amount else 0 end) as Tuesday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_Payout_Amount else 0 end) as Wednesday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_Payout_Amount else 0 end) as Thursday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Friday_Iddaa_Payout_Amount else 0 end) as Friday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_Payout_Amount else 0 end) as Saturday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_Payout_Amount else 0 end) as Sunday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_Iddaa_Payout_Amount else 0 end) as Workday_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_Payout_Amount else 0 end) as Weekend_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_1_5_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_6_10_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_11_15_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_16_20_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_21_25_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_26_31_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_Payout_Amount else 0 end) as Day_1_5_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_Payout_Amount else 0 end) as Day_6_10_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_Payout_Amount else 0 end) as Day_11_15_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_Payout_Amount else 0 end) as Day_16_20_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_Payout_Amount else 0 end) as Day_21_25_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_Payout_Amount else 0 end) as Day_26_31_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_Payout_Amount else 0 end) as Hour_0_3_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_Payout_Amount else 0 end) as Hour_3_6_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_Payout_Amount else 0 end) as Hour_6_9_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_Payout_Amount else 0 end) as Hour_9_12_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_Payout_Amount else 0 end) as Hour_12_15_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_Payout_Amount else 0 end) as Hour_15_18_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_Payout_Amount else 0 end) as Hour_18_21_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_Payout_Amount else 0 end) as Hour_21_24_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_Payout_Amount else 0 end) as Workday_H_0_3_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_Payout_Amount else 0 end) as Workday_H_3_6_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_Payout_Amount else 0 end) as Workday_H_6_9_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_Payout_Amount else 0 end) as Workday_H_9_12_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_Payout_Amount else 0 end) as Workday_H_12_15_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_Payout_Amount else 0 end) as Workday_H_15_18_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_Payout_Amount else 0 end) as Workday_H_18_21_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_Payout_Amount else 0 end) as Workday_H_21_24_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_Payout_Amount else 0 end) as Weekend_H_0_3_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_Payout_Amount else 0 end) as Weekend_H_3_6_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_Payout_Amount else 0 end) as Weekend_H_6_9_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_Payout_Amount else 0 end) as Weekend_H_9_12_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_Payout_Amount else 0 end) as Weekend_H_12_15_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_Payout_Amount else 0 end) as Weekend_H_15_18_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_Payout_Amount else 0 end) as Weekend_H_18_21_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=trunc(sysdate) -7 and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_Payout_Amount else 0 end) as Weekend_H_21_24_Iddaa_Payout_Amount_SonHafta,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout else 0 end) as NumofSingleCoupon_Payout_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_Iddaa else 0 end) as NumofSingleCoupon_Payout_Iddaa_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_STO else 0 end) as NumofSingleCoupon_Payout_STO_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_MP else 0 end) as NumofSingleCoupon_Payout_MP_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Payout_Amount else 0 end) as Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Payout_Amount_Iddaa else 0 end) as Payout_Amount_Iddaa_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Payout_Amount_STO else 0 end) as Payout_Amount_STO_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Payout_Amount_MP else 0 end) as Payout_Amount_MP_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Monday_SingleCoupon_Payout_Count else 0 end) as Monday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Tuesday_SingleCoupon_Payout_Count else 0 end) as Tuesday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Wednesday_SingleCoupon_Payout_Count else 0 end) as Wednesday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Thursday_SingleCoupon_Payout_Count else 0 end) as Thursday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Friday_SingleCoupon_Payout_Count else 0 end) as Friday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Saturday_SingleCoupon_Payout_Count else 0 end) as Saturday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Sunday_SingleCoupon_Payout_Count else 0 end) as Sunday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_SingleCoupon_Payout_Count else 0 end) as Workday_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_SingleCoupon_Payout_Count else 0 end) as Weekend_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Monday_Payout_Amount else 0 end) as Monday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Tuesday_Payout_Amount else 0 end) as Tuesday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Wednesday_Payout_Amount else 0 end) as Wednesday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Thursday_Payout_Amount else 0 end) as Thursday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Friday_Payout_Amount else 0 end) as Friday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Saturday_Payout_Amount else 0 end) as Saturday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Sunday_Payout_Amount else 0 end) as Sunday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_Payout_Amount else 0 end) as Workday_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_Payout_Amount else 0 end) as Weekend_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_1_5_SingleCoupon_Payout_Count else 0 end) as Day_1_5_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_6_10_SingleCoupon_Payout_Count else 0 end) as Day_6_10_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_11_15_SingleCoupon_Payout_Count else 0 end) as Day_11_15_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_16_20_SingleCoupon_Payout_Count else 0 end) as Day_16_20_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_21_25_SingleCoupon_Payout_Count else 0 end) as Day_21_25_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_26_31_SingleCoupon_Payout_Count else 0 end) as Day_26_31_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_1_5_Payout_Amount else 0 end) as Day_1_5_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_6_10_Payout_Amount else 0 end) as Day_6_10_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_11_15_Payout_Amount else 0 end) as Day_11_15_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_16_20_Payout_Amount else 0 end) as Day_16_20_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_21_25_Payout_Amount else 0 end) as Day_21_25_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_26_31_Payout_Amount else 0 end) as Day_26_31_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_0_3_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_3_6_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_6_9_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_9_12_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_12_15_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_15_18_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_18_21_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_21_24_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_0_3_Payout_Amount else 0 end) as Hour_0_3_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_3_6_Payout_Amount else 0 end) as Hour_3_6_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_6_9_Payout_Amount else 0 end) as Hour_6_9_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_9_12_Payout_Amount else 0 end) as Hour_9_12_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_12_15_Payout_Amount else 0 end) as Hour_12_15_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_15_18_Payout_Amount else 0 end) as Hour_15_18_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_18_21_Payout_Amount else 0 end) as Hour_18_21_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_21_24_Payout_Amount else 0 end) as Hour_21_24_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Payout_Amount else 0 end) as Workday_H_0_3_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Payout_Amount else 0 end) as Workday_H_3_6_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Payout_Amount else 0 end) as Workday_H_6_9_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Payout_Amount else 0 end) as Workday_H_9_12_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Payout_Amount else 0 end) as Workday_H_12_15_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Payout_Amount else 0 end) as Workday_H_15_18_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Payout_Amount else 0 end) as Workday_H_18_21_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Payout_Amount else 0 end) as Workday_H_21_24_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Payout_Amount else 0 end) as Weekend_H_0_3_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Payout_Amount else 0 end) as Weekend_H_3_6_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Payout_Amount else 0 end) as Weekend_H_6_9_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Payout_Amount else 0 end) as Weekend_H_9_12_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Payout_Amount else 0 end) as Weekend_H_12_15_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Payout_Amount else 0 end) as Weekend_H_15_18_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Payout_Amount else 0 end) as Weekend_H_18_21_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Payout_Amount else 0 end) as Weekend_H_21_24_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Monday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Tuesday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Wednesday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Thursday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Friday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Saturday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Sunday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_Payout_Amount else 0 end) as Monday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_Payout_Amount else 0 end) as Tuesday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_Payout_Amount else 0 end) as Wednesday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_Payout_Amount else 0 end) as Thursday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_Payout_Amount else 0 end) as Friday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_Payout_Amount else 0 end) as Saturday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_Payout_Amount else 0 end) as Sunday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_Payout_Amount else 0 end) as Workday_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_Payout_Amount else 0 end) as Weekend_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_1_5_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_6_10_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_11_15_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_16_20_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_21_25_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_26_31_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_Payout_Amount else 0 end) as Day_1_5_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_Payout_Amount else 0 end) as Day_6_10_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_Payout_Amount else 0 end) as Day_11_15_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_Payout_Amount else 0 end) as Day_16_20_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_Payout_Amount else 0 end) as Day_21_25_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_Payout_Amount else 0 end) as Day_26_31_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_Payout_Amount else 0 end) as Hour_0_3_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_Payout_Amount else 0 end) as Hour_3_6_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_Payout_Amount else 0 end) as Hour_6_9_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_Payout_Amount else 0 end) as Hour_9_12_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_Payout_Amount else 0 end) as Hour_12_15_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_Payout_Amount else 0 end) as Hour_15_18_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_Payout_Amount else 0 end) as Hour_18_21_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_Payout_Amount else 0 end) as Hour_21_24_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_Payout_Amount else 0 end) as Workday_H_0_3_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_Payout_Amount else 0 end) as Workday_H_3_6_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_Payout_Amount else 0 end) as Workday_H_6_9_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_Payout_Amount else 0 end) as Workday_H_9_12_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_Payout_Amount else 0 end) as Workday_H_12_15_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_Payout_Amount else 0 end) as Workday_H_15_18_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_Payout_Amount else 0 end) as Workday_H_18_21_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_Payout_Amount else 0 end) as Workday_H_21_24_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_Payout_Amount else 0 end) as Weekend_H_0_3_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_Payout_Amount else 0 end) as Weekend_H_3_6_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_Payout_Amount else 0 end) as Weekend_H_6_9_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_Payout_Amount else 0 end) as Weekend_H_9_12_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_Payout_Amount else 0 end) as Weekend_H_12_15_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_Payout_Amount else 0 end) as Weekend_H_15_18_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_Payout_Amount else 0 end) as Weekend_H_18_21_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -1) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_Payout_Amount else 0 end) as Weekend_H_21_24_Iddaa_Payout_Amount_SonAy,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout else 0 end) as NumofSingleCoupon_Payout_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_Iddaa else 0 end) as NumofSingleCoupon_Payout_Iddaa_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_STO else 0 end) as NumofSingleCoupon_Payout_STO_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_MP else 0 end) as NumofSingleCoupon_Payout_MP_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Payout_Amount else 0 end) as Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Payout_Amount_Iddaa else 0 end) as Payout_Amount_Iddaa_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Payout_Amount_STO else 0 end) as Payout_Amount_STO_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Payout_Amount_MP else 0 end) as Payout_Amount_MP_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Monday_SingleCoupon_Payout_Count else 0 end) as Monday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Tuesday_SingleCoupon_Payout_Count else 0 end) as Tuesday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Wednesday_SingleCoupon_Payout_Count else 0 end) as Wednesday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Thursday_SingleCoupon_Payout_Count else 0 end) as Thursday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Friday_SingleCoupon_Payout_Count else 0 end) as Friday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Saturday_SingleCoupon_Payout_Count else 0 end) as Saturday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Sunday_SingleCoupon_Payout_Count else 0 end) as Sunday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_SingleCoupon_Payout_Count else 0 end) as Workday_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_SingleCoupon_Payout_Count else 0 end) as Weekend_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Monday_Payout_Amount else 0 end) as Monday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Tuesday_Payout_Amount else 0 end) as Tuesday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Wednesday_Payout_Amount else 0 end) as Wednesday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Thursday_Payout_Amount else 0 end) as Thursday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Friday_Payout_Amount else 0 end) as Friday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Saturday_Payout_Amount else 0 end) as Saturday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Sunday_Payout_Amount else 0 end) as Sunday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_Payout_Amount else 0 end) as Workday_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_Payout_Amount else 0 end) as Weekend_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_1_5_SingleCoupon_Payout_Count else 0 end) as Day_1_5_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_6_10_SingleCoupon_Payout_Count else 0 end) as Day_6_10_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_11_15_SingleCoupon_Payout_Count else 0 end) as Day_11_15_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_16_20_SingleCoupon_Payout_Count else 0 end) as Day_16_20_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_21_25_SingleCoupon_Payout_Count else 0 end) as Day_21_25_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_26_31_SingleCoupon_Payout_Count else 0 end) as Day_26_31_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_1_5_Payout_Amount else 0 end) as Day_1_5_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_6_10_Payout_Amount else 0 end) as Day_6_10_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_11_15_Payout_Amount else 0 end) as Day_11_15_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_16_20_Payout_Amount else 0 end) as Day_16_20_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_21_25_Payout_Amount else 0 end) as Day_21_25_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_26_31_Payout_Amount else 0 end) as Day_26_31_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_0_3_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_3_6_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_6_9_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_9_12_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_12_15_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_15_18_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_18_21_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_21_24_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_0_3_Payout_Amount else 0 end) as Hour_0_3_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_3_6_Payout_Amount else 0 end) as Hour_3_6_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_6_9_Payout_Amount else 0 end) as Hour_6_9_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_9_12_Payout_Amount else 0 end) as Hour_9_12_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_12_15_Payout_Amount else 0 end) as Hour_12_15_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_15_18_Payout_Amount else 0 end) as Hour_15_18_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_18_21_Payout_Amount else 0 end) as Hour_18_21_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_21_24_Payout_Amount else 0 end) as Hour_21_24_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Payout_Amount else 0 end) as Workday_H_0_3_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Payout_Amount else 0 end) as Workday_H_3_6_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Payout_Amount else 0 end) as Workday_H_6_9_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Payout_Amount else 0 end) as Workday_H_9_12_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Payout_Amount else 0 end) as Workday_H_12_15_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Payout_Amount else 0 end) as Workday_H_15_18_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Payout_Amount else 0 end) as Workday_H_18_21_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Payout_Amount else 0 end) as Workday_H_21_24_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Payout_Amount else 0 end) as Weekend_H_0_3_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Payout_Amount else 0 end) as Weekend_H_3_6_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Payout_Amount else 0 end) as Weekend_H_6_9_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Payout_Amount else 0 end) as Weekend_H_9_12_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Payout_Amount else 0 end) as Weekend_H_12_15_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Payout_Amount else 0 end) as Weekend_H_15_18_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Payout_Amount else 0 end) as Weekend_H_18_21_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Payout_Amount else 0 end) as Weekend_H_21_24_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Monday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Tuesday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Wednesday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Thursday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Friday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Saturday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Sunday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_Payout_Amount else 0 end) as Monday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_Payout_Amount else 0 end) as Tuesday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_Payout_Amount else 0 end) as Wednesday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_Payout_Amount else 0 end) as Thursday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_Payout_Amount else 0 end) as Friday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_Payout_Amount else 0 end) as Saturday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_Payout_Amount else 0 end) as Sunday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_Payout_Amount else 0 end) as Workday_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_Payout_Amount else 0 end) as Weekend_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_1_5_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_6_10_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_11_15_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_16_20_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_21_25_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_26_31_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_Payout_Amount else 0 end) as Day_1_5_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_Payout_Amount else 0 end) as Day_6_10_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_Payout_Amount else 0 end) as Day_11_15_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_Payout_Amount else 0 end) as Day_16_20_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_Payout_Amount else 0 end) as Day_21_25_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_Payout_Amount else 0 end) as Day_26_31_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_Payout_Amount else 0 end) as Hour_0_3_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_Payout_Amount else 0 end) as Hour_3_6_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_Payout_Amount else 0 end) as Hour_6_9_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_Payout_Amount else 0 end) as Hour_9_12_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_Payout_Amount else 0 end) as Hour_12_15_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_Payout_Amount else 0 end) as Hour_15_18_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_Payout_Amount else 0 end) as Hour_18_21_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_Payout_Amount else 0 end) as Hour_21_24_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_Payout_Amount else 0 end) as Workday_H_0_3_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_Payout_Amount else 0 end) as Workday_H_3_6_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_Payout_Amount else 0 end) as Workday_H_6_9_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_Payout_Amount else 0 end) as Workday_H_9_12_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_Payout_Amount else 0 end) as Workday_H_12_15_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_Payout_Amount else 0 end) as Workday_H_15_18_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_Payout_Amount else 0 end) as Workday_H_18_21_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_Payout_Amount else 0 end) as Workday_H_21_24_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_Payout_Amount else 0 end) as Weekend_H_0_3_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_Payout_Amount else 0 end) as Weekend_H_3_6_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_Payout_Amount else 0 end) as Weekend_H_6_9_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_Payout_Amount else 0 end) as Weekend_H_9_12_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_Payout_Amount else 0 end) as Weekend_H_12_15_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_Payout_Amount else 0 end) as Weekend_H_15_18_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_Payout_Amount else 0 end) as Weekend_H_18_21_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -3) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_Payout_Amount else 0 end) as Weekend_H_21_24_Iddaa_Payout_Amount_Son3Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout else 0 end) as NumofSingleCoupon_Payout_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_Iddaa else 0 end) as NumofSingleCoupon_Payout_Iddaa_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_STO else 0 end) as NumofSingleCoupon_Payout_STO_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_MP else 0 end) as NumofSingleCoupon_Payout_MP_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Payout_Amount else 0 end) as Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Payout_Amount_Iddaa else 0 end) as Payout_Amount_Iddaa_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Payout_Amount_STO else 0 end) as Payout_Amount_STO_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Payout_Amount_MP else 0 end) as Payout_Amount_MP_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Monday_SingleCoupon_Payout_Count else 0 end) as Monday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Tuesday_SingleCoupon_Payout_Count else 0 end) as Tuesday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Wednesday_SingleCoupon_Payout_Count else 0 end) as Wednesday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Thursday_SingleCoupon_Payout_Count else 0 end) as Thursday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Friday_SingleCoupon_Payout_Count else 0 end) as Friday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Saturday_SingleCoupon_Payout_Count else 0 end) as Saturday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Sunday_SingleCoupon_Payout_Count else 0 end) as Sunday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_SingleCoupon_Payout_Count else 0 end) as Workday_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_SingleCoupon_Payout_Count else 0 end) as Weekend_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Monday_Payout_Amount else 0 end) as Monday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Tuesday_Payout_Amount else 0 end) as Tuesday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Wednesday_Payout_Amount else 0 end) as Wednesday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Thursday_Payout_Amount else 0 end) as Thursday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Friday_Payout_Amount else 0 end) as Friday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Saturday_Payout_Amount else 0 end) as Saturday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Sunday_Payout_Amount else 0 end) as Sunday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_Payout_Amount else 0 end) as Workday_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_Payout_Amount else 0 end) as Weekend_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_1_5_SingleCoupon_Payout_Count else 0 end) as Day_1_5_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_6_10_SingleCoupon_Payout_Count else 0 end) as Day_6_10_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_11_15_SingleCoupon_Payout_Count else 0 end) as Day_11_15_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_16_20_SingleCoupon_Payout_Count else 0 end) as Day_16_20_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_21_25_SingleCoupon_Payout_Count else 0 end) as Day_21_25_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_26_31_SingleCoupon_Payout_Count else 0 end) as Day_26_31_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_1_5_Payout_Amount else 0 end) as Day_1_5_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_6_10_Payout_Amount else 0 end) as Day_6_10_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_11_15_Payout_Amount else 0 end) as Day_11_15_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_16_20_Payout_Amount else 0 end) as Day_16_20_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_21_25_Payout_Amount else 0 end) as Day_21_25_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_26_31_Payout_Amount else 0 end) as Day_26_31_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_0_3_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_3_6_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_6_9_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_9_12_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_12_15_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_15_18_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_18_21_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_21_24_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_0_3_Payout_Amount else 0 end) as Hour_0_3_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_3_6_Payout_Amount else 0 end) as Hour_3_6_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_6_9_Payout_Amount else 0 end) as Hour_6_9_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_9_12_Payout_Amount else 0 end) as Hour_9_12_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_12_15_Payout_Amount else 0 end) as Hour_12_15_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_15_18_Payout_Amount else 0 end) as Hour_15_18_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_18_21_Payout_Amount else 0 end) as Hour_18_21_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_21_24_Payout_Amount else 0 end) as Hour_21_24_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Payout_Amount else 0 end) as Workday_H_0_3_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Payout_Amount else 0 end) as Workday_H_3_6_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Payout_Amount else 0 end) as Workday_H_6_9_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Payout_Amount else 0 end) as Workday_H_9_12_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Payout_Amount else 0 end) as Workday_H_12_15_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Payout_Amount else 0 end) as Workday_H_15_18_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Payout_Amount else 0 end) as Workday_H_18_21_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Payout_Amount else 0 end) as Workday_H_21_24_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Payout_Amount else 0 end) as Weekend_H_0_3_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Payout_Amount else 0 end) as Weekend_H_3_6_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Payout_Amount else 0 end) as Weekend_H_6_9_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Payout_Amount else 0 end) as Weekend_H_9_12_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Payout_Amount else 0 end) as Weekend_H_12_15_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Payout_Amount else 0 end) as Weekend_H_15_18_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Payout_Amount else 0 end) as Weekend_H_18_21_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Payout_Amount else 0 end) as Weekend_H_21_24_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Monday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Tuesday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Wednesday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Thursday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Friday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Saturday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Sunday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_Payout_Amount else 0 end) as Monday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_Payout_Amount else 0 end) as Tuesday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_Payout_Amount else 0 end) as Wednesday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_Payout_Amount else 0 end) as Thursday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_Payout_Amount else 0 end) as Friday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_Payout_Amount else 0 end) as Saturday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_Payout_Amount else 0 end) as Sunday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_Payout_Amount else 0 end) as Workday_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_Payout_Amount else 0 end) as Weekend_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_1_5_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_6_10_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_11_15_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_16_20_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_21_25_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_26_31_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_Payout_Amount else 0 end) as Day_1_5_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_Payout_Amount else 0 end) as Day_6_10_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_Payout_Amount else 0 end) as Day_11_15_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_Payout_Amount else 0 end) as Day_16_20_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_Payout_Amount else 0 end) as Day_21_25_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_Payout_Amount else 0 end) as Day_26_31_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_Payout_Amount else 0 end) as Hour_0_3_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_Payout_Amount else 0 end) as Hour_3_6_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_Payout_Amount else 0 end) as Hour_6_9_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_Payout_Amount else 0 end) as Hour_9_12_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_Payout_Amount else 0 end) as Hour_12_15_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_Payout_Amount else 0 end) as Hour_15_18_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_Payout_Amount else 0 end) as Hour_18_21_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_Payout_Amount else 0 end) as Hour_21_24_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_Payout_Amount else 0 end) as Workday_H_0_3_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_Payout_Amount else 0 end) as Workday_H_3_6_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_Payout_Amount else 0 end) as Workday_H_6_9_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_Payout_Amount else 0 end) as Workday_H_9_12_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_Payout_Amount else 0 end) as Workday_H_12_15_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_Payout_Amount else 0 end) as Workday_H_15_18_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_Payout_Amount else 0 end) as Workday_H_18_21_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_Payout_Amount else 0 end) as Workday_H_21_24_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_Payout_Amount else 0 end) as Weekend_H_0_3_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_Payout_Amount else 0 end) as Weekend_H_3_6_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_Payout_Amount else 0 end) as Weekend_H_6_9_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_Payout_Amount else 0 end) as Weekend_H_9_12_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_Payout_Amount else 0 end) as Weekend_H_12_15_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_Payout_Amount else 0 end) as Weekend_H_15_18_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_Payout_Amount else 0 end) as Weekend_H_18_21_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -6) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_Payout_Amount else 0 end) as Weekend_H_21_24_Iddaa_Payout_Amount_Son6Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout else 0 end) as NumofSingleCoupon_Payout_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_Iddaa else 0 end) as NumofSingleCoupon_Payout_Iddaa_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_STO else 0 end) as NumofSingleCoupon_Payout_STO_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then NumofSingleCoupon_Payout_MP else 0 end) as NumofSingleCoupon_Payout_MP_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Payout_Amount else 0 end) as Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Payout_Amount_Iddaa else 0 end) as Payout_Amount_Iddaa_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Payout_Amount_STO else 0 end) as Payout_Amount_STO_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Payout_Amount_MP else 0 end) as Payout_Amount_MP_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Monday_SingleCoupon_Payout_Count else 0 end) as Monday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Tuesday_SingleCoupon_Payout_Count else 0 end) as Tuesday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Wednesday_SingleCoupon_Payout_Count else 0 end) as Wednesday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Thursday_SingleCoupon_Payout_Count else 0 end) as Thursday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Friday_SingleCoupon_Payout_Count else 0 end) as Friday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Saturday_SingleCoupon_Payout_Count else 0 end) as Saturday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Sunday_SingleCoupon_Payout_Count else 0 end) as Sunday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_SingleCoupon_Payout_Count else 0 end) as Workday_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_SingleCoupon_Payout_Count else 0 end) as Weekend_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Monday_Payout_Amount else 0 end) as Monday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Tuesday_Payout_Amount else 0 end) as Tuesday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Wednesday_Payout_Amount else 0 end) as Wednesday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Thursday_Payout_Amount else 0 end) as Thursday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Friday_Payout_Amount else 0 end) as Friday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Saturday_Payout_Amount else 0 end) as Saturday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Sunday_Payout_Amount else 0 end) as Sunday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_Payout_Amount else 0 end) as Workday_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_Payout_Amount else 0 end) as Weekend_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_1_5_SingleCoupon_Payout_Count else 0 end) as Day_1_5_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_6_10_SingleCoupon_Payout_Count else 0 end) as Day_6_10_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_11_15_SingleCoupon_Payout_Count else 0 end) as Day_11_15_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_16_20_SingleCoupon_Payout_Count else 0 end) as Day_16_20_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_21_25_SingleCoupon_Payout_Count else 0 end) as Day_21_25_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_26_31_SingleCoupon_Payout_Count else 0 end) as Day_26_31_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_1_5_Payout_Amount else 0 end) as Day_1_5_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_6_10_Payout_Amount else 0 end) as Day_6_10_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_11_15_Payout_Amount else 0 end) as Day_11_15_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_16_20_Payout_Amount else 0 end) as Day_16_20_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_21_25_Payout_Amount else 0 end) as Day_21_25_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_26_31_Payout_Amount else 0 end) as Day_26_31_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_0_3_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_3_6_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_6_9_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_9_12_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_12_15_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_15_18_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_18_21_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_21_24_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_0_3_Payout_Amount else 0 end) as Hour_0_3_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_3_6_Payout_Amount else 0 end) as Hour_3_6_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_6_9_Payout_Amount else 0 end) as Hour_6_9_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_9_12_Payout_Amount else 0 end) as Hour_9_12_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_12_15_Payout_Amount else 0 end) as Hour_12_15_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_15_18_Payout_Amount else 0 end) as Hour_15_18_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_18_21_Payout_Amount else 0 end) as Hour_18_21_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_21_24_Payout_Amount else 0 end) as Hour_21_24_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Payout_Amount else 0 end) as Workday_H_0_3_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Payout_Amount else 0 end) as Workday_H_3_6_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Payout_Amount else 0 end) as Workday_H_6_9_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Payout_Amount else 0 end) as Workday_H_9_12_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Payout_Amount else 0 end) as Workday_H_12_15_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Payout_Amount else 0 end) as Workday_H_15_18_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Payout_Amount else 0 end) as Workday_H_18_21_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Payout_Amount else 0 end) as Workday_H_21_24_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Payout_Amount else 0 end) as Weekend_H_0_3_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Payout_Amount else 0 end) as Weekend_H_3_6_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Payout_Amount else 0 end) as Weekend_H_6_9_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Payout_Amount else 0 end) as Weekend_H_9_12_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Payout_Amount else 0 end) as Weekend_H_12_15_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Payout_Amount else 0 end) as Weekend_H_15_18_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Payout_Amount else 0 end) as Weekend_H_18_21_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Payout_Amount else 0 end) as Weekend_H_21_24_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Monday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Tuesday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Wednesday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Thursday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Friday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Saturday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Sunday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Monday_Iddaa_Payout_Amount else 0 end) as Monday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Tuesday_Iddaa_Payout_Amount else 0 end) as Tuesday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Wednesday_Iddaa_Payout_Amount else 0 end) as Wednesday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Thursday_Iddaa_Payout_Amount else 0 end) as Thursday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Friday_Iddaa_Payout_Amount else 0 end) as Friday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Saturday_Iddaa_Payout_Amount else 0 end) as Saturday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Sunday_Iddaa_Payout_Amount else 0 end) as Sunday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_Iddaa_Payout_Amount else 0 end) as Workday_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_Iddaa_Payout_Amount else 0 end) as Weekend_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_1_5_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_6_10_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_11_15_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_16_20_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_21_25_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_SingleCoupon_Payout_Count else 0 end) as Day_26_31_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_1_5_Iddaa_Payout_Amount else 0 end) as Day_1_5_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_6_10_Iddaa_Payout_Amount else 0 end) as Day_6_10_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_11_15_Iddaa_Payout_Amount else 0 end) as Day_11_15_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_16_20_Iddaa_Payout_Amount else 0 end) as Day_16_20_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_21_25_Iddaa_Payout_Amount else 0 end) as Day_21_25_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Day_26_31_Iddaa_Payout_Amount else 0 end) as Day_26_31_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_0_3_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_3_6_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_6_9_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_9_12_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_12_15_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_15_18_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_18_21_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Hour_21_24_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_0_3_Iddaa_Payout_Amount else 0 end) as Hour_0_3_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_3_6_Iddaa_Payout_Amount else 0 end) as Hour_3_6_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_6_9_Iddaa_Payout_Amount else 0 end) as Hour_6_9_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_9_12_Iddaa_Payout_Amount else 0 end) as Hour_9_12_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_12_15_Iddaa_Payout_Amount else 0 end) as Hour_12_15_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_15_18_Iddaa_Payout_Amount else 0 end) as Hour_15_18_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_18_21_Iddaa_Payout_Amount else 0 end) as Hour_18_21_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Hour_21_24_Iddaa_Payout_Amount else 0 end) as Hour_21_24_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_0_3_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_3_6_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_6_9_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_9_12_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_12_15_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_15_18_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_18_21_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Workday_H_21_24_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_0_3_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_3_6_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_6_9_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_9_12_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_12_15_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_15_18_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_18_21_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count else 0 end) as Weekend_H_21_24_Iddaa_SingleCoupon_Payout_Count_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_0_3_Iddaa_Payout_Amount else 0 end) as Workday_H_0_3_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_3_6_Iddaa_Payout_Amount else 0 end) as Workday_H_3_6_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_6_9_Iddaa_Payout_Amount else 0 end) as Workday_H_6_9_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_9_12_Iddaa_Payout_Amount else 0 end) as Workday_H_9_12_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_12_15_Iddaa_Payout_Amount else 0 end) as Workday_H_12_15_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_15_18_Iddaa_Payout_Amount else 0 end) as Workday_H_15_18_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_18_21_Iddaa_Payout_Amount else 0 end) as Workday_H_18_21_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Workday_H_21_24_Iddaa_Payout_Amount else 0 end) as Workday_H_21_24_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_0_3_Iddaa_Payout_Amount else 0 end) as Weekend_H_0_3_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_3_6_Iddaa_Payout_Amount else 0 end) as Weekend_H_3_6_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_6_9_Iddaa_Payout_Amount else 0 end) as Weekend_H_6_9_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_9_12_Iddaa_Payout_Amount else 0 end) as Weekend_H_9_12_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_12_15_Iddaa_Payout_Amount else 0 end) as Weekend_H_12_15_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_15_18_Iddaa_Payout_Amount else 0 end) as Weekend_H_15_18_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_18_21_Iddaa_Payout_Amount else 0 end) as Weekend_H_18_21_Iddaa_Payout_Amount_Son12Ay,
sum(case when REAL_DATE>=add_months(trunc(sysdate) , -12) and REAL_DATE<trunc(sysdate) then Weekend_H_21_24_Iddaa_Payout_Amount else 0 end) as Weekend_H_21_24_Iddaa_Payout_Amount_Son12Ay,
sysdate as DDWH_DATE
from lbrdwh.CUSTOMER_PAYOUT_DAILY
where REAL_DATE<trunc(sysdate)
and REAL_DATE>=add_months(trunc(sysdate) , -12)
group by CUSTOMER_ID
/

create or replace view V_DM_CUSTOMER_WITHDRAW_PAYOUT_RATIO_DAILY as
select
C.PERIOD_ORDER,
C.PERIOD,
TRUNC(SYSDATE) as REPORT_DATE,
a.CUSTOMER_ID,
(CN.REGISTRATION_DATE) as UyelikTarihi,
TRUNC(SYSDATE) - CN.REGISTRATION_DATE as UyelikSuresi,
CASE WHEN Payout_Amount_SonHafta>0 and Withdraw_Amount_SonHafta IS NULL THEN 0
     WHEN Payout_Amount_SonHafta>0  and Withdraw_Amount_SonHafta IS NOT NULL THEN 	Withdraw_Amount_SonHafta	 *1.0/	Payout_Amount_SonHafta	ELSE -9 END AS Withdraw_Payout_Ratio_SonHafta,
CASE WHEN Payout_Amount_SonAy>0 and Withdraw_Amount_SonAy IS NULL THEN 0
     WHEN Payout_Amount_SonAy>0 and Withdraw_Amount_SonAy IS NOT NULL THEN 	Withdraw_Amount_SonAy	 *1.0/	Payout_Amount_SonAy	ELSE -9 END AS Withdraw_Payout_Ratio_SonAy,
CASE WHEN Payout_Amount_Son3Ay>0 and Withdraw_Amount_Son3Ay IS NULL THEN 0
     WHEN Payout_Amount_Son3Ay>0 and Withdraw_Amount_Son3Ay IS NOT NULL THEN 	Withdraw_Amount_Son3Ay	 *1.0/	Payout_Amount_Son3Ay	ELSE -9 END AS Withdraw_Payout_Ratio_Son3Ay,
CASE WHEN Payout_Amount_Son6Ay>0 and Withdraw_Amount_Son6Ay IS NULL THEN 0
     WHEN Payout_Amount_Son6Ay>0 and Withdraw_Amount_Son6Ay IS NOT NULL THEN 	Withdraw_Amount_Son6Ay	 *1.0/	Payout_Amount_Son6Ay	ELSE -9 END AS Withdraw_Payout_Ratio_Son6Ay,
CASE WHEN Payout_Amount_Son12Ay>0 and Withdraw_Amount_Son12Ay IS NULL THEN 0
     WHEN Payout_Amount_Son12Ay>0 and Withdraw_Amount_Son12Ay IS NOT NULL THEN 	Withdraw_Amount_Son12Ay	 *1.0/	Payout_Amount_Son12Ay	ELSE -9 END AS Withdraw_Payout_Ratio_Son12Ay,
SYSDATE as DWH_DATE
FROM CRM_DM.DM_CUSTOMER_PAYOUT_DAILY a
join lbrdwh.Customer_new2 CN on A.CUSTOMER_ID=CN.CUSTOMER_ID
LEFT JOIN CRM_DM.DM_CUSTOMER_WITHDRAW_BASIC_DAILY B on A.CUSTOMER_ID=B.CUSTOMER_ID,
(SELECT * FROM CRM_DM.PERIOD_ORDER WHERE PERIOD=EXTRACT(YEAR FROM sysdate)*100+EXTRACT(MONTH FROM sysdate)) C
/

create or replace view V_DM_CUSTOMER_MONEY_DEPOSIT_DETAIL_DAILY as
select
CUSTOMER_ID,
TRUNC(SYSDATE) as REPORT_DATE,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Count else 0 end) as Workday_H_0_3_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Count else 0 end) as Workday_H_3_6_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Count else 0 end) as Workday_H_6_9_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Count else 0 end) as Workday_H_9_12_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Count else 0 end) as Workday_H_12_15_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Count else 0 end) as Workday_H_15_18_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Count else 0 end) as Workday_H_18_21_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Count else 0 end) as Workday_H_21_24_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Count else 0 end) as Weekend_H_0_3_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Count else 0 end) as Weekend_H_3_6_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Count else 0 end) as Weekend_H_6_9_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Count else 0 end) as Weekend_H_9_12_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Count else 0 end) as Weekend_H_12_15_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Count else 0 end) as Weekend_H_15_18_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Count else 0 end) as Weekend_H_18_21_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Count else 0 end) as Weekend_H_21_24_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Amount else 0 end) as Workday_H_0_3_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Amount else 0 end) as Workday_H_3_6_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Amount else 0 end) as Workday_H_6_9_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Amount else 0 end) as Workday_H_9_12_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Amount else 0 end) as Workday_H_12_15_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Amount else 0 end) as Workday_H_15_18_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Amount else 0 end) as Workday_H_18_21_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Amount else 0 end) as Workday_H_21_24_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Amount else 0 end) as Weekend_H_0_3_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Amount else 0 end) as Weekend_H_3_6_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Amount else 0 end) as Weekend_H_6_9_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Amount else 0 end) as Weekend_H_9_12_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Amount else 0 end) as Weekend_H_12_15_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Amount else 0 end) as Weekend_H_15_18_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Amount else 0 end) as Weekend_H_18_21_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Amount else 0 end) as Weekend_H_21_24_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Count else 0 end) as Workday_MobileBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Count else 0 end) as Workday_InternetBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Count else 0 end) as Workday_ATMCardless_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Count else 0 end) as Workday_ATM_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Count else 0 end) as Workday_CC_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Count else 0 end) as Workday_EFT_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Count else 0 end) as Workday_Other_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Count else 0 end) as Weekend_MobileBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Count else 0 end) as Weekend_InternetBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Count else 0 end) as Weekend_ATMCardless_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Count else 0 end) as Weekend_ATM_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Count else 0 end) as Weekend_CC_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Count else 0 end) as Weekend_EFT_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Count else 0 end) as Weekend_Other_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Count else 0 end) as H_1_6_MobileBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Count else 0 end) as H_1_6_InternetBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Count else 0 end) as H_1_6_ATMCardless_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Count else 0 end) as H_1_6_ATM_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Count else 0 end) as H_1_6_CC_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Count else 0 end) as H_1_6_EFT_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Count else 0 end) as H_1_6_Other_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Count else 0 end) as H_6_12_MobileBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Count else 0 end) as H_6_12_InternetBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Count else 0 end) as H_6_12_ATMCardless_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Count else 0 end) as H_6_12_ATM_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Count else 0 end) as H_6_12_CC_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Count else 0 end) as H_6_12_EFT_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Count else 0 end) as H_6_12_Other_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Count else 0 end) as H_12_18_MobileBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Count else 0 end) as H_12_18_InternetBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Count else 0 end) as H_12_18_ATMCardless_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Count else 0 end) as H_12_18_ATM_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Count else 0 end) as H_12_18_CC_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Count else 0 end) as H_12_18_EFT_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Count else 0 end) as H_12_18_Other_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Count else 0 end) as H_18_24_MobileBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Count else 0 end) as H_18_24_InternetBank_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Count else 0 end) as H_18_24_ATMCardless_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Count else 0 end) as H_18_24_ATM_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Count else 0 end) as H_18_24_CC_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Count else 0 end) as H_18_24_EFT_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Count else 0 end) as H_18_24_Other_Deposit_Count_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Amount else 0 end) as Workday_MobileBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Amount else 0 end) as Workday_InternetBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Amount else 0 end) as Workday_ATMCardless_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Amount else 0 end) as Workday_ATM_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Amount else 0 end) as Workday_CC_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Amount else 0 end) as Workday_EFT_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Amount else 0 end) as Workday_Other_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Amount else 0 end) as Weekend_MobileBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Amount else 0 end) as Weekend_InternetBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Amount else 0 end) as Weekend_ATMCardless_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Amount else 0 end) as Weekend_ATM_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Amount else 0 end) as Weekend_CC_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Amount else 0 end) as Weekend_EFT_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Amount else 0 end) as Weekend_Other_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Amount else 0 end) as H_1_6_MobileBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Amount else 0 end) as H_1_6_InternetBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Amount else 0 end) as H_1_6_ATMCardless_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Amount else 0 end) as H_1_6_ATM_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Amount else 0 end) as H_1_6_CC_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Amount else 0 end) as H_1_6_EFT_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Amount else 0 end) as H_1_6_Other_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Amount else 0 end) as H_6_12_MobileBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Amount else 0 end) as H_6_12_InternetBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Amount else 0 end) as H_6_12_ATMCardless_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Amount else 0 end) as H_6_12_ATM_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Amount else 0 end) as H_6_12_CC_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Amount else 0 end) as H_6_12_EFT_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Amount else 0 end) as H_6_12_Other_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Amount else 0 end) as H_12_18_MobileBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Amount else 0 end) as H_12_18_InternetBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Amount else 0 end) as H_12_18_ATMCardless_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Amount else 0 end) as H_12_18_ATM_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Amount else 0 end) as H_12_18_CC_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Amount else 0 end) as H_12_18_EFT_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Amount else 0 end) as H_12_18_Other_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Amount else 0 end) as H_18_24_MobileBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Amount else 0 end) as H_18_24_InternetBank_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Amount else 0 end) as H_18_24_ATMCardless_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Amount else 0 end) as H_18_24_ATM_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Amount else 0 end) as H_18_24_CC_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Amount else 0 end) as H_18_24_EFT_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=TRUNC(SYSDATE)-7 and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Amount else 0 end) as H_18_24_Other_Deposit_Amount_SonHafta,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Count else 0 end) as Workday_H_0_3_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Count else 0 end) as Workday_H_3_6_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Count else 0 end) as Workday_H_6_9_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Count else 0 end) as Workday_H_9_12_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Count else 0 end) as Workday_H_12_15_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Count else 0 end) as Workday_H_15_18_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Count else 0 end) as Workday_H_18_21_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Count else 0 end) as Workday_H_21_24_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Count else 0 end) as Weekend_H_0_3_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Count else 0 end) as Weekend_H_3_6_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Count else 0 end) as Weekend_H_6_9_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Count else 0 end) as Weekend_H_9_12_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Count else 0 end) as Weekend_H_12_15_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Count else 0 end) as Weekend_H_15_18_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Count else 0 end) as Weekend_H_18_21_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Count else 0 end) as Weekend_H_21_24_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Amount else 0 end) as Workday_H_0_3_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Amount else 0 end) as Workday_H_3_6_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Amount else 0 end) as Workday_H_6_9_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Amount else 0 end) as Workday_H_9_12_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Amount else 0 end) as Workday_H_12_15_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Amount else 0 end) as Workday_H_15_18_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Amount else 0 end) as Workday_H_18_21_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Amount else 0 end) as Workday_H_21_24_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Amount else 0 end) as Weekend_H_0_3_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Amount else 0 end) as Weekend_H_3_6_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Amount else 0 end) as Weekend_H_6_9_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Amount else 0 end) as Weekend_H_9_12_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Amount else 0 end) as Weekend_H_12_15_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Amount else 0 end) as Weekend_H_15_18_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Amount else 0 end) as Weekend_H_18_21_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Amount else 0 end) as Weekend_H_21_24_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Count else 0 end) as Workday_MobileBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Count else 0 end) as Workday_InternetBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Count else 0 end) as Workday_ATMCardless_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Count else 0 end) as Workday_ATM_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Count else 0 end) as Workday_CC_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Count else 0 end) as Workday_EFT_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Count else 0 end) as Workday_Other_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Count else 0 end) as Weekend_MobileBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Count else 0 end) as Weekend_InternetBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Count else 0 end) as Weekend_ATMCardless_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Count else 0 end) as Weekend_ATM_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Count else 0 end) as Weekend_CC_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Count else 0 end) as Weekend_EFT_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Count else 0 end) as Weekend_Other_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Count else 0 end) as H_1_6_MobileBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Count else 0 end) as H_1_6_InternetBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Count else 0 end) as H_1_6_ATMCardless_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Count else 0 end) as H_1_6_ATM_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Count else 0 end) as H_1_6_CC_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Count else 0 end) as H_1_6_EFT_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Count else 0 end) as H_1_6_Other_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Count else 0 end) as H_6_12_MobileBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Count else 0 end) as H_6_12_InternetBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Count else 0 end) as H_6_12_ATMCardless_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Count else 0 end) as H_6_12_ATM_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Count else 0 end) as H_6_12_CC_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Count else 0 end) as H_6_12_EFT_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Count else 0 end) as H_6_12_Other_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Count else 0 end) as H_12_18_MobileBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Count else 0 end) as H_12_18_InternetBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Count else 0 end) as H_12_18_ATMCardless_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Count else 0 end) as H_12_18_ATM_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Count else 0 end) as H_12_18_CC_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Count else 0 end) as H_12_18_EFT_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Count else 0 end) as H_12_18_Other_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Count else 0 end) as H_18_24_MobileBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Count else 0 end) as H_18_24_InternetBank_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Count else 0 end) as H_18_24_ATMCardless_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Count else 0 end) as H_18_24_ATM_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Count else 0 end) as H_18_24_CC_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Count else 0 end) as H_18_24_EFT_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Count else 0 end) as H_18_24_Other_Deposit_Count_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Amount else 0 end) as Workday_MobileBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Amount else 0 end) as Workday_InternetBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Amount else 0 end) as Workday_ATMCardless_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Amount else 0 end) as Workday_ATM_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Amount else 0 end) as Workday_CC_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Amount else 0 end) as Workday_EFT_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Amount else 0 end) as Workday_Other_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Amount else 0 end) as Weekend_MobileBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Amount else 0 end) as Weekend_InternetBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Amount else 0 end) as Weekend_ATMCardless_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Amount else 0 end) as Weekend_ATM_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Amount else 0 end) as Weekend_CC_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Amount else 0 end) as Weekend_EFT_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Amount else 0 end) as Weekend_Other_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Amount else 0 end) as H_1_6_MobileBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Amount else 0 end) as H_1_6_InternetBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Amount else 0 end) as H_1_6_ATMCardless_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Amount else 0 end) as H_1_6_ATM_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Amount else 0 end) as H_1_6_CC_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Amount else 0 end) as H_1_6_EFT_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Amount else 0 end) as H_1_6_Other_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Amount else 0 end) as H_6_12_MobileBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Amount else 0 end) as H_6_12_InternetBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Amount else 0 end) as H_6_12_ATMCardless_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Amount else 0 end) as H_6_12_ATM_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Amount else 0 end) as H_6_12_CC_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Amount else 0 end) as H_6_12_EFT_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Amount else 0 end) as H_6_12_Other_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Amount else 0 end) as H_12_18_MobileBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Amount else 0 end) as H_12_18_InternetBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Amount else 0 end) as H_12_18_ATMCardless_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Amount else 0 end) as H_12_18_ATM_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Amount else 0 end) as H_12_18_CC_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Amount else 0 end) as H_12_18_EFT_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Amount else 0 end) as H_12_18_Other_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Amount else 0 end) as H_18_24_MobileBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Amount else 0 end) as H_18_24_InternetBank_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Amount else 0 end) as H_18_24_ATMCardless_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Amount else 0 end) as H_18_24_ATM_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Amount else 0 end) as H_18_24_CC_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Amount else 0 end) as H_18_24_EFT_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-1) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Amount else 0 end) as H_18_24_Other_Deposit_Amount_SonAy,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Count else 0 end) as Workday_H_0_3_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Count else 0 end) as Workday_H_3_6_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Count else 0 end) as Workday_H_6_9_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Count else 0 end) as Workday_H_9_12_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Count else 0 end) as Workday_H_12_15_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Count else 0 end) as Workday_H_15_18_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Count else 0 end) as Workday_H_18_21_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Count else 0 end) as Workday_H_21_24_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Count else 0 end) as Weekend_H_0_3_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Count else 0 end) as Weekend_H_3_6_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Count else 0 end) as Weekend_H_6_9_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Count else 0 end) as Weekend_H_9_12_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Count else 0 end) as Weekend_H_12_15_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Count else 0 end) as Weekend_H_15_18_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Count else 0 end) as Weekend_H_18_21_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Count else 0 end) as Weekend_H_21_24_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Amount else 0 end) as Workday_H_0_3_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Amount else 0 end) as Workday_H_3_6_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Amount else 0 end) as Workday_H_6_9_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Amount else 0 end) as Workday_H_9_12_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Amount else 0 end) as Workday_H_12_15_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Amount else 0 end) as Workday_H_15_18_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Amount else 0 end) as Workday_H_18_21_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Amount else 0 end) as Workday_H_21_24_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Amount else 0 end) as Weekend_H_0_3_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Amount else 0 end) as Weekend_H_3_6_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Amount else 0 end) as Weekend_H_6_9_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Amount else 0 end) as Weekend_H_9_12_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Amount else 0 end) as Weekend_H_12_15_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Amount else 0 end) as Weekend_H_15_18_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Amount else 0 end) as Weekend_H_18_21_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Amount else 0 end) as Weekend_H_21_24_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Count else 0 end) as Workday_MobileBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Count else 0 end) as Workday_InternetBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Count else 0 end) as Workday_ATMCardless_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Count else 0 end) as Workday_ATM_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Count else 0 end) as Workday_CC_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Count else 0 end) as Workday_EFT_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Count else 0 end) as Workday_Other_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Count else 0 end) as Weekend_MobileBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Count else 0 end) as Weekend_InternetBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Count else 0 end) as Weekend_ATMCardless_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Count else 0 end) as Weekend_ATM_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Count else 0 end) as Weekend_CC_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Count else 0 end) as Weekend_EFT_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Count else 0 end) as Weekend_Other_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Count else 0 end) as H_1_6_MobileBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Count else 0 end) as H_1_6_InternetBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Count else 0 end) as H_1_6_ATMCardless_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Count else 0 end) as H_1_6_ATM_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Count else 0 end) as H_1_6_CC_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Count else 0 end) as H_1_6_EFT_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Count else 0 end) as H_1_6_Other_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Count else 0 end) as H_6_12_MobileBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Count else 0 end) as H_6_12_InternetBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Count else 0 end) as H_6_12_ATMCardless_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Count else 0 end) as H_6_12_ATM_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Count else 0 end) as H_6_12_CC_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Count else 0 end) as H_6_12_EFT_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Count else 0 end) as H_6_12_Other_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Count else 0 end) as H_12_18_MobileBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Count else 0 end) as H_12_18_InternetBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Count else 0 end) as H_12_18_ATMCardless_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Count else 0 end) as H_12_18_ATM_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Count else 0 end) as H_12_18_CC_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Count else 0 end) as H_12_18_EFT_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Count else 0 end) as H_12_18_Other_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Count else 0 end) as H_18_24_MobileBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Count else 0 end) as H_18_24_InternetBank_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Count else 0 end) as H_18_24_ATMCardless_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Count else 0 end) as H_18_24_ATM_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Count else 0 end) as H_18_24_CC_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Count else 0 end) as H_18_24_EFT_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Count else 0 end) as H_18_24_Other_Deposit_Count_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Amount else 0 end) as Workday_MobileBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Amount else 0 end) as Workday_InternetBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Amount else 0 end) as Workday_ATMCardless_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Amount else 0 end) as Workday_ATM_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Amount else 0 end) as Workday_CC_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Amount else 0 end) as Workday_EFT_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Amount else 0 end) as Workday_Other_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Amount else 0 end) as Weekend_MobileBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Amount else 0 end) as Weekend_InternetBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Amount else 0 end) as Weekend_ATMCardless_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Amount else 0 end) as Weekend_ATM_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Amount else 0 end) as Weekend_CC_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Amount else 0 end) as Weekend_EFT_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Amount else 0 end) as Weekend_Other_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Amount else 0 end) as H_1_6_MobileBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Amount else 0 end) as H_1_6_InternetBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Amount else 0 end) as H_1_6_ATMCardless_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Amount else 0 end) as H_1_6_ATM_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Amount else 0 end) as H_1_6_CC_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Amount else 0 end) as H_1_6_EFT_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Amount else 0 end) as H_1_6_Other_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Amount else 0 end) as H_6_12_MobileBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Amount else 0 end) as H_6_12_InternetBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Amount else 0 end) as H_6_12_ATMCardless_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Amount else 0 end) as H_6_12_ATM_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Amount else 0 end) as H_6_12_CC_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Amount else 0 end) as H_6_12_EFT_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Amount else 0 end) as H_6_12_Other_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Amount else 0 end) as H_12_18_MobileBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Amount else 0 end) as H_12_18_InternetBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Amount else 0 end) as H_12_18_ATMCardless_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Amount else 0 end) as H_12_18_ATM_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Amount else 0 end) as H_12_18_CC_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Amount else 0 end) as H_12_18_EFT_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Amount else 0 end) as H_12_18_Other_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Amount else 0 end) as H_18_24_MobileBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Amount else 0 end) as H_18_24_InternetBank_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Amount else 0 end) as H_18_24_ATMCardless_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Amount else 0 end) as H_18_24_ATM_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Amount else 0 end) as H_18_24_CC_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Amount else 0 end) as H_18_24_EFT_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-3) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Amount else 0 end) as H_18_24_Other_Deposit_Amount_Son3Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Count else 0 end) as Workday_H_0_3_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Count else 0 end) as Workday_H_3_6_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Count else 0 end) as Workday_H_6_9_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Count else 0 end) as Workday_H_9_12_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Count else 0 end) as Workday_H_12_15_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Count else 0 end) as Workday_H_15_18_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Count else 0 end) as Workday_H_18_21_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Count else 0 end) as Workday_H_21_24_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Count else 0 end) as Weekend_H_0_3_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Count else 0 end) as Weekend_H_3_6_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Count else 0 end) as Weekend_H_6_9_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Count else 0 end) as Weekend_H_9_12_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Count else 0 end) as Weekend_H_12_15_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Count else 0 end) as Weekend_H_15_18_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Count else 0 end) as Weekend_H_18_21_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Count else 0 end) as Weekend_H_21_24_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Amount else 0 end) as Workday_H_0_3_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Amount else 0 end) as Workday_H_3_6_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Amount else 0 end) as Workday_H_6_9_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Amount else 0 end) as Workday_H_9_12_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Amount else 0 end) as Workday_H_12_15_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Amount else 0 end) as Workday_H_15_18_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Amount else 0 end) as Workday_H_18_21_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Amount else 0 end) as Workday_H_21_24_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Amount else 0 end) as Weekend_H_0_3_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Amount else 0 end) as Weekend_H_3_6_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Amount else 0 end) as Weekend_H_6_9_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Amount else 0 end) as Weekend_H_9_12_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Amount else 0 end) as Weekend_H_12_15_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Amount else 0 end) as Weekend_H_15_18_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Amount else 0 end) as Weekend_H_18_21_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Amount else 0 end) as Weekend_H_21_24_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Count else 0 end) as Workday_MobileBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Count else 0 end) as Workday_InternetBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Count else 0 end) as Workday_ATMCardless_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Count else 0 end) as Workday_ATM_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Count else 0 end) as Workday_CC_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Count else 0 end) as Workday_EFT_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Count else 0 end) as Workday_Other_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Count else 0 end) as Weekend_MobileBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Count else 0 end) as Weekend_InternetBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Count else 0 end) as Weekend_ATMCardless_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Count else 0 end) as Weekend_ATM_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Count else 0 end) as Weekend_CC_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Count else 0 end) as Weekend_EFT_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Count else 0 end) as Weekend_Other_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Count else 0 end) as H_1_6_MobileBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Count else 0 end) as H_1_6_InternetBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Count else 0 end) as H_1_6_ATMCardless_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Count else 0 end) as H_1_6_ATM_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Count else 0 end) as H_1_6_CC_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Count else 0 end) as H_1_6_EFT_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Count else 0 end) as H_1_6_Other_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Count else 0 end) as H_6_12_MobileBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Count else 0 end) as H_6_12_InternetBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Count else 0 end) as H_6_12_ATMCardless_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Count else 0 end) as H_6_12_ATM_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Count else 0 end) as H_6_12_CC_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Count else 0 end) as H_6_12_EFT_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Count else 0 end) as H_6_12_Other_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Count else 0 end) as H_12_18_MobileBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Count else 0 end) as H_12_18_InternetBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Count else 0 end) as H_12_18_ATMCardless_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Count else 0 end) as H_12_18_ATM_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Count else 0 end) as H_12_18_CC_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Count else 0 end) as H_12_18_EFT_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Count else 0 end) as H_12_18_Other_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Count else 0 end) as H_18_24_MobileBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Count else 0 end) as H_18_24_InternetBank_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Count else 0 end) as H_18_24_ATMCardless_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Count else 0 end) as H_18_24_ATM_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Count else 0 end) as H_18_24_CC_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Count else 0 end) as H_18_24_EFT_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Count else 0 end) as H_18_24_Other_Deposit_Count_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Amount else 0 end) as Workday_MobileBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Amount else 0 end) as Workday_InternetBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Amount else 0 end) as Workday_ATMCardless_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Amount else 0 end) as Workday_ATM_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Amount else 0 end) as Workday_CC_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Amount else 0 end) as Workday_EFT_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Amount else 0 end) as Workday_Other_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Amount else 0 end) as Weekend_MobileBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Amount else 0 end) as Weekend_InternetBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Amount else 0 end) as Weekend_ATMCardless_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Amount else 0 end) as Weekend_ATM_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Amount else 0 end) as Weekend_CC_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Amount else 0 end) as Weekend_EFT_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Amount else 0 end) as Weekend_Other_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Amount else 0 end) as H_1_6_MobileBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Amount else 0 end) as H_1_6_InternetBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Amount else 0 end) as H_1_6_ATMCardless_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Amount else 0 end) as H_1_6_ATM_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Amount else 0 end) as H_1_6_CC_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Amount else 0 end) as H_1_6_EFT_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Amount else 0 end) as H_1_6_Other_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Amount else 0 end) as H_6_12_MobileBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Amount else 0 end) as H_6_12_InternetBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Amount else 0 end) as H_6_12_ATMCardless_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Amount else 0 end) as H_6_12_ATM_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Amount else 0 end) as H_6_12_CC_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Amount else 0 end) as H_6_12_EFT_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Amount else 0 end) as H_6_12_Other_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Amount else 0 end) as H_12_18_MobileBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Amount else 0 end) as H_12_18_InternetBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Amount else 0 end) as H_12_18_ATMCardless_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Amount else 0 end) as H_12_18_ATM_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Amount else 0 end) as H_12_18_CC_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Amount else 0 end) as H_12_18_EFT_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Amount else 0 end) as H_12_18_Other_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Amount else 0 end) as H_18_24_MobileBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Amount else 0 end) as H_18_24_InternetBank_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Amount else 0 end) as H_18_24_ATMCardless_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Amount else 0 end) as H_18_24_ATM_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Amount else 0 end) as H_18_24_CC_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Amount else 0 end) as H_18_24_EFT_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-6) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Amount else 0 end) as H_18_24_Other_Deposit_Amount_Son6Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Count else 0 end) as Workday_H_0_3_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Count else 0 end) as Workday_H_3_6_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Count else 0 end) as Workday_H_6_9_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Count else 0 end) as Workday_H_9_12_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Count else 0 end) as Workday_H_12_15_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Count else 0 end) as Workday_H_15_18_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Count else 0 end) as Workday_H_18_21_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Count else 0 end) as Workday_H_21_24_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Count else 0 end) as Weekend_H_0_3_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Count else 0 end) as Weekend_H_3_6_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Count else 0 end) as Weekend_H_6_9_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Count else 0 end) as Weekend_H_9_12_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Count else 0 end) as Weekend_H_12_15_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Count else 0 end) as Weekend_H_15_18_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Count else 0 end) as Weekend_H_18_21_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Count else 0 end) as Weekend_H_21_24_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_0_3_Deposit_Amount else 0 end) as Workday_H_0_3_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_3_6_Deposit_Amount else 0 end) as Workday_H_3_6_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_6_9_Deposit_Amount else 0 end) as Workday_H_6_9_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_9_12_Deposit_Amount else 0 end) as Workday_H_9_12_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_12_15_Deposit_Amount else 0 end) as Workday_H_12_15_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_15_18_Deposit_Amount else 0 end) as Workday_H_15_18_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_18_21_Deposit_Amount else 0 end) as Workday_H_18_21_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_H_21_24_Deposit_Amount else 0 end) as Workday_H_21_24_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_0_3_Deposit_Amount else 0 end) as Weekend_H_0_3_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_3_6_Deposit_Amount else 0 end) as Weekend_H_3_6_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_6_9_Deposit_Amount else 0 end) as Weekend_H_6_9_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_9_12_Deposit_Amount else 0 end) as Weekend_H_9_12_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_12_15_Deposit_Amount else 0 end) as Weekend_H_12_15_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_15_18_Deposit_Amount else 0 end) as Weekend_H_15_18_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_18_21_Deposit_Amount else 0 end) as Weekend_H_18_21_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_H_21_24_Deposit_Amount else 0 end) as Weekend_H_21_24_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Count else 0 end) as Workday_MobileBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Count else 0 end) as Workday_InternetBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Count else 0 end) as Workday_ATMCardless_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Count else 0 end) as Workday_ATM_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Count else 0 end) as Workday_CC_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Count else 0 end) as Workday_EFT_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Count else 0 end) as Workday_Other_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Count else 0 end) as Weekend_MobileBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Count else 0 end) as Weekend_InternetBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Count else 0 end) as Weekend_ATMCardless_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Count else 0 end) as Weekend_ATM_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Count else 0 end) as Weekend_CC_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Count else 0 end) as Weekend_EFT_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Count else 0 end) as Weekend_Other_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Count else 0 end) as H_1_6_MobileBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Count else 0 end) as H_1_6_InternetBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Count else 0 end) as H_1_6_ATMCardless_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Count else 0 end) as H_1_6_ATM_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Count else 0 end) as H_1_6_CC_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Count else 0 end) as H_1_6_EFT_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Count else 0 end) as H_1_6_Other_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Count else 0 end) as H_6_12_MobileBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Count else 0 end) as H_6_12_InternetBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Count else 0 end) as H_6_12_ATMCardless_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Count else 0 end) as H_6_12_ATM_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Count else 0 end) as H_6_12_CC_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Count else 0 end) as H_6_12_EFT_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Count else 0 end) as H_6_12_Other_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Count else 0 end) as H_12_18_MobileBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Count else 0 end) as H_12_18_InternetBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Count else 0 end) as H_12_18_ATMCardless_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Count else 0 end) as H_12_18_ATM_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Count else 0 end) as H_12_18_CC_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Count else 0 end) as H_12_18_EFT_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Count else 0 end) as H_12_18_Other_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Count else 0 end) as H_18_24_MobileBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Count else 0 end) as H_18_24_InternetBank_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Count else 0 end) as H_18_24_ATMCardless_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Count else 0 end) as H_18_24_ATM_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Count else 0 end) as H_18_24_CC_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Count else 0 end) as H_18_24_EFT_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Count else 0 end) as H_18_24_Other_Deposit_Count_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_MobileBank_Deposit_Amount else 0 end) as Workday_MobileBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_InternetBank_Deposit_Amount else 0 end) as Workday_InternetBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATMCardless_Deposit_Amount else 0 end) as Workday_ATMCardless_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_ATM_Deposit_Amount else 0 end) as Workday_ATM_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_CC_Deposit_Amount else 0 end) as Workday_CC_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_EFT_Deposit_Amount else 0 end) as Workday_EFT_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Workday_Other_Deposit_Amount else 0 end) as Workday_Other_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_MobileBank_Deposit_Amount else 0 end) as Weekend_MobileBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_InternetBank_Deposit_Amount else 0 end) as Weekend_InternetBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATMCardless_Deposit_Amount else 0 end) as Weekend_ATMCardless_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_ATM_Deposit_Amount else 0 end) as Weekend_ATM_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_CC_Deposit_Amount else 0 end) as Weekend_CC_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_EFT_Deposit_Amount else 0 end) as Weekend_EFT_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then Weekend_Other_Deposit_Amount else 0 end) as Weekend_Other_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_MobileBank_Deposit_Amount else 0 end) as H_1_6_MobileBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_InternetBank_Deposit_Amount else 0 end) as H_1_6_InternetBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATMCardless_Deposit_Amount else 0 end) as H_1_6_ATMCardless_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_ATM_Deposit_Amount else 0 end) as H_1_6_ATM_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_CC_Deposit_Amount else 0 end) as H_1_6_CC_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_EFT_Deposit_Amount else 0 end) as H_1_6_EFT_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_1_6_Other_Deposit_Amount else 0 end) as H_1_6_Other_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_MobileBank_Deposit_Amount else 0 end) as H_6_12_MobileBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_InternetBank_Deposit_Amount else 0 end) as H_6_12_InternetBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATMCardless_Deposit_Amount else 0 end) as H_6_12_ATMCardless_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_ATM_Deposit_Amount else 0 end) as H_6_12_ATM_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_CC_Deposit_Amount else 0 end) as H_6_12_CC_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_EFT_Deposit_Amount else 0 end) as H_6_12_EFT_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_6_12_Other_Deposit_Amount else 0 end) as H_6_12_Other_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_MobileBank_Deposit_Amount else 0 end) as H_12_18_MobileBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_InternetBank_Deposit_Amount else 0 end) as H_12_18_InternetBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATMCardless_Deposit_Amount else 0 end) as H_12_18_ATMCardless_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_ATM_Deposit_Amount else 0 end) as H_12_18_ATM_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_CC_Deposit_Amount else 0 end) as H_12_18_CC_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_EFT_Deposit_Amount else 0 end) as H_12_18_EFT_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_12_18_Other_Deposit_Amount else 0 end) as H_12_18_Other_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_MobileBank_Deposit_Amount else 0 end) as H_18_24_MobileBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_InternetBank_Deposit_Amount else 0 end) as H_18_24_InternetBank_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATMCardless_Deposit_Amount else 0 end) as H_18_24_ATMCardless_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_ATM_Deposit_Amount else 0 end) as H_18_24_ATM_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_CC_Deposit_Amount else 0 end) as H_18_24_CC_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_EFT_Deposit_Amount else 0 end) as H_18_24_EFT_Deposit_Amount_Son12Ay,
sum(case when TRAN_DATE>=add_months(TRUNC(sysdate),-12) and TRAN_DATE<TRUNC(SYSDATE) then H_18_24_Other_Deposit_Amount else 0 end) as H_18_24_Other_Deposit_Amount_Son12Ay,
SYSDATE as DWH_DATE
from crm_dm.CUSTOMER_MONEY_DEPOSIT_DAILY
where TRAN_DATE between add_months(TRUNC(sysdate),-12) and TRUNC(SYSDATE)
group by CUSTOMER_ID
/

create or replace view V_BOS_TICKET_INFO as
SELECT
	tck.ID ,
	tck.DESCRIPTION AS TICKET_DESCRIPTION, --yorum
	COALESCE(tcho.DESCRIPTION , tck.DESCRIPTION) AS "COMMENT" , -- talep açıklaması
	CUSTOMER_ID ,
	usr.FULL_NAME ,
	dep.NAME AS DEPARTMENT_NAME ,
	tck.CREATED_DATE ,
	tck.MODIFIED_DATE,
	crusr.FULL_NAME AS CREATED_BY
FROM
	TICKET_MANAGEMENT_DB_ADM.TICKET@prod_blynrdb tck
LEFT JOIN (
	SELECT
		ROW_NUMBER() OVER (PARTITION BY TICKET_ID
	ORDER BY
		created_date DESC ) AS rn ,
		tch.*
	FROM
		TICKET_MANAGEMENT_DB_ADM.TICKET_HISTORY@prod_blynrdb tch
		WHERE 1=1
--		AND "TYPE" IN ( 'COMMENT' , 'CALL_GIVEN')
		AND created_by IN ( 995, 1403,  1393, 1195, 1201 )
)tcho
ON
	tck.ID = tcho.TICKET_ID
	AND tcho.rn = 1
LEFT JOIN (
	SELECT
		ROW_NUMBER() OVER (PARTITION BY TICKET_ID
	ORDER BY
		created_date ASC ) AS rn ,
		tch.*
	FROM
		TICKET_MANAGEMENT_DB_ADM.TICKET_HISTORY@prod_blynrdb tch
		WHERE 1=1
--		AND "TYPE" IN ( 'COMMENT' , 'CALL_GIVEN')
		AND created_by IN ( 995, 1403,  1393, 1195, 1201 )
)tcho_frst
ON
	tck.ID = tcho_frst.TICKET_ID
	AND tcho_frst.rn = 1
LEFT JOIN TICKET_USER_DB_ADM.USERS@prod_blynrdb crusr
ON
	tcho.created_by = crusr.ID
INNER JOIN TICKET_USER_DB_ADM.USERS@prod_blynrdb usr
ON
	tck.OWNER_ID = usr.ID
LEFT JOIN TICKET_USER_DB_ADM.DEPARTMENT@prod_blynrdb dep
ON
	tck.DEPARTMENT_ID = dep.ID
WHERE
	tck.channel = 'BOS'
AND usr.USERNAME IN  ('gulsah.yaman', 'burcu.yasar', 'cansu.yilmaz' , 'selim.savga' , 'kubilay.bulbul')
/

create or replace view V_CUSTOMER_PWD_NOT_ALPHANUMERIC as
SELECT
       CST.CUSTOMER_ID ,
       MBA.USERID ,
       CST.STATUS ,
       CST.SEGMENT
FROM
       MBET.CUSTOMER@PROD_BLYNRDB CST
       LEFT JOIN MBET.AUTHENTICATION@PROD_BLYNRDB  MBA
       ON CST.CUSTOMER_ID = MBA.CUSTOMER_ID
WHERE
       REGISTRATION_DATE <= TO_DATE('07/04/2020 16:06:00', 'DD/MM/YYYY HH24:MI:SS')
       AND NOT EXISTS
(
       SELECT
              *
       FROM
              USERS_DB_ADM.PASSWORD_CHANGED_LOG@PROD_BLYNRDB PCL
       WHERE
              CST.CUSTOMER_ID = PCL.CUSTOMER_ID
)
/

create or replace view V_RT_DIGITAL_LOTTERY_DRAW as
SELECT
	ID,
	EXTERNAL_DRAW_ID,
	DRAW_DATE,
	COLUMN_PRICE,
	STATUS,
	GAME_TYPE,
	START_DATE,
	END_DATE,
	CREATE_DATE,
	UPDATE_DATE,
	EVALUATE_STATUS
FROM
	DIGITAL_LOTTERY_API_APP_ADM.DRAW@prod_blynrdb
/

create or replace view V_RT_LIVE_BONUS_NEW as
SELECT
CUSTOMER_ID ,
odate ,
CAMPAIGN_ID
FROM lbr.BONUS_NEW@prod_blynrdb bn
WHERE ODATE >= trunc(sysdate)
/

create or replace view V_RT_DIGITAL_LOTTERY_DRAW_DETAIL as
SELECT
ID,DRAW_ID,EXTERNAL_DRAW_ID,TITLE,TITLE_ABBREVIATED,DESCRIPTION,
--DESCRIPTION_LONG_VERSION,
TOTAL_TICKET,DRAW_PICTURE,CREATE_DATE,UPDATE_DATE,DRAW_DETAIL_PICTURE
FROM  DIGITAL_LOTTERY_API_APP_ADM.DRAW_DETAIL@prod_blynrdb
/

create or replace view V_RT_DIGITAL_LOTTERY_PRIZE_INFO as
SELECT
ID,DRAW_ID,WINNER_SELECTION,WINNER_OPTIONAL,TOTAL_PRIZE,ROLLED_OVER,ROLLED_OVER_AMOUNT,CREATE_DATE,UPDATE_DATE,TOTAL_TICKET,REMAINING_TICKET
FROM DIGITAL_LOTTERY_API_APP_ADM.PRIZE_INFO@prod_blynrdb
/

create or replace view V_RT_DIGITAL_LOTTERY_DRAW_PRIZE_DETAIL as
SELECT
	ID,
	DRAW_ID,
	EXTERNAL_DRAW_ID,
	PRIZE_ID,
	PRIZE_NAME,
	--DESCRIPTION_LONG_VERSION,
	WINNING_CONDITION_TEXT,
	WINNING_CONDITION_VALUE,
	SUB_PRIZE_IDS,
	--ASSETS,
	VALUE_OF_PRIZE,
	NO_OF_PRIZE,
	APPROXIMATE_VALUE_OF_PRIZE,
	CATEGORY_ID,
	CATEGORY_NAME,
	CREATE_DATE,
	UPDATE_DATE
FROM
	DIGITAL_LOTTERY_API_APP_ADM.DRAW_PRIZE_DETAIL@prod_blynrdb
/

create or replace view V_RT_DIGITAL_LOTTERY_COUPON as
SELECT
	ID,
	BARCODE,
	SECURITY_CODE,
	REQ_TRX_ID,
	CUSTOMER_ID,
	DRAW_ID,
	COST,
	STATUS,
	COLUMN_COUNT,
	CHANNEL,
	PLAY_DATE,
	CLIENT_IP,
	EARNINGS,
	PAY_DATE,
	ERROR,
	CREATE_DATE,
	UPDATE_DATE
FROM
	DIGITAL_LOTTERY_API_APP_ADM.COUPON@prod_blynrdb
/

create or replace view V_RT_DIGITAL_LOTTERY_DRAW_RESULT as
SELECT
	"ID","GAME_ID","EXTERNAL_DRAW_ID","CREATE_DATE"
FROM
 DIGITAL_LOTTERY_API_APP_ADM.DRAW_RESULT@prod_blynrdb
/

create or replace view V_RT_DIGITAL_LOTTERY_DRAW_RESULT_PRIZE as
SELECT
	"ID","DRAW_RESULT_ID","NO_OF_MATCHES","ALL_WINNERS","PRIZE_PER_WINNER","TICKET_NOS","CREATE_DATE","UPDATE_DATE"
FROM
DIGITAL_LOTTERY_API_APP_ADM.DRAW_RESULT_PRIZE@prod_blynrdb
/

create or replace view V_RT_DIGITAL_LOTTERY_COUPON_EXTRA_INFO as
SELECT
	"COUPON_ID","STATUS","TRY_COUNT","CREATE_DATE","UPDATE_DATE"
FROM
DIGITAL_LOTTERY_API_APP_ADM.COUPON_EXTRA_INFO@prod_blynrdb
/

create or replace view V_BOS_ETIKET_REPORT as
SELECT
	t.CREATED_DATE AS TALEP_TARIHI,
	tt.CREATED_DATE AS ETIKET_TARIHI,
	(
	SELECT
		ttd.NAME
	FROM
		TICKET_MANAGEMENT_DB_ADM.TICKET_TAG_DEFINITION@prod_blynrdb ttd
	WHERE
		ttd.ID = tt.TAG_DEF_ID) AS ETIKET_ADI,
	(
	SELECT
		d.NAME
	FROM
		TICKET_USER_DB_ADM.USERS@prod_blynrdb u,
		TICKET_USER_DB_ADM.DEPARTMENT@prod_blynrdb d
	WHERE
		d.ID = u.DEPARTMENT_ID
		AND u.ID = to_number(tt.CREATED_BY)) AS DEPARTMAN,
	t.SEGMENT AS SEGMENT,
	t.USER_ID AS UYE_NO,
	(
	SELECT
		c.NAME
	FROM
		TICKET_MANAGEMENT_DB_ADM.CATEGORY@prod_blynrdb c
	WHERE
		c.ID = t.CATEGORY_ID) AS KATEGORI,
	t.id AS TALEP_NO,
	t.DESCRIPTION
FROM
	TICKET_MANAGEMENT_DB_ADM.TICKET@prod_blynrdb t
LEFT JOIN TICKET_MANAGEMENT_DB_ADM.TICKET_TAG@prod_blynrdb tt ON
	(t.ID = tt.TICKET_ID)
/

create or replace view V_AMAC_DISI_GUNLUK as
WITH
  PARAMS AS(
SELECT
	TRUNC(SYSDATE-1) AS P_REPORT_DATE
			,
	TRUNC(SYSDATE-7) AS P_REPORT_START_DATE_WEEKLY
			,
	ADD_MONTHS(TRUNC(SYSDATE),-1) AS P_REPORT_START_DATE_MONTHLY
FROM
	DUAL

    )

,
PARAMS_CUSTOM_DATE AS(
SELECT
	AYIN_SON_GUNU AS P_LAST_DAY_OF_MONTH
      ,
	AYIN_ILK_GUNU AS P_FIRST_DAY_OF_MONTH
FROM
	CRM_DM.PERIOD_ORDER
WHERE
	(
	SELECT
		P_REPORT_DATE
	FROM
		PARAMS) BETWEEN AYIN_ILK_GUNU AND AYIN_SON_GUNU

    )
--SELECT P_REPORT_START_DATE_MONTHLY FROM PARAMS


SELECT
	USERID ,
	'="' || CUSTOMER_ID_TEXT || '"' AS CUSTOMER_ID_TEXT,
	'="' || CUSTOMER_ID || '"' AS CUSTOMER_ID,
	REPLACE(TO_CHAR(ROUND(MONEY_DEPOSIT_AMOUNT_LASTWEEK, 2)), '.', ',' ) AS MONEY_DEPOSIT_AMOUNT_LASTWEEK,
	MONEY_DEPOSIT_COUNT_LASTWEEK,
	TO_CHAR(LAST_MONEY_DEPOSIT_DATE , 'DD-MM-YYYY') AS LAST_MONEY_DEPOSIT_DATE,
	MONEY_DEPOSIT_DAYCNT_LASTWEEK,
	'="' || CUST_ID_T_DEPOSIT_MONTHLY || '"' AS CUST_ID_T_DEPOSIT_MONTHLY,
	REPLACE(TO_CHAR(ROUND(MONEY_DEPOSIT_AMOUNT_LASTMONTH, 2)), '.', ',' ) AS MONEY_DEPOSIT_AMOUNT_LASTMONTH,
	MONEY_DEPOSIT_COUNT_LASTMONTH,
	MONEY_DEPOSIT_DAYCNT_LASTMONTH,
	DAYSAFTERLASTDEPOSIT,
	'="' || CUST_ID_T_WITHDRAW_WEEKLY || '"' AS CUST_ID_T_WITHDRAW_WEEKLY,
	REPLACE(TO_CHAR(ROUND(WITHDRAW_AMOUNT_LASTWEEK, 2)), '.', ',' ) AS WITHDRAW_AMOUNT_LASTWEEK,
	WITHDRAW_COUNT_LASTWEEK,
	TO_CHAR(LAST_MONEY_WITHDRAW_DATE , 'DD-MM-YYYY') AS LAST_MONEY_WITHDRAW_DATE,
	WITHDRAW_DAYCNT_LASTWEEK,
	'="' || CUST_ID_T_WITHDRAW_MONTHLY || '"' AS CUST_ID_T_WITHDRAW_MONTHLY,
	REPLACE(TO_CHAR(ROUND(WITHDRAW_AMOUNT_LASTMONTH, 2)), '.', ',' ) AS WITHDRAW_AMOUNT_LASTMONTH,
	WITHDRAW_COUNT_LASTMONTH,
	WITHDRAW_DAYCNT_LASTMONTH,
	DAYSAFTERLASTWITHDRAW,
	'="' || CUST_ID_SUMMARY || '"' AS CUST_ID_SUMMARY ,
	REPLACE(TO_CHAR(ROUND(CIRO_SONHAFTA, 2)), '.', ',' ) AS CIRO_SONHAFTA,
	REPLACE(TO_CHAR(ROUND(CIRO_SONAY, 2)), '.', ',' ) AS CIRO_SONAY,
	REPLACE(TO_CHAR(ROUND(PAYOUT_SONHAFTA, 2)), '.', ',' ) AS PAYOUT_SONHAFTA,
	REPLACE(TO_CHAR(ROUND(PAYOUT_SONAY, 2)), '.', ',' ) AS PAYOUT_SONAY,
	REPLACE(TO_CHAR(ROUND(PARAYATIRMA_SONHAFTA, 2)), '.', ',' ) AS PARAYATIRMA_SONHAFTA,
	REPLACE(TO_CHAR(ROUND(PARAYATIRMA_SONAY, 2)), '.', ',' ) AS PARAYATIRMA_SONAY,
	OYUNGUNADET_SONHAFTA,
	OYUNGUNADET_SONAY,
	TRIM(TO_CHAR(MD_RATIO_SONHAFTA , '90.99999')) AS MD_RATIO_SONHAFTA,
	TRIM(TO_CHAR(PLAY_RATIO1_SONHAFTA , '90.99999')) AS PLAY_RATIO1_SONHAFTA,
	TRIM(TO_CHAR(PLAY_RATIO2_SONHAFTA , '90.99999')) AS PLAY_RATIO2_SONHAFTA,
	TRIM(TO_CHAR(MD_RATIO_SONAY , '90.99999')) AS MD_RATIO_SONAY,
	TRIM(TO_CHAR(PLAY_RATIO1_SONAY , '90.99999')) AS PLAY_RATIO1_SONAY,
	TRIM(TO_CHAR(PLAY_RATIO2_SONAY , '90.99999')) AS PLAY_RATIO2_SONAY,
	SONOYUNUZERINDENGECENSURE,
	SONPAYOUTUZERINDENGECENSURE,
	ACTIVITYSTATUS,
	SEGMENT_ASSIGNED,
	ISVIP,
	TRIM(TO_CHAR(WITHDRAW_RATIO_SONHAFTA , '90.99')) AS WITHDRAW_RATIO_SONHAFTA ,
	TRIM(TO_CHAR(WITHDRAW_RATIO_SONAY , '90.99')) AS WITHDRAW_RATIO_SONAY,
	SEGMENT_CONFUSION,
	ALARM_HACIM_SONHAFTA,
	ALARM_HACIM_SONAY,
	ALARM1,
	ALARM2,
	ALARM3
	--T_MAIN.*
,
	CASE
		WHEN ALARM_HACIM_SONAY = 5
		AND ALARM_HACIM_SONHAFTA >= 4 THEN 5
		WHEN ALARM_HACIM_SONAY >= 4
		AND ALARM_HACIM_SONHAFTA >= 3 THEN 4
		WHEN ALARM_HACIM_SONAY >= 3
		AND ALARM_HACIM_SONHAFTA >= 2 THEN 3
		WHEN ALARM_HACIM_SONAY >= 2
		AND ALARM_HACIM_SONHAFTA >= 1 THEN 2
		ELSE 1
	END AS ALARM_HACIM

,
	CASE
		WHEN ALARM1 +(CASE
			WHEN ALARM2 + ALARM3 =-2 THEN -1
			ELSE ALARM2 + ALARM3
		END)+ SEGMENT_CONFUSION = 0 THEN 1
		ELSE ALARM1 +(CASE
			WHEN ALARM2 + ALARM3 =-2 THEN -1
			ELSE ALARM2 + ALARM3
		END)+ SEGMENT_CONFUSION
	END AS ALARM_RISK
,
TO_CHAR(max_amacdisi_ticket_date, 'dd-mm-yyyy hh24:MI') AS max_amacdisi_ticket_date
FROM
	(
	SELECT
		TO_CHAR(NVL( T_DEPOSIT_WEEKLY.CUSTOMER_ID, CUST_ID_T_DEPOSIT_MONTHLY ) ) AS CUSTOMER_ID_TEXT
	   ,
		T_DEPOSIT_WEEKLY.*
	   ,
		T_DEPOSIT_MONTHLY.*
		 ,
		TRUNC(SYSDATE)-T_DEPOSIT_WEEKLY.LAST_MONEY_DEPOSIT_DATE AS DAYSAFTERLASTDEPOSIT

		 ,
		T_WITHDRAW_WEEKLY.*
		 ,
		T_WITHDRAW_MONTHLY.*
		 ,
		TRUNC(SYSDATE)-T_WITHDRAW_WEEKLY.LAST_MONEY_WITHDRAW_DATE AS DAYSAFTERLASTWITHDRAW

		 ,
		T_CUSTOMER_SUMMARY.*

		 ,
		NULLIF(NVL(WITHDRAW_AMOUNT_LASTWEEK, 0)/ NULLIF(NVL(MONEY_DEPOSIT_AMOUNT_LASTWEEK, 0)+ NVL(T_CUSTOMER_SUMMARY.PAYOUT_SONHAFTA, 0),
		0),
		0) AS WITHDRAW_RATIO_SONHAFTA
		 ,
		NULLIF(NVL(WITHDRAW_AMOUNT_LASTMONTH, 0)/ NULLIF(NVL(MONEY_DEPOSIT_AMOUNT_LASTMONTH, 0)+ NVL(T_CUSTOMER_SUMMARY.PAYOUT_SONAY, 0),
		0),
		0) AS WITHDRAW_RATIO_SONAY

		 ,
		CASE
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH > 0
				AND ACTIVITYSTATUS <> 'AKTIF' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 40000
				AND SEGMENT_ASSIGNED>'A0' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 10000
				AND SEGMENT_ASSIGNED>'A1' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 4000
				AND SEGMENT_ASSIGNED>'A2' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 2000
				AND SEGMENT_ASSIGNED>'B1' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 1000
				AND SEGMENT_ASSIGNED>'B2' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 500
				AND SEGMENT_ASSIGNED>'C1' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 200
				AND SEGMENT_ASSIGNED>'C2' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH >= 75
				AND SEGMENT_ASSIGNED>'D1' THEN 1
				WHEN MONEY_DEPOSIT_AMOUNT_LASTMONTH > 0
				AND SEGMENT_ASSIGNED>'D2' THEN 1
				ELSE 0
			END AS SEGMENT_CONFUSION

		 ,
			CASE
				WHEN WITHDRAW_AMOUNT_LASTWEEK >= 10000 THEN 5
				WHEN WITHDRAW_AMOUNT_LASTWEEK >= 5000 THEN 4
				WHEN WITHDRAW_AMOUNT_LASTWEEK >= 1000 THEN 3
				WHEN WITHDRAW_AMOUNT_LASTWEEK >= 100 THEN 2
				WHEN WITHDRAW_AMOUNT_LASTWEEK > 0 THEN 1
				ELSE 0
			END AS ALARM_HACIM_SONHAFTA

		 ,
			CASE
				WHEN WITHDRAW_AMOUNT_LASTMONTH >= 25000 THEN 5
				WHEN WITHDRAW_AMOUNT_LASTMONTH >= 12500 THEN 4
				WHEN WITHDRAW_AMOUNT_LASTMONTH >= 2500 THEN 3
				WHEN WITHDRAW_AMOUNT_LASTMONTH >= 250 THEN 2
				WHEN WITHDRAW_AMOUNT_LASTMONTH >0 THEN 1
				ELSE 0
			END AS ALARM_HACIM_SONAY

		,
			CASE
				WHEN PLAY_RATIO2_SONHAFTA = 0
				AND PLAY_RATIO2_SONAY <= 0.05 THEN 5
				WHEN PLAY_RATIO2_SONHAFTA <= 0.05
				AND PLAY_RATIO2_SONAY <= 0.10 THEN 4
				WHEN PLAY_RATIO2_SONHAFTA <= 0.1
				AND PLAY_RATIO2_SONAY <= 0.15 THEN 3
				WHEN PLAY_RATIO2_SONHAFTA <= 0.15
				AND PLAY_RATIO2_SONAY <= 0.2 THEN 2
				ELSE 1
			END AS ALARM1

		,
			CASE
				WHEN WITHDRAW_AMOUNT_LASTMONTH / WITHDRAW_AMOUNT_LASTWEEK > 10 THEN -1
				ELSE 0
			END AS ALARM2

    ,
			CASE
				WHEN WITHDRAW_COUNT_LASTWEEK >5
				AND WITHDRAW_COUNT_LASTMONTH > 15 THEN 1
				WHEN WITHDRAW_COUNT_LASTWEEK <= 1
				AND WITHDRAW_COUNT_LASTMONTH <= 3 THEN -1
				ELSE 0
			END AS ALARM3
	,
	T_DATE_INFO.max_amacdisi_ticket_date
		FROM
			(
			SELECT
				CUSTOMER_ID AS CUST_ID_T_DEPOSIT_MONTHLY
			,
				SUM(AMOUNT) AS MONEY_DEPOSIT_AMOUNT_LASTMONTH
			,
				COUNT(TX_ID) AS MONEY_DEPOSIT_COUNT_LASTMONTH
			,
				COUNT(DISTINCT TRUNC(ACC_DATE)) AS MONEY_DEPOSIT_DAYCNT_LASTMONTH
			FROM
				LBRDWH.INN_BANK_TX IBT
			WHERE
				ACC_DATE >= (
				SELECT
					P_REPORT_START_DATE_MONTHLY
				FROM
					PARAMS)
				--ADD_MONTHS(TRUNC(SYSDATE),-1)
				AND PROCESSING_CODE = 11
			GROUP BY
				CUSTOMER_ID

	) T_DEPOSIT_MONTHLY
		LEFT JOIN (
			SELECT
				IBT.CUSTOMER_ID
			,
				SUM(AMOUNT) AS MONEY_DEPOSIT_AMOUNT_LASTWEEK
			,
				COUNT(TX_ID) AS MONEY_DEPOSIT_COUNT_LASTWEEK
			,
				TRUNC(MAX(ACC_DATE)) AS LAST_MONEY_DEPOSIT_DATE
			,
				COUNT(DISTINCT TRUNC(ACC_DATE)) AS MONEY_DEPOSIT_DAYCNT_LASTWEEK
			FROM
				LBRDWH.INN_BANK_TX IBT
			WHERE
				ACC_DATE >= (
				SELECT
					P_REPORT_START_DATE_WEEKLY
				FROM
					PARAMS)
				--TRUNC(SYSDATE-7)
				AND PROCESSING_CODE = 11
				--AND CUSTOMER_ID = 202109281018389563
			GROUP BY
				IBT.CUSTOMER_ID

	) T_DEPOSIT_WEEKLY
	ON
			T_DEPOSIT_WEEKLY.CUSTOMER_ID = T_DEPOSIT_MONTHLY.CUST_ID_T_DEPOSIT_MONTHLY
		LEFT JOIN (
			SELECT
				CUSTOMER_ID AS CUST_ID_T_WITHDRAW_WEEKLY
			,
				SUM(AMOUNT) AS WITHDRAW_AMOUNT_LASTWEEK
			,
				COUNT(WITHDRAW_ID) AS WITHDRAW_COUNT_LASTWEEK
			,
				TRUNC(MAX(W_DATE)) AS LAST_MONEY_WITHDRAW_DATE
			,
				COUNT(DISTINCT TRUNC(W_DATE)) AS WITHDRAW_DAYCNT_LASTWEEK
				--SELECT *
			FROM
				LBRDWH.WITHDRAW IBT
			WHERE
				W_DATE >= (
				SELECT
					P_REPORT_START_DATE_WEEKLY
				FROM
					PARAMS)
				--TRUNC(SYSDATE-7)
				AND STATUS = 2
			GROUP BY
				CUSTOMER_ID

	 )T_WITHDRAW_WEEKLY ON
			T_DEPOSIT_MONTHLY.CUST_ID_T_DEPOSIT_MONTHLY = T_WITHDRAW_WEEKLY.CUST_ID_T_WITHDRAW_WEEKLY
		LEFT JOIN (
			SELECT
				CUSTOMER_ID AS CUST_ID_T_WITHDRAW_MONTHLY
      ,
				SUM(AMOUNT) AS WITHDRAW_AMOUNT_LASTMONTH
      ,
				COUNT(WITHDRAW_ID) AS WITHDRAW_COUNT_LASTMONTH
	  ,
				COUNT(DISTINCT TRUNC(W_DATE)) AS WITHDRAW_DAYCNT_LASTMONTH
			FROM
				LBRDWH.WITHDRAW IBT
			WHERE
				W_DATE >= (
				SELECT
					P_REPORT_START_DATE_MONTHLY
				FROM
					PARAMS)
				--ADD_MONTHS(TRUNC(SYSDATE),-1)
				AND STATUS = 2
			GROUP BY
				CUSTOMER_ID

   )T_WITHDRAW_MONTHLY ON
			T_DEPOSIT_MONTHLY.CUST_ID_T_DEPOSIT_MONTHLY = T_WITHDRAW_MONTHLY.CUST_ID_T_WITHDRAW_MONTHLY
		LEFT JOIN (
			SELECT
				BC.USERID,
				BC.CUSTOMER_ID AS CUST_ID_SUMMARY
			 ,
				BC.CIRO_SONHAFTA
			 ,
				BC.CIRO_SONAY
			 ,
				BC.PAYOUT_SONHAFTA
			 ,
				BC.PAYOUT_SONAY
			 ,
				BC.PARAYATIRMA_SONHAFTA
			 ,
				BC.PARAYATIRMA_SONAY

			 ,
				BC.OYUNGUNADET_SONHAFTA
			 ,
				BC.OYUNGUNADET_SONAY
				--, NVL(NVL(BC.PARAYATIRMA_SONHAFTA,0)/(NULLIF(BC.PARAYATIRMA_SONHAFTA,0)+NULLIF(BC.PAYOUT_SONHAFTA,0)),0) AS MD_RATIO_SONHAFTA
			 ,
				PARAYATIRMA_SONHAFTA / NULLIF( (PARAYATIRMA_SONHAFTA + NVL(PAYOUT_SONHAFTA, 0 )) ,
				0 ) AS MD_RATIO_SONHAFTA
			 ,
				NVL(NVL(BC.CIRO_SONHAFTA, 0)/ NULLIF(BC.PARAYATIRMA_SONHAFTA + BC.PAYOUT_SONHAFTA, 0), 0) AS PLAY_RATIO1_SONHAFTA
			 ,
				NVL(NVL(BC.CIRO_SONHAFTA, 0)/ NULLIF(BC.PARAYATIRMA_SONHAFTA, 0), 0) AS PLAY_RATIO2_SONHAFTA
				--, NVL(NVL(BC.PARAYATIRMA_SONAY,0)/(NULLIF(BC.PARAYATIRMA_SONAY,0)+NULLIF(BC.PAYOUT_SONAY,0)),0) AS MD_RATIO_SONAY
			 ,
				PARAYATIRMA_SONAY / NULLIF ( PARAYATIRMA_SONAY + NVL(PAYOUT_SONAY, 0 ) ,
				0 ) AS MD_RATIO_SONAY
			 ,
				NVL(NVL(BC.CIRO_SONAY, 0)/ NULLIF(BC.PARAYATIRMA_SONAY + BC.PAYOUT_SONAY, 0), 0) AS PLAY_RATIO1_SONAY
			 ,
				NVL(NVL(BC.CIRO_SONAY, 0)/ NULLIF(BC.PARAYATIRMA_SONAY, 0), 0) AS PLAY_RATIO2_SONAY

			 ,
				BC.SONOYUNUZERINDENGECENSURE
			 ,
				BC.SONPAYOUTUZERINDENGECENSURE

			 ,
				CSD.ACTIVITYSTATUS
			 ,
				CSD.SEGMENT_ASSIGNED
			 ,
				CSD.ISVIP
			FROM
				CRM_DM.BONUS_CALISMA BC
			LEFT JOIN CRM_DM.DM_CUSTOMER_SEGMENT_DAILY CSD ON
				CSD.CUSTOMER_ID = BC.CUSTOMER_ID

	) T_CUSTOMER_SUMMARY ON
			T_DEPOSIT_MONTHLY.CUST_ID_T_DEPOSIT_MONTHLY = T_CUSTOMER_SUMMARY.CUST_ID_SUMMARY
		LEFT JOIN(
			SELECT
				customer_id ,
				max(created_date) AS max_amacdisi_ticket_date
			FROM
				TICKET_MANAGEMENT_DB_ADM.TICKET@prod_blynrdb
			WHERE
				1 = 1
				AND category_id IN ( 1143 , 1681 )
			GROUP BY
				customer_id
		) T_DATE_INFO
		ON T_DEPOSIT_MONTHLY.CUST_ID_T_DEPOSIT_MONTHLY = T_DATE_INFO.CUSTOMER_ID
			WHERE
			1 = 1
			AND (MONEY_DEPOSIT_AMOUNT_LASTMONTH > 0
				AND WITHDRAW_AMOUNT_LASTMONTH > 0)
			AND PLAY_RATIO1_SONHAFTA <= 0.15
			AND PLAY_RATIO1_SONAY <= 0.20
			AND PLAY_RATIO2_SONHAFTA <= 0.20
			AND PLAY_RATIO2_SONAY <= 0.25
			AND NOT(
    PARAYATIRMA_SONHAFTA / NULLIF( (PARAYATIRMA_SONHAFTA + NVL(PAYOUT_SONHAFTA, 0 )) ,
			0 ) <0.8
				AND PARAYATIRMA_SONAY / NULLIF ( PARAYATIRMA_SONAY + NVL(PAYOUT_SONAY, 0 ) ,
				0 ) <0.8
    		)

) T_MAIN
/

create or replace view V_BOS_UYE_IPTAL as
SELECT
	T.ID AS TALEP_NUMARASI,
	T.USER_ID AS USER_ID,
	C.REGISTRATION_DATE AS UYELIK_TARIHI,
	T.SEGMENT AS TALEP_ANINDAKI_SEGMENT,
	VC.PORTFOLIO_MAN AS PY,
	--BURASI DEĞIŞMIŞ OLABILIR. TALEP ANINDAKI VERIYI TUTMUYORUZ
	STF.CONTACT_PERM AS ARAMA_IZNI,
	STF.CHURN AS CHURN_DAHIL_MI,
	C.STATUS AS GUNCEL_STATU,
	--ÜYELIK IPTAL TARIHI TEK SORGUYLA BULUNAMAYABILIR. CUSTOMER_STATUS_HISTORY'DEN BELKI ÇEKILEBILIR.
	--CIRO?
	T.CREATED_DATE AS TALEP_TARIHI,
	T.CHANNEL AS TALEP_KANALI,
	SCR.NAME AS UYELIK_IPTAL_NEDENI,
	DSC.DESCRIPTION,
	STF.PROCESS_STATUS AS DURUM,
	--VAZGEÇTI , TAMAMLANDI , DEVAM EDDIYOR
	AGT.CREATED_BY AS AGENT_ID,
	T.MODIFIED_DATE AS ISLEM_ZAMANI
FROM
	TICKET_MANAGEMENT_DB_ADM.STATUS_CHANGE_FORM@PROD_BLYNRDB STF
INNER JOIN TICKET_MANAGEMENT_DB_ADM.TICKET@PROD_BLYNRDB T ON
	T.ID = STF.TICKET_ID
LEFT JOIN MBET.CUSTOMER@PROD_BLYNRDB C ON
	C.CUSTOMER_ID = STF.CUSTOMER_ID
LEFT JOIN USERS_DB_ADM.VIP_CUSTOMER@PROD_BLYNRDB VC ON
	VC.CUSTOMER_ID = T.CUSTOMER_ID
LEFT JOIN TICKET_MANAGEMENT_DB_ADM.STATUS_CHANGE_REASON@PROD_BLYNRDB SCR ON
	SCR.ID = STF.REASON_ID
LEFT JOIN (
	SELECT
		*
	FROM
		(
		SELECT
			TICKET_ID,
			TH.DESCRIPTION,
			ROW_NUMBER() OVER(PARTITION BY TICKET_ID ORDER BY CREATED_DATE DESC ) AS RN
		FROM
			TICKET_MANAGEMENT_DB_ADM.TICKET_HISTORY@PROD_BLYNRDB TH
		WHERE
			TH.TYPE = 'DESCRIPTION'
			AND TH.CREATED_BY != '4400'
			AND TH.CREATED_BY IS NOT NULL
    ) A
	WHERE
		RN = 1
) DSC
ON
	DSC.TICKET_ID = T.ID
LEFT JOIN (
	SELECT
		A.TICKET_ID,
		A.CREATED_BY
	FROM
		(
		SELECT
			TH.TICKET_ID,
			TH.CREATED_BY,
			ROW_NUMBER() OVER(PARTITION BY TICKET_ID ORDER BY CREATED_DATE DESC ) AS RN
		FROM
			TICKET_MANAGEMENT_DB_ADM.TICKET_HISTORY@PROD_BLYNRDB TH
		WHERE
			TH.DESCRIPTION = 'ÜYE TALEBINDEN VAZGEÇTI(CHURN SONRASI)'
			-- BU SADECE AGENT_IN YAPTIĞI IŞLEMLERI GETIRIR.
			AND TH.CREATED_BY != '4400'
			AND TH.CREATED_BY IS NOT NULL
) A
	WHERE
		RN = 1
) AGT
ON
	AGT.TICKET_ID = T.ID
WHERE
	STF.TYPE = 'CANCELLATION'
	-- SADECE ÜYELIK IPTAL IŞLERINI GETIRIR
	AND STF.PROCESS_STATUS IN ('COMPLETED', 'CHURN_PROCESS_CANCELLED', 'CHURN_PROCESS_SUSPENDED', 'REJECTED', 'CANCELLED')
/

create or replace view V_BOS_SISTEMSEL_HATA as
SELECT
	ba.ID AS BOS_TALEP_NUMARASI,
	CASE
		WHEN (ba.TOPUP_TYPE = 'BONUS') THEN 'ÇOKLU BP YÜKLEME'
		WHEN (ba.TOPUP_TYPE = 'SINGLE_BONUS') THEN 'TEKLI BP YÜKLEME'
		ELSE 'TL YÜKLEME'
	END AS TALEP_TIPI,
	ba.MODIFIED_DATE AS YUKLEME_TARIHI,
	ba.TOTAL_AMOUNT AS TOPLAM_TUTAR,
	(
	SELECT
		count(*)
	FROM
		TICKET_TOPUP_MONEY.BPTL_APPLICATION_DETAILS@prod_blynrdb
	WHERE
		APPLICATION_ID = ba.ID) AS TOPLAM_UYE_SAYISI,
	(
	SELECT
		REF_NO || '-' || DESCRIPTION
	FROM
		LBR.CUSTOMER_CAMPAIGN_TYPE@prod_blynrdb
	WHERE
		REF_NO = ba.CAMPAIGN_ID) AS YUKLEME_KODU,
	ba.EXPLANATION AS TALEP_ACIKLAMASI
FROM
	TICKET_TOPUP_MONEY.BPTL_APPLICATION@prod_blynrdb ba
WHERE
	TOPUP_TYPE IN ('BONUS', 'CASH', 'SINGLE_BONUS')
/

create or replace view V_TEKLI_BP as
SELECT T.USERID,
           T.MAXDATE,
           T.SEGMENT_ASSIGNED,
           T.ENSONYATIRILANBONUS,
           T.CIRO,
           T.DESCRIPTION,
           T.ONGORULENBP,
           AT2.BITISTAR,
           T.CIRO_SON12AY,
           T.BONUSKULLANIM_SON12AY,
           T.TJK_CIRO_SON12AY,
           T.TJK_BONUSKULLANIM_SON12AY,
           SYSDATE     MODIFIED_DATE
      FROM (SELECT T.USERID,
                   T.MAXDATE,
                   T.SEGMENT_ASSIGNED,
                   T.ENSONYATIRILANBONUS,
                   T.CIRO,
                   T.DESCRIPTION,
                   T.ONGORULENBP,
                   T.CIRO_SON12AY,
                   T.BONUSKULLANIM_SON12AY,
                   T.TJK_CIRO_SON12AY,
                   T.TJK_BONUSKULLANIM_SON12AY
              FROM (  SELECT USERID,
                             DESCRIPTION,
                             MAXDATE,
                             SEGMENT_ASSIGNED,
                             TO_CHAR (YATIRILANBONUS)    ENSONYATIRILANBONUS,
                             SUM (C2.NAMOUNT)            AS CIRO,
                               CEIL (
                                     CASE
                                         WHEN SEGMENT_ASSIGNED = 'A0'
                                         THEN
                                             SUM (C2.NAMOUNT) * 0.003
                                         WHEN SEGMENT_ASSIGNED = 'A1'
                                         THEN
                                             SUM (C2.NAMOUNT) * 0.002
                                         WHEN SEGMENT_ASSIGNED = 'A2'
                                         THEN
                                             SUM (C2.NAMOUNT) * 0.001
                                         WHEN SEGMENT_ASSIGNED = 'A3'
                                         THEN
                                             SUM (C2.NAMOUNT) * 0.0004
                                     END
                                   / 10)
                             * 10                        ONGORULENBP,
                             CIRO_SON12AY,
                             BONUSKULLANIM_SON12AY,
                             0                           TJK_CIRO_SON12AY,
                             0                           TJK_BONUSKULLANIM_SON12AY
                        FROM (  SELECT Y.CID,
                                       USERID,
                                       SEGMENT_ASSIGNED,
                                       YATIRILANBONUS,
                                       DESCRIPTION,
                                       MAX (ODATE)
                                           AS MAXDATE,
                                       MIN (ODATE)
                                           AS MINDATE,
                                       MAX (ODATE) - MIN (ODATE)
                                           AS DIF_DAY,
                                       CIRO_SON12AY,
                                       BONUSKULLANIM_SON12AY,
                                       0
                                           TJK_CIRO_SON12AY,
                                       0
                                           TJK_BONUSKULLANIM_SON12AY
                                  FROM (  SELECT X.CID
                                                     AS CID,
                                                 BC.USERID
                                                     AS USERID,
                                                 X.ODATE
                                                     AS ODATE,
                                                 X.RW
                                                     AS RW,
                                                 X.YATIRILANBONUS,
                                                 SEGMENT_ASSIGNED,
                                                 DESCRIPTION,
                                                 BC.CIRO_SON12AY
                                                     AS CIRO_SON12AY,
                                                 BC.BONUSKULLANIM_SON12AY
                                                     AS BONUSKULLANIM_SON12AY,
                                                 0
                                                     AS TJK_CIRO_SON12AY,
                                                 0
                                                     AS TJK_BONUSKULLANIM_SON12AY
                                            FROM (  SELECT MAX (ODATE)
                                                               ODATE,
                                                           ROW_NUMBER ()
                                                               OVER (
                                                                   PARTITION BY CUSTOMER_ID
                                                                   ORDER BY
                                                                       TRUNC (ODATE) DESC)
                                                               AS RW,
                                                           RBN.AMOUNT
                                                               YATIRILANBONUS,
                                                           RBN.DESCRIPTION
                                                               DESCRIPTION,
                                                           CUSTOMER_ID
                                                               AS CID
                                                      FROM LBRDWH.BONUS_NEW RBN
                                                     WHERE     RBN.CAMPAIGN_ID NOT IN
                                                                   ('2789',
                                                                    '2805',
                                                                    '2818',
                                                                    '2807')
                                                           AND RBN.CUSTOMER_ID NOT IN
                                                                   (SELECT CUSTOMER_ID
                                                                      FROM LBRDWH.CUSTOMER_RESTRICTED_BONUS
                                                                           CRB)
                                                  GROUP BY CUSTOMER_ID,
                                                           AMOUNT,
                                                           ODATE,
                                                           DESCRIPTION) X
                                                 JOIN CRM_DM.BONUS_CALISMA BC
                                                     ON     X.CID = BC.CUSTOMER_ID
                                                        AND BC.SEGMENT_ASSIGNED IN
                                                                ('A0',
                                                                 'A1',
                                                                 'A2',
                                                                 'A3')
                                           WHERE 1 = 1 AND RW = 1
                                        GROUP BY X.CID,
                                                 BC.USERID,
                                                 X.ODATE,
                                                 DESCRIPTION,
                                                 X.YATIRILANBONUS,
                                                 X.RW,
                                                 SEGMENT_ASSIGNED,
                                                 CIRO_SON12AY,
                                                 BONUSKULLANIM_SON12AY
                                        ORDER BY X.CID) Y
                              GROUP BY CID,
                                       USERID,
                                       YATIRILANBONUS,
                                       SEGMENT_ASSIGNED,
                                       DESCRIPTION,
                                       CIRO_SON12AY,
                                       BONUSKULLANIM_SON12AY) Z
                             LEFT JOIN CRM_DM.TS_CUSTOMER_DAILY_AMOUNT C2
                                 ON     Z.CID = C2.NCUSTOMER_ID
                                    AND C2.DPLAY_DATE BETWEEN TRUNC (
                                                                  Z.MAXDATE + 1)
                                                          AND TRUNC (SYSDATE)
                    GROUP BY USERID,
                             MAXDATE,
                             YATIRILANBONUS,
                             MINDATE,
                             DESCRIPTION,
                             SEGMENT_ASSIGNED,
                             CIRO_SON12AY,
                             BONUSKULLANIM_SON12AY
                    UNION ALL
                      SELECT USERID,
                             'HIÇ KAMPANYA YOK',
                             TO_DATE ('2099/01/01', 'YYYY/MM/DD'),
                             SEGMENT_ASSIGNED,
                             'ENSONYATIRILANBONUS',
                             SUM (C2.NAMOUNT)    AS CIRO,
                               CEIL (
                                     (CASE
                                          WHEN SEGMENT_ASSIGNED = 'A0'
                                          THEN
                                              SUM (C2.NAMOUNT) * 0.004
                                          WHEN SEGMENT_ASSIGNED = 'A1'
                                          THEN
                                              SUM (C2.NAMOUNT) * 0.002
                                          WHEN SEGMENT_ASSIGNED = 'A2'
                                          THEN
                                              SUM (C2.NAMOUNT) * 0.001
                                          WHEN SEGMENT_ASSIGNED = 'A3'
                                          THEN
                                              SUM (C2.NAMOUNT) * 0.0004
                                      END)
                                   / 10)
                             * 10                ONGORULENBP,
                             CIRO_SON12AY,
                             BONUSKULLANIM_SON12AY,
                             0                   TJK_CIRO_SON12AY,
                             0                   TJK_BONUSKULLANIM_SON12AY
                        FROM (SELECT BC.CUSTOMER_ID
                                         CID,
                                     BC.USERID
                                         USERID,
                                     BC.SEGMENT_ASSIGNED
                                         SEGMENT_ASSIGNED,
                                     BN.ODATE,
                                     BC.CIRO_SON12AY
                                         AS CIRO_SON12AY,
                                     BC.BONUSKULLANIM_SON12AY
                                         AS BONUSKULLANIM_SON12AY,
                                     0
                                         AS TJK_CIRO_SON12AY,
                                     0
                                         AS TJK_BONUSKULLANIM_SON12AY
                                FROM CRM_DM.BONUS_CALISMA BC
                                     LEFT JOIN LBRDWH.BONUS_NEW BN
                                         ON BC.CUSTOMER_ID = BN.CUSTOMER_ID
                               WHERE     BC.SEGMENT_ASSIGNED IN ('A0',
                                                                 'A1',
                                                                 'A2',
                                                                 'A3')
                                     AND BN.ODATE IS NULL) X
                             JOIN CRM_DM.TS_CUSTOMER_DAILY_AMOUNT C2
                                 ON C2.NCUSTOMER_ID = X.CID
                       WHERE C2.DPLAY_DATE > TRUNC (SYSDATE - 30)
                    GROUP BY CID,
                             SEGMENT_ASSIGNED,
                             USERID,
                             CIRO_SON12AY,
                             BONUSKULLANIM_SON12AY) T) T
           LEFT JOIN CRM_DM.ARAMALAR_TEKLIFLER AT2
               ON AT2.USERID = T.USERID AND AT2.BITISTAR = DATE '2039-12-31'
/

create or replace view V_1_SN_LIMIT_ISTISNASI as
SELECT
	A.USERID AS UYE_NO,
	C.SEGMENT AS SEGMENT,
	VC.PORTFOLIO_MAN AS PY,
	SC.STATUS AS ISTISNA,
	SC.INSERT_DATE AS EKLEME_TARIHI,
	SC.UPDATE_DATE AS GUNCELLEME_TARIHI
FROM
	WITHDRAW_APP_ADM.SPECIAL_CUSTOMER@PROD_BLYNRDB SC
LEFT JOIN MBET.AUTHENTICATION@PROD_BLYNRDB A
ON A.CUSTOMER_ID = SC.CUSTOMER_ID
LEFT JOIN MBET.CUSTOMER@PROD_BLYNRDB C
ON SC.CUSTOMER_ID = C.CUSTOMER_ID
LEFT JOIN USERS_DB_ADM.VIP_CUSTOMER@PROD_BLYNRDB VC
ON VC.CUSTOMER_ID = SC.CUSTOMER_ID
/

create or replace view V_CANLI_YAYIN_WHITE_LIST_ISTISNA as
SELECT
	WL.USER_ID AS UYE_NO,
	WL.MODIFIED_DATE AS GUNCELLEME_TARIHI,
	(
	SELECT
		U.FULL_NAME
	FROM
		TICKET_USER_DB_ADM.USERS@PROD_BLYNRDB U
	WHERE
		U.ID = WL.CREATED_BY) AS ISLEMI_YAPAN_KULLANICI,
	WL.LIVE_STREAM AS ISTISNA_DURUMU, -- 0 PASSIVE, 1 ACTIVE
	WL.FROM_AD, -- ACTIVE DIRECTORY'DEN MI ÜYE ÇEKILDI ?
	--ISTISNA SEBEBI ?
	WL.TYPE AS TIP  --ÜYE YA DA ÇALIŞAN
FROM
	TICKET_USER_OPERATIONS_DB_ADM.WHITE_LIST@PROD_BLYNRDB WL
/

create or replace view V_KVKK_RAPOR as
SELECT
	T.ID AS TALEP_NUMARASI,
	STF.TYPE AS KVKK_TIPI,
	T.USER_ID AS USER_ID,
	(
	SELECT
		C.REGISTRATION_DATE
	FROM
		MBET.CUSTOMER@PROD_BLYNRDB C
	WHERE
		C.CUSTOMER_ID = STF.CUSTOMER_ID) AS UYELIK_TARIHI,
	T.SEGMENT AS TALEP_ANINDAKI_SEGMENT,
	(
	SELECT
		VC.PORTFOLIO_MAN
	FROM
		USERS_DB_ADM.VIP_CUSTOMER@PROD_BLYNRDB VC
	WHERE
		VC.CUSTOMER_ID = T.CUSTOMER_ID) AS PY,
	--BURASI DEĞIŞMIŞ OLABILIR. TALEP ANINDAKI VERIYI TUTMUYORUZ
STF.CONTACT_PERM AS ARAMA_IZNI,
	STF.CHURN AS CHURN_DAHIL_MI,
	(
	SELECT
		C.STATUS
	FROM
		MBET.CUSTOMER@PROD_BLYNRDB C
	WHERE
		C.CUSTOMER_ID = STF.CUSTOMER_ID) AS GUNCEL_STATU,
	--ÜYELIK IPTAL TARIHI TEK SORGUYLA BULUNAMAYABILIR. CUSTOMER_STATUS_HISTORY'DEN BELKI ÇEKILEBILIR.
	--CIRO?
	T.CREATED_DATE AS TALEP_TARIHI,
	T.CHANNEL AS TALEP_KANALI,
	(
	SELECT
		SCR.NAME
	FROM
		TICKET_MANAGEMENT_DB_ADM.STATUS_CHANGE_REASON@PROD_BLYNRDB SCR
	WHERE
		SCR.ID = STF.REASON_ID) AS UYELIK_IPTAL_NEDENI,
	STF.PROCESS_STATUS AS DURUM,
	--VAZGEÇTI , TAMAMLANDI , DEVAM EDIYOR
	T.MODIFIED_DATE AS ISLEM_ZAMANI
FROM
	TICKET_MANAGEMENT_DB_ADM.STATUS_CHANGE_FORM@PROD_BLYNRDB STF
INNER JOIN TICKET_MANAGEMENT_DB_ADM.TICKET@PROD_BLYNRDB T ON
	T.ID = STF.TICKET_ID
WHERE
	STF.PROCESS_STATUS IN
('COMPLETED', 'CHURN_PROCESS_CANCELLED', 'CHURN_PROCESS_SUSPENDED', 'REJECTED', 'CANCELLED')
/

create or replace view V_TMP_TEKLI_BP as
select "USERID","CIRO_SONAY","CIRO_SON12AY","CIRO","ONGORULENBP","HAKEDIS","MAXDATE","SEGMENT_ASSIGNED","ENSONYATIRILANBONUS","DESCRIPTION","BONUSKULLANIM_SON12AY","BITISTAR","TJK_CIRO_SON12AY","TJK_BONUSKULLANIM_SON12AY","MODIFIED_DATE" from CRM_DM.V_TEKLI_BP2
/

create or replace view V_BOS_UYE_IPTAL_V2 as
with STATUS_APPLICATION as (select /*PARALLEL(4)*/ REFERENCED_ID, TICKET_ID, FROZEN_DAYS
                            from TICKET_USER_OPERATIONS_DB_ADM.CUSTOMER_APPLICATION@PROD_BLYNRDB ca
                                     left join TICKET_USER_OPERATIONS_DB_ADM.CUSTOMER_APPLICATION_DETAIL@PROD_BLYNRDB cad
                                               on (ca.ID = cad.APPLICATION_ID)
                            where ca.STATUS = 'COMPLETED'
                              and cad.STATUS = 1
                              and ca.OPERATION_TYPE = 'STATUS_UPDATE'
)
select /*PARALLEL(4)*/
	   t.ID                                                                         as TALEP_NO,
       t.USER_ID                                                                    as USER_ID,
       c.REGISTRATION_DATE                                                          as UYELIK_TARIHI,
       t.SEGMENT                                                                    as TALEP_ANINDAKI_SEGMENT,
       c.SEGMENT                                                                    as GUNCEL_SEGMENT,
       (select u.FULL_NAME
        from TICKET_USER_DB_ADM.users@PROD_BLYNRDB u
        where to_char(u.ID) = t.PORTFOLIO_MANAGER)                                  as TALEP_ANINDAKI_PY,
       vc.PORTFOLIO_MAN                                                             as GUNCEL_PY,
       tcp.NMUSTERI_HIZMETLERI_MAIL                                                 as ARAMA_IZNI,
       scf.CHURN                                                                    as CHURN,
       c.STATUS                                                                     as GUNCEL_STATUS,
       t.CREATED_DATE                                                               as TALEP_ACILMA_TARIHI,
       cat.NAME                                                                     as UYELIK_IPTAL_SECIMI,
       (select u.FULL_NAME
        from TICKET_USER_DB_ADM.users@PROD_BLYNRDB u
        where to_char(u.ID) = t.CREATED_BY)                                         as TALEBI_ACAN,
       t.CHANNEL                                                                    as TALEP_KANALI,
       case
           when scf.REASON_ID is not null
               then (select scr.NAME
                     from TICKET_MANAGEMENT_DB_ADM.STATUS_CHANGE_REASON@PROD_BLYNRDB scr
                     where scr.ID = scf.REASON_ID)
           when ca.REFERENCED_ID is not null
               then (select scr.NAME
                     from TICKET_MANAGEMENT_DB_ADM.STATUS_CHANGE_REASON@PROD_BLYNRDB scr
                     where to_char(scr.ID) = ca.REFERENCED_ID)
           end                                                                         UYELIK_IPTAL_NEDENI,
       th.DESCRIPTION                                                               as SON_ACIKLAMA,
       case
           when scf.PROCESS_STATUS is not null then scf.PROCESS_STATUS
           when ca.TICKET_ID is null then 'CANCELLED'
           else 'COMPLETED' end                                                     as YAPILACAK_ISLEM,
       t.MODIFIED_DATE                                                              as TALEP_KAPAMA_TARIHI,
       (select u.FULL_NAME
        from TICKET_USER_DB_ADM.users@PROD_BLYNRDB u
        where to_char(u.ID) = t.MODIFIED_BY)                                        as TALEBI_KAPATAN,
       case
           when scf.EXPIRE_DATE is not null then scf.EXPIRE_DATE - scf.CREATED_DATE
           when ca.FROZEN_DAYS is not null then ca.FROZEN_DAYS end                  as ARA_VERME_SURESI,
       (select sum(AMOUNT)
        from lbr.ACCOUNT_HISTORY@PROD_BLYNRDB ah
        where ah.ODATE between t.CREATED_DATE and t.CREATED_DATE + 30
          and O_TYPE not in (104, 105, 115, 116, 117)
          and PROCESS_TYPE = 2)                                                     AS CIRO,
       case
           when scf.PROCESS_STATUS = 'CHURN_PROCESS_CANCELLED' then
               (select u.FULL_NAME
                from TICKET_USER_DB_ADM.users@PROD_BLYNRDB u
                where to_char(u.ID) = t.MODIFIED_BY) end                            as VAZGECME_ISLEMINI_GERCEKLESTIREN_FORM,
       case
           when scf.PROCESS_STATUS = 'CHURN_PROCESS_CANCELLED' then t.MODIFIED_DATE end as VAZGECME_ISLEMI_TARIH_FORM
from TICKET_MANAGEMENT_DB_ADM.TICKET@PROD_BLYNRDB t
         left join TICKET_MANAGEMENT_DB_ADM.STATUS_CHANGE_FORM@PROD_BLYNRDB scf on (scf.TICKET_ID = t.ID)
         left join STATUS_APPLICATION ca on (t.ID = ca.TICKET_ID)
         left join mbet.AUTHENTICATION@PROD_BLYNRDB a on (a.USERID = t.USER_ID)
         left join mbet.CUSTOMER@PROD_BLYNRDB c on (a.CUSTOMER_ID = c.CUSTOMER_ID)
         left join USERS_DB_ADM.VIP_CUSTOMER@PROD_BLYNRDB vc on (vc.CUSTOMER_ID = c.CUSTOMER_ID)
         left join mbet.TCUSTOMER_CONTACT_PERMISSIONS@PROD_BLYNRDB tcp on (tcp.CUSTOMER_ID = c.CUSTOMER_ID)
         left join TICKET_MANAGEMENT_DB_ADM.TICKET_HISTORY@PROD_BLYNRDB th on (th.TICKET_ID = t.ID and th.TYPE = 'TICKET_CLOSE')
         left join TICKET_MANAGEMENT_DB_ADM.CATEGORY@PROD_BLYNRDB cat on (cat.id = t.CATEGORY_ID)
where CATEGORY_ID in (1940, 1941, 1024)
/

create or replace package        pkg_update_bonus_calisma is
    procedure p_main;
    procedure p_bc_update_01;
    procedure p_bc_update_02;
    procedure p_bc_update_03;
    procedure p_bc_update_04;
    procedure p_bc_update_05;
    procedure p_bc_update_06;
    procedure p_bc_update_07;
    procedure p_bc_update_08;
    procedure p_bc_update_09;
    procedure p_bc_update_10;
    procedure p_bc_update_11;
    procedure p_bc_update_12;
    procedure p_bc_update_13;
    procedure p_bc_update_14;
    procedure p_bc_update_15;
    procedure p_bc_update_16;
    procedure p_bc_update_17;
    procedure p_bc_update_18;
    procedure p_bc_update_19;
    procedure p_bc_update_20;
    procedure p_bc_update_21;
    procedure p_bc_update_22;
    procedure p_bc_update_23;
    procedure p_bc_update_24;
    procedure p_bc_update_25;
    procedure p_bc_insert_01;
    procedure p_bc_update_26;
    procedure p_bc_update_27;
    procedure p_bc_update_28;
    procedure p_bc_update_29;
    procedure p_bc_update_30;
    procedure p_bc_update_31;
    procedure p_bc_update_32;
    procedure p_bc_update_33;
    procedure p_bc_update_34;
    procedure p_bc_update_35;
    procedure p_bc_update_36;
    procedure p_bc_update_37;
    procedure p_bc_update_38;
    procedure p_bc_update_39;
    procedure p_bc_update_40;
    procedure p_bc_update_41;
    procedure p_bc_update_42;
    procedure p_bc_update_999;
end pkg_update_bonus_calisma;
/

create or replace package body        pkg_update_bonus_calisma is
    procedure p_main is
    begin
        execute immediate 'alter session enable parallel dml';
        p_bc_update_01;
        p_bc_update_02;
        p_bc_update_03;
        p_bc_update_04;
        p_bc_update_05;
        p_bc_update_06;
        p_bc_update_07;
        p_bc_update_08;
        p_bc_update_09;
        p_bc_update_10;
        p_bc_update_11;
        p_bc_update_12;
        p_bc_update_13;
        p_bc_update_14;
        p_bc_update_15;
        p_bc_update_16;
        p_bc_update_17;
        p_bc_update_18;
        p_bc_update_19;
        p_bc_update_20;
        p_bc_update_21;
        p_bc_update_22;
        p_bc_update_23;
        p_bc_update_24;
        p_bc_update_25;
        p_bc_insert_01;
        p_bc_update_26;
        p_bc_update_27;
        p_bc_update_28;
        p_bc_update_29;
        p_bc_update_30;
        p_bc_update_31;
        p_bc_update_32;
        p_bc_update_33;
        p_bc_update_34;
        p_bc_update_35;
        p_bc_update_36;
        p_bc_update_37;
        p_bc_update_38;
        p_bc_update_39;
        p_bc_update_40;
        p_bc_update_41;
        p_bc_update_42;
        p_bc_update_999; /* Exchange partition yapılıyor, son adım olarak kalmalı! */
    END p_main;


-----------------------------------------------------------------------------------------------------------------------
    procedure p_bc_update_01 is
    begin
        merge into crm_dm.Bonus_Calisma_tmp A
        using(
            select
                B.CUSTOMER_ID,
                IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
                IKDD.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
                IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
                IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
                NVL(IKDD.Iddaa_Ciro_SonHafta,0) + NVL(SKDD.STO_Ciro_SonHafta,0) AS Iddaa_STO_Ciro_SonHafta,
                NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta,
                NVL(IKDD.KazananKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta,0) AS Iddaa_STO_Kazanan_SonHafta,
                NVL(IKDD.KaybedenKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta,0) AS Iddaa_STO_Kaybeden_SonHafta,
                NVL(IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
                NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
                NVL(IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
                NVL(IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
                IKDD.KaybedenKuponTutar_SonHafta,
                IKDD.KaybedenKuponTutar_SonAy,
                IKDD.KaybedenKuponTutar_Son3Ay,
                IKDD.KaybedenKuponTutar_Son6Ay,
                IKDD.KaybedenKuponTutar_Son12Ay,
                IKDD.KazananKuponTutar_SonHafta,
                IKDD.KazananKuponTutar_SonAy,
                IKDD.KazananKuponTutar_Son3Ay,
                IKDD.KazananKuponTutar_Son6Ay,
                IKDD.KazananKuponTutar_Son12Ay
            from crm_DM.Bonus_Calisma_tmp B
            left join CRM_DM.DM_IDDAA_KUPONDURUM_DAILY IKDD on B.CUSTOMER_ID=IKDD.CUSTOMER_ID
            left join CRM_DM.DM_STO_KUPONDURUM_DAILY SKDD on B.CUSTOMER_ID=SKDD.CUSTOMER_ID
        ) S
          ON (A.CUSTOMER_ID = S.CUSTOMER_ID)
        when matched then update
        set
            A.Iddaa_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
            A.BASKETBALL_CIRO_SonHafta_BONUS_HARIC = S.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
            A.KaybedenKuponTutar_SonHafta_BONUS_HARIC = S.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
            A.KazananKuponTutar_SonHafta_BONUS_HARIC = S.KazananKuponTutar_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Ciro_SonHafta = S.Iddaa_STO_Ciro_SonHafta,
            A.Iddaa_STO_Degerlendirilmemis_SonHafta = S.Iddaa_STO_Degerlendirilmemis_SonHafta,
            A.Iddaa_STO_Kazanan_SonHafta = S.Iddaa_STO_Kazanan_SonHafta,
            A.Iddaa_STO_Kaybeden_SonHafta = S.Iddaa_STO_Kaybeden_SonHafta,
            A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC = S.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
            A.KaybedenKuponTutar_SonHafta = S.KaybedenKuponTutar_SonHafta,
            A.KaybedenKuponTutar_SonAy = S.KaybedenKuponTutar_SonAy,
            A.KaybedenKuponTutar_Son3Ay = S.KaybedenKuponTutar_Son3Ay,
            A.KaybedenKuponTutar_Son6Ay = S.KaybedenKuponTutar_Son6Ay,
            A.KaybedenKuponTutar_Son12Ay = S.KaybedenKuponTutar_Son12Ay,
            A.KazananKuponTutar_SonHafta = S.KazananKuponTutar_SonHafta,
            A.KazananKuponTutar_SonAy = S.KazananKuponTutar_SonAy,
            A.KazananKuponTutar_Son3Ay = S.KazananKuponTutar_Son3Ay,
            A.KazananKuponTutar_Son6Ay = S.KazananKuponTutar_Son6Ay,
            A.KazananKuponTutar_Son12Ay = S.KazananKuponTutar_Son12Ay
        ;
        commit;
    end;
-----------------------------------------------------------------------------------------------------------------------------------------------
    procedure p_bc_update_02 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select customer_id from lbrdwh.tribun_users WHERE  IS_AUTHOR=1) TR
        ON (BC.CUSTOMER_id = TR.CUSTOMER_id)
        WHEN MATCHED THEN UPDATE SET BC.TRIBUNDISCARD=1
        ;
        commit;
    end;
    procedure p_bc_update_03 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select customer_id from CRM_DM.tribun_dashboard_vip_list WHERE STATUS=1) TDVL
        ON (BC.CUSTOMER_id = TDVL.CUSTOMER_id)
        WHEN MATCHED THEN UPDATE SET BC.TRIBUNDISCARD=1
        ;
        commit;
    end;
    procedure p_bc_update_04 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select DISTINCT userid from CRM_DM.Aramalar_Teklifler  WHERE TRUNC(SYSDATE) BETWEEN BASLANGICTAR AND BITISTAR) ART
        ON (BC.USERID = ART.USERID)
        WHEN MATCHED THEN UPDATE SET BC.YuzdeTeklifDiscard=1

        ;
        commit;
    end;
    procedure p_bc_update_05 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING CRM_DM.YuklemeDisi YD
        ON (BC.USERID = YD.USERID)
        WHEN MATCHED THEN UPDATE SET BC.DigerDiscard=1
        ;
        commit;
    end;
    procedure p_bc_update_06 is
    begin
        null;
    end;
    procedure p_bc_update_07 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING lbrdwh.customer_restricted_bonus CRB
        ON (BC.CUSTOMER_ID = CRB.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE SET BC.DigerDiscard=3
        ;
        commit;
    end;
    procedure p_bc_update_08 is
    begin
        update /*+ parallel(4) */ crm_DM.Bonus_Calisma_tmp
                    set Para_Bonus_Kontrol=case
                    when NVL(Ciro_Son12Ay,0)=0 then -10
                    when NVL(SonParaTransferiUzerindenGecenSure,400)=400 then -9
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)>0 then -8
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)>0 then -7
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<10 then -6
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<10 then -5
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<30 then -4
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)<=0 then -3
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<30 then -2
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)<=0 then -1
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)<=0.05 then
                        case
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=10 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 0
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 1
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 5
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=30 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 1
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 7
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 8
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=60 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 6
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 8
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 9
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=90 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 7
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 9
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 10
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)>90 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 6
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 8
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 9
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 10
                            end
                        end
                    else 99 end
                    ;
                    commit;

    end;
    procedure p_bc_update_09 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        OyunGunRatio_SonHafta=case when UyelikTarihi > TRUNC(SYSDATE)-7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_SonHafta,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_SonHafta,0)*1.0/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_SonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_SonAy,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_SonAy,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son3Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son3Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son6Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son6Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son12Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son12Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_SonHafta=case when UyelikTarihi > TRUNC(SYSDATE)-7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_SonHafta,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_SonHafta,0)*1.0/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_SonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_SonAy,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_SonAy,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son3Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son3Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son6Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son6Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son12Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son12Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end
        ;
        commit;
    end;
    procedure p_bc_update_10 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        PayoutRatio_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then null else NVL(Payout_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        PayoutRatio_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then null else NVL(Payout_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        PayoutRatio_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then null else NVL(Payout_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        PayoutRatio_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then null else NVL(Payout_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        PayoutRatio_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then null else NVL(Payout_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end
        ;
        commit;
    end;
    procedure p_bc_update_11 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        BASKETBALL_RATIO_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then null else NVL(BASKETBALL_CIRO_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        BASKETBALL_RATIO_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then null else NVL(BASKETBALL_CIRO_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        BASKETBALL_RATIO_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        BASKETBALL_RATIO_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        BASKETBALL_RATIO_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Iddaa_Ciro_Pay_SonHafta=case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_SonHafta,0)/NVL(Ciro_SonHafta,0) end,
        Iddaa_Ciro_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_SonAy,0)/NVL(Ciro_SonAy,0) end,
        Iddaa_Ciro_Pay_Son3Ay=case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son3Ay,0)/NVL(Ciro_Son3Ay,0) end,
        Iddaa_Ciro_Pay_Son6Ay=case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son6Ay,0)/NVL(Ciro_Son6Ay,0) end,
        Iddaa_Ciro_Pay_Son12Ay=case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son12Ay,0)/NVL(Ciro_Son12Ay,0) end,
        MP_Ciro_Pay_SonHafta=case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(MP_Ciro_SonHafta,0)/NVL(Ciro_SonHafta,0) end,
        MP_Ciro_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(MP_Ciro_SonAy,0)/NVL(Ciro_SonAy,0) end,
        MP_Ciro_Pay_Son3Ay=case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(MP_Ciro_Son3Ay,0)/NVL(Ciro_Son3Ay,0) end,
        MP_Ciro_Pay_Son6Ay=case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(MP_Ciro_Son6Ay,0)/NVL(Ciro_Son6Ay,0) end,
        MP_Ciro_Pay_Son12Ay=case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(MP_Ciro_Son12Ay,0)/NVL(Ciro_Son12Ay,0) end
        ;
        commit;
    end;
    procedure p_bc_update_12 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        Iddaa_Ciro_3OranAltı_Pay_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        Iddaa_Ciro_3OranAltı_Pay_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        Iddaa_Ciro_5OranAltı_Pay_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Haftaici_Ogle_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(Haftaici_Ogle_SonAy,0)/NVL(Ciro_SonAy,0) end
        ;
        commit;
    end;
    procedure p_bc_update_13 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        Ciro_pMonth_sonHafta=case when UyelikTarihi > TRUNC(SYSDATE) - 7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(Ciro_SonHafta,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_SonHafta,0)*30.00/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_sonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(Ciro_SonAy,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_SonAy,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(Ciro_Son3Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son3Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(Ciro_Son6Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son6Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(Ciro_Son12Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son12Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end
        ;
        commit;
    end;
    procedure p_bc_update_14 is
    begin
        declare
                pW1 number(22,6):=0.10;
                pW2 number(22,6):=0.40;
                pW3 number(22,6):=0.30;
                pW4 number(22,6):=0.15;
                pW5 number(22,6):=0.05;

        begin

            update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
            set
            Ciro_pMonth_Max=case
            when
                (case
                when Ciro_pMonth_sonHafta>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonHafta>=Ciro_pMonth_sonAy and Ciro_pMonth_sonHafta>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son12Ay then (Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)
                when Ciro_pMonth_sonAy>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonAy>=Ciro_pMonth_sonAy and Ciro_pMonth_sonAy>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son12Ay then Ciro_pMonth_sonAy
                when Ciro_pMonth_son3Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son3Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son3Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son3Ay
                when Ciro_pMonth_son6Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son6Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son6Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son6Ay
                when Ciro_pMonth_son12Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son12Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son12Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son12Ay
                else 0 end)>Ciro_Donem_Max then Ciro_Donem_Max
            else (case
                when Ciro_pMonth_sonHafta>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonHafta>=Ciro_pMonth_sonAy and Ciro_pMonth_sonHafta>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son12Ay then (Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)
                when Ciro_pMonth_sonAy>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonAy>=Ciro_pMonth_sonAy and Ciro_pMonth_sonAy>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son12Ay then Ciro_pMonth_sonAy
                when Ciro_pMonth_son3Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son3Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son3Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son3Ay
                when Ciro_pMonth_son6Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son6Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son6Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son6Ay
                when Ciro_pMonth_son12Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son12Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son12Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son12Ay
                else 0 end)
            end,
            Login_Ratio_Max=case
            when LoginGunRatio_sonHafta>=LoginGunRatio_sonHafta and LoginGunRatio_sonHafta>=LoginGunRatio_sonAy and LoginGunRatio_sonHafta>=LoginGunRatio_son3Ay and LoginGunRatio_sonHafta>=LoginGunRatio_son6Ay and LoginGunRatio_sonHafta>=LoginGunRatio_son12Ay then (LoginGunRatio_sonHafta*0.1+LoginGunRatio_sonAy*0.9)
            when LoginGunRatio_sonAy>=LoginGunRatio_sonHafta and LoginGunRatio_sonAy>=LoginGunRatio_sonAy and LoginGunRatio_sonAy>=LoginGunRatio_son3Ay and LoginGunRatio_sonAy>=LoginGunRatio_son6Ay and LoginGunRatio_sonAy>=LoginGunRatio_son12Ay then LoginGunRatio_sonAy
            when LoginGunRatio_son3Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son3Ay>=LoginGunRatio_sonAy and LoginGunRatio_son3Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son3Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son3Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son3Ay
            when LoginGunRatio_son6Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son6Ay>=LoginGunRatio_sonAy and LoginGunRatio_son6Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son6Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son6Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son6Ay
            when LoginGunRatio_son12Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son12Ay>=LoginGunRatio_sonAy and LoginGunRatio_son12Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son12Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son12Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son12Ay
            else 0 end,
            Oyun_Ratio_Max=case
            when OyunGunRatio_sonHafta>=OyunGunRatio_sonHafta and OyunGunRatio_sonHafta>=OyunGunRatio_sonAy and OyunGunRatio_sonHafta>=OyunGunRatio_son3Ay and OyunGunRatio_sonHafta>=OyunGunRatio_son6Ay and OyunGunRatio_sonHafta>=OyunGunRatio_son12Ay then (OyunGunRatio_sonHafta*0.1+OyunGunRatio_sonAy*0.9)
            when OyunGunRatio_sonAy>=OyunGunRatio_sonHafta and OyunGunRatio_sonAy>=OyunGunRatio_sonAy and OyunGunRatio_sonAy>=OyunGunRatio_son3Ay and OyunGunRatio_sonAy>=OyunGunRatio_son6Ay and OyunGunRatio_sonAy>=OyunGunRatio_son12Ay then OyunGunRatio_sonAy
            when OyunGunRatio_son3Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son3Ay>=OyunGunRatio_sonAy and OyunGunRatio_son3Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son3Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son3Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son3Ay
            when OyunGunRatio_son6Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son6Ay>=OyunGunRatio_sonAy and OyunGunRatio_son6Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son6Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son6Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son6Ay
            when OyunGunRatio_son12Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son12Ay>=OyunGunRatio_sonAy and OyunGunRatio_son12Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son12Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son12Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son12Ay
            else 0 end,
            Ciro_Ort_W=(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)*pW1+Ciro_pMonth_SonAy*pW2+Ciro_pMonth_Son3Ay*pW3+Ciro_pMonth_Son6Ay*pW4+Ciro_pMonth_Son12Ay*pW5,
            LoginGun_Ort_W=LoginGunRatio_SonHafta*pW1+LoginGunRatio_SonAy*pW2+LoginGunRatio_Son3Ay*pW3+LoginGunRatio_Son6Ay*pW4+LoginGunRatio_Son12Ay*pW5,
            OyunGun_Ort_W=OyunGunRatio_SonHafta*pW1+OyunGunRatio_SonAy*pW2+OyunGunRatio_Son3Ay*pW3+OyunGunRatio_Son6Ay*pW4+OyunGunRatio_Son12Ay*pW5,
            Bonus_Oran_W=(case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(BonusYukleme_SonHafta,0)*pW1/NVL(Ciro_SonHafta,0) end)+
            (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)*pW2/NVL(Ciro_SonAy,0) end)+
            (case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(BonusYukleme_Son3Ay,0)*pW3/NVL(Ciro_Son3Ay,0) end)+
            (case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(BonusYukleme_Son6Ay,0)*pW4/NVL(Ciro_Son6Ay,0) end)+
            (case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(BonusYukleme_Son12Ay,0)*pW5/NVL(Ciro_Son12Ay,0) end),
            Ticket_Ort_W=(case when NVL(OyunGunAdet_SonHafta,0)=0 then 0 else NVL(Ciro_SonHafta,0)*pW1/NVL(OyunGunAdet_SonHafta,0) end)+
            (case when NVL(OyunGunAdet_SonAy,0)=0 then 0 else NVL(Ciro_SonAy,0)*pW2/NVL(OyunGunAdet_SonAy,0) end)+
            (case when NVL(OyunGunAdet_Son3Ay,0)=0 then 0 else NVL(Ciro_Son3Ay,0)*pW3/NVL(OyunGunAdet_Son3Ay,0) end)+
            (case when NVL(OyunGunAdet_Son6Ay,0)=0 then 0 else NVL(Ciro_Son6Ay,0)*pW4/NVL(OyunGunAdet_Son6Ay,0) end)+
            (case when NVL(OyunGunAdet_Son12Ay,0)=0 then 0 else NVL(Ciro_Son12Ay,0)*pW5/NVL(OyunGunAdet_Son12Ay,0) end)
            ;
         end;
         commit;
    end;
    procedure p_bc_update_15 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
            set
            Log_Ciro_Ort_W=case when NVL(Ciro_Ort_W,0)<1 then 0 else ln(Ciro_Ort_W) end,
            Log_Ticket_Ort_W=case when NVL(Ticket_Ort_W,0)<1 then 0 else ln(Ticket_Ort_W) end,
            Ciro_Score1=case when NVL(Ciro_pMonth_Max,0)<3 then 0
                            when Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9<1 then 0
                 else
                    (case when ln(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)/ln(Ciro_pMonth_Max)>1 then 1 else ln(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)/ln(Ciro_pMonth_Max) end)
                 end,
            Ciro_Score2=case when NVL(Ciro_pMonth_Max,0)<3 then 0
                 when Ciro_pMonth_sonAy<1 then 0
                 else
                    (case when ln(Ciro_pMonth_sonAy)/ln(Ciro_pMonth_Max)>1 then 1 else ln(Ciro_pMonth_sonAy)/ln(Ciro_pMonth_Max) end)
                 end
                 ;
                 commit;
    end;
    procedure p_bc_update_16 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Login_Score=case when SonLoginUzerindenGecenSure is null then 0
                         when NVL(Login_Ratio_Max,0)<0.03 then 0
                         else power((1-(case when NVL(Login_Ratio_Max,0)>0.95 then 0.95 else NVL(Login_Ratio_Max,0) end)),(SonLoginUzerindenGecenSure-1)) end,
        Game_Score=case when SonOyunUzerindenGecenSure is null then 0
                         when NVL(Ciro_Score1,0)=0 then 0
                         when NVL(Ciro_Score2,0)=0 then 0
                         when NVL(Oyun_Ratio_Max,0)<0.03 then 0
                         else power((1-(case when NVL(Oyun_Ratio_Max,0)>0.95 then 0.95 else NVL(Oyun_Ratio_Max,0) end)),(SonOyunUzerindenGecenSure-1)) end
                        ;
                        commit;
    end;
    procedure p_bc_update_17 is
    begin
        declare
                pParam1_CiroSonHafta number(22,6):=0.4;
                pParam2_CiroSonAy    number(22,6):=0.6;
                pParam3_Login	     number(22,6):=0.2;
                pParam4_SonOyun      number(22,6):=0.8;
        begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Alarm_Score=power(Ciro_Score1*pParam1_CiroSonHafta+Ciro_Score2*pParam2_CiroSonAy-1,2)+power(Login_Score*pParam3_Login+Game_Score*pParam4_SonOyun-1,2)
        ;
        end;
        commit;
    end;
    procedure p_bc_update_18 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Alarm=
        case
        when Alarm_Score> 1.1 then 10
        when Alarm_Score> 0.95 then 9
        when Alarm_Score> 0.85 then 8
        when Alarm_Score> 0.75 then 7
        when Alarm_Score> 0.65 then 6
        when Alarm_Score> 0.55 then 5
        when Alarm_Score> 0.45 then 4
        when Alarm_Score> 0.35 then 3
        when Alarm_Score> 0.25 then 2
        when Alarm_Score> 0.15 then 1
        else 0 end
        ;
        commit;
    end;
    procedure p_bc_update_19 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Alarm=10
        where Alarm is null
        ;
        commit;
    end;
    procedure p_bc_update_20 is
    begin
        MERGE  /*+ parallel(4) */into CRM_DM.BONUS_CALISMA_tmp BC
    USING
    (select /*+ parallel(4) */ CN.CUSTOMER_ID,RF.USERID,CN.BIRTHDATE,
    TO_DATE(to_char(sysdate,'yyyy') || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth2,
    TO_DATE(to_char(sysdate,'yyyy')-1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth3,
    TO_DATE(to_char(sysdate,'yyyy')+1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth4,
    TO_DATE(to_char(sysdate,'yyyy') || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar2,
    TO_DATE(to_char(sysdate,'yyyy')-1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar3,
    TO_DATE(to_char(sysdate,'yyyy')+1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar4

    from lbrdwh.customer_new2 CN
    INNER JOIN CRM_DM.BONUS_CALISMA_tmp BC
    ON CN.CUSTOMER_ID = BC.CUSTOMER_ID
    LEFT JOIN crm_DM.RakipFenomen RF
    ON BC.USERID = RF.USERID) MG
    ON (MG.CUSTOMER_ID=BC.CUSTOMER_ID)
    WHEN MATCHED THEN UPDATE SET
    DuzenliAksiyonKitle=
    case
    when UyelikSuresi between 2 and 8 and NVL(Ciro_Donem_Toplam,0)=0 and NVL(BonusYukleme_SonAy,0)=0 then 'Yeni Uye-Oyun Yok'
    when UyelikSuresi<=30 and SonOyunUzerindenGecenSure between 4 and 10 and SonPayoutUzerindenGecenSure is null and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Payout Yok'
    when UyelikSuresi between 10 and 16 and NVL(Ciro_SonAy,0)>=50 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Motivasyon'
    when UyelikSuresi between 24 and 30 and NVL(Ciro_SonAy,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Motivasyon'
    when KaybedenKuponTutar_SonHafta_BONUS_HARIC>=100 and NVL(PayoutRatio_SonHafta,0)<0.25 and NVL(Alarm,10)>2 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(PayoutRatio_SonAy,0)<0.40 then 'Kaybedenler Kulubu'
    when UyelikSuresi>90 and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)=NVL(Ciro_Son3Ay,0)-NVL(BonusKullanım_Son3Ay,0)
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Geri Kazanılan-1'
    when UyelikSuresi>90 and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)=NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0)
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Geri Kazanılan-2'
    when UyelikSuresi>30 and NVL(Ciro_SonAy,0)>=100 and SonOyunUzerindenGecenSure between 7 and 13 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(Alarm,10)>4 then 'Mevcut Uye-Motivasyon'
    when UyelikSuresi>30 and NVL(TribunTakipciSayı,0)>=250 and NVL(Ciro_SonAy,0)>=250 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)*1.0/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Tribun-Motivasyon'
    when NVL(MG.USERID,'Yok')<>'Yok' and NVL(BonusYukleme_SonHafta,0)<=3 then 'Tribun-Motivasyon'
    when ActivityStatus='AKTIF' and SonOyunUzerindenGecenSure>15 and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Alarm,10)>4 then 'Mevcut Uye-Son donem oyun yok'
    when ActivityStatus<>'AKTIF' and SonOyunUzerindenGecenSure>30 and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Alarm,10)>4 then 'Mevcut Uye-Inaktif'
    when ( (trunc(sysdate) - birth2 between -3 and 3)/*(datediff(day, YMD(year(getdate()), month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
            or (trunc(sysdate) - birth3 between -3 and 3)/*(datediff(day, YMD(year(getdate())-1, month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
            or (trunc(sysdate) - birth4 between -3 and 3)/*(datediff(day, YMD(year(getdate())+1, month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
               )
         and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Ciro_SonAy,0)>=100 and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01 then 'Mevcut Uye-Dogumgunu'
    when UyelikSuresi>30
         and ((trunc(sysdate) - uyeliktar2 between -3 and 3)/*(datediff(day, YMD(year(getdate()), month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               or (trunc(sysdate) - uyeliktar3 between -3 and 3)/*(datediff(day, YMD(year(getdate())-1, month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               or (trunc(sysdate) - uyeliktar4 between -3 and 3)/*(datediff(day, YMD(year(getdate())+1, month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               )
         and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Ciro_SonAy,0)>=100 and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01 then 'Mevcut Uye-Uyelik yildonumu'
    /*
    when UyelikSuresi>30 and isnull(Ciro_SonAy,0)>=100 and SonOyunUzerindenGecenSure between 7 and 13 and isnull(SonPayoutUzerindenGecenSure,999)>SonOyunUzerindenGecenSure+10
         and (case when isnull(Ciro_SonAy,0)=0 then 0 else isnull(BonusYukleme_SonAy,0)/isnull(Ciro_SonAy,0) end)<=0.03
         and isnull(BAKIYE,0)+isnull(BONUS_BAKIYE,0)<3 and isnull(PayoutRatio_SonAy,0)<0.40 then 'Mevcut Uye-Payout Dusuk'
    */
    else null end
    WHERE
    BC.TribunDiscard is null
    and BC.YuzdeTeklifDiscard is null
    and NVL(BC.DigerDiscard,9) not in (1,3) ---Sorunlular ve restiricted olanlar
    and (NVL(BC.Ciro_Donem_Toplam,0)>0 or (BC.UyelikSuresi between 2 and 8 and NVL(BC.Ciro_Donem_Toplam,0)=0 ))
    ;
    commit;
    end;
    procedure p_bc_update_21 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
                pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
        pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
        pSONGUN :=trunc(last_day(pBUGUN));
         begin
         select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
         into pAYLIK_YUKLEME_SAYI
         from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
         ;
         exception when no_data_found or too_many_rows then
           pAYLIK_YUKLEME_SAYI := 0;
         end;
        merge  /*+ parallel(4) */ into crm_dm.Bonus_Calisma_tmp A
            using crm_dm.Bonus_Yukleme_Kural B
                on (nvl(A.Ciro_Ort_W,0)>=B.Ciro_Alt and nvl(A.Ciro_Ort_W,0)<B.Ciro_Ust)
            when matched then update set
                OngorulenYuklemeAdet =
                    case when nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio>pAYLIK_YUKLEME_SAYI then round(nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio,0)
                         when nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio>=B.YuklemeAdet then round(nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio,0)
                         else B.YuklemeAdet
                    end
            ;
            end;
        commit;

    end;
    procedure p_bc_update_22 is
    begin
        declare
                    pYuklemeRatio 		    number(22,6):=0.7;
                    pAlarmBasedBonusRatio 	number(22,6):=0.002;
        begin
            merge /*+ parallel(4) */ into crm_dm.Bonus_Calisma_tmp A
            using (select /*+ parallel(4) */ a.*, B.Yuzde, c.yuzde_alt,c.yuzde_ust  ----hangi kolonlar gerekiyorsa onları seç !!!!
                   from crm_dm.Bonus_Calisma_tmp A, crm_dm.Bonus_Yukleme_Kural B, crm_dm.Bonus_Yukleme_Kural_2 C
                   where nvl(A.Ciro_Ort_W,0)>=B.Ciro_Alt and nvl(A.Ciro_Ort_W,0)<B.Ciro_Ust
                     and A.Segment_Assigned=C.Segment )s
            on (a.customer_id = s.customer_id ) ----- burada kolon adına bakamadım, musteri_id?musteri_no ?
            when matched then update set
            OngorulenYuzde= case when nvl(BonusTalepkar,0)=1 and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.01 then 0.01
                                when UyelikSuresi<=30 and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.0125 then 0.0125
                                when DuzenliAksiyonKitle in ('Mevcut Uye-Uyelik yildonumu', 'Mevcut Uye-Dogumgunu','Mevcut Uye-Son donem oyun yok','Mevcut Uye-Inaktif','Kaybedenler Kulubu')
                                        and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.01 then 0.01
                                when DuzenliAksiyonKitle in ('Geri Kazanılan-1') then 0.0125
                                when DuzenliAksiyonKitle in ('Geri Kazanılan-2') then 0.0125
                                when nvl(Bonus_Oran_W,0)<s.Yuzde then s.Yuzde
                                when nvl(Bonus_Oran_W,0)>nvl(s.Yuzde_Ust,0.00625) then nvl(s.Yuzde_Ust,0.00625)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                                when nvl(Bonus_Oran_W,0)<nvl(s.Yuzde_Alt,0.00175) then nvl(s.Yuzde_Alt,0.00175)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                                else nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                            end + (nvl(Alarm,10)*pAlarmBasedBonusRatio/10)
            ;
        end;
        commit;
    end;
    procedure p_bc_update_23 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
                pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
        begin
                 select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
                 into pAYLIK_YUKLEME_SAYI
                 from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
                 ;
                 exception when no_data_found or too_many_rows then
                 pAYLIK_YUKLEME_SAYI := 0;
         end;
	update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
	set
	OngorulenBonus =
		case
			when nvl(MP_Ciro_Donem_Toplam,0)=nvl(Ciro_Donem_Toplam,0) and nvl(MP_Ciro_Donem_Toplam,0)>0 then 0
			when nvl(BonusYukleme_SonHafta,0)>=3 and (nvl(Ciro_SonHafta,0)-nvl(MP_Ciro_SonHafta,0))*OngorulenYuzde-nvl(BonusYukleme_SonHafta,0)<=0 then 0
			when nvl(BonusYukleme_SonAy,0)>=3 and (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.1-nvl(BonusYukleme_SonAy,0)<=0 then 0
			when nvl(BonusYukleme_Son3Ay,0)>=3 and (nvl(Ciro_Son3Ay,0)-nvl(MP_Ciro_Son3Ay,0))*OngorulenYuzde*1.2-nvl(BonusYukleme_Son3Ay,0)<=0 then 0
			when nvl(BonusYukleme_SonHafta,0)-nvl(Ciro_SonHafta,0)*0.015>0 then 0  --- breakeven 0.06'dan 0.015'ye update edildi
			when nvl(BonusYukleme_SonAy,0)-nvl(Ciro_SonAy,0)*0.015>0 then 0 --- breakeven 0.06'dan 0.015'ye update edildi
			when nvl(BonusYukleme_Son3Ay,0)-nvl(Ciro_Son3Ay,0)*0.015>0 then 0 --- breakeven 0.06'dan 0.015'ye update edildi
			when 28.00/nvl(OngorulenYuklemeAdet,0.01)/2>nvl(SonBonusYuklemeUzerindenGecenSure,99) then 0
			when Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 0
			when Ciro_Ort_W*OngorulenYuzde/pAYLIK_YUKLEME_SAYI-nvl(BonusYukleme_SonHafta,0)>0 and (Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet)>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when Ciro_Ort_W*OngorulenYuzde-nvl(BonusYukleme_SonAy,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when Ciro_Ort_W*3*OngorulenYuzde-nvl(BonusYukleme_Son3Ay,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 0
			else (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet
		end,
	OngorulenBonusNeden =
		case
			when nvl(MP_Ciro_Donem_Toplam,0)=nvl(Ciro_Donem_Toplam,0) and nvl(MP_Ciro_Donem_Toplam,0)>0 then 'MP Musterisi'
			when nvl(BonusYukleme_SonHafta,0)>=3 and (nvl(Ciro_SonHafta,0)-nvl(MP_Ciro_SonHafta,0))*OngorulenYuzde-nvl(BonusYukleme_SonHafta,0)<=0 then 'Son hafta yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_SonAy,0)>=3 and (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.1-nvl(BonusYukleme_SonAy,0)<=0 then 'Son ay yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_Son3Ay,0)>=3 and (nvl(Ciro_Son3Ay,0)-nvl(MP_Ciro_Son3Ay,0))*OngorulenYuzde*1.2-nvl(BonusYukleme_Son3Ay,0)<=0 then 'Son 3 ay yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_SonHafta,0)-nvl(Ciro_SonHafta,0)*0.015>0 then 'Son hafta bonus maliyeti yuksek - 0 bonus'
			when nvl(BonusYukleme_SonAy,0)-nvl(Ciro_SonAy,0)*0.015>0 then 'Son ay bonus maliyeti yuksek - 0 bonus'
			when nvl(BonusYukleme_Son3Ay,0)-nvl(Ciro_Son3Ay,0)*0.015>0 then 'Son 3 ay bonus maliyeti yuksek - 0 bonus'
			when 28.00/nvl(OngorulenYuklemeAdet,0.01)/2>nvl(SonBonusYuklemeUzerindenGecenSure,99) then 'Olması gerekenden daha sık yükleme - 0 bonus'
			when Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 'Hakedis yok - 0 bonus'
			when Ciro_Ort_W*OngorulenYuzde/pAYLIK_YUKLEME_SAYI-nvl(BonusYukleme_SonHafta,0)>0 and (Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet)>0 then 'Hakedise gore yukleme'
			when Ciro_Ort_W*OngorulenYuzde-nvl(BonusYukleme_SonAy,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then 'Hakedise gore yukleme'
			when Ciro_Ort_W*3*OngorulenYuzde-nvl(BonusYukleme_Son3Ay,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then 'Hakedise gore yukleme'
			when (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 'Hakedis yok - 0 bonus'
			else 'Hakedise gore yukleme'
		end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_24 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
	--pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
         begin
         select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
         into pAYLIK_YUKLEME_SAYI
         from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
         ;
         exception when no_data_found or too_many_rows then
         pAYLIK_YUKLEME_SAYI := 0;
         end;

        update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
        set
        OngorulenBonus= case when NVL(Bonus_Donem_Toplam,0)-NVL(Ciro_Donem_Toplam,0)*0.015<=0 --- breakeven 0.06'dan 0.015'ye update edildi
        then
            case
            when (Ciro_Ort_W*0.6+Ciro_pMonth_Max*0.2+Ciro_Donem_Max*0.2)*OngorulenYuzde*1.00/pAYLIK_YUKLEME_SAYI>OngorulenBonus
            then (Ciro_Ort_W*0.6+Ciro_pMonth_Max*0.2+Ciro_Donem_Max*0.2)*OngorulenYuzde*1.00/pAYLIK_YUKLEME_SAYI
            else OngorulenBonus end
        else 0 end,
        OngorulenBonusNeden=case when NVL(Bonus_Donem_Toplam,0)-NVL(Ciro_Donem_Toplam,0)*0.015<=0 --- breakeven 0.06'dan 0.015'ye update edildi
        then 'Terk/Terke yakin musteriler icin yukleme'
        else 'Hakedis yok - 0 bonus' end
        where DuzenliAksiyonKitle in ('Mevcut Uye-Son donem oyun yok','Mevcut Uye-Inaktif')
        ;
        commit;
        end;
    end;
    procedure p_bc_update_25 is
    begin
        update /*+ parallel(4) */crm_DM.Bonus_Calisma_tmp
        set
            OngorulenBonus =
                case
                    when nvl(OngorulenBonus,0)<1 then 0
                    when nvl(OngorulenBonus,0)<=3 then 3
                    when nvl(OngorulenBonus,0)<=5 then 5
                    when OngorulenBonus<=30 then round(OngorulenBonus/5,0)*5
                    when OngorulenBonus<=250 then round(OngorulenBonus/10,0)*10
                    when OngorulenBonus<=500 then round(OngorulenBonus/20,0)*20
                    when OngorulenBonus<=1000 then round(OngorulenBonus/25,0)*25
                    else round(OngorulenBonus/50,0)*50 end,
                    OngorulenBonusNeden= case
                    when nvl(OngorulenBonus,0)<1 then 'Cok dusuk hakedise istinaden - 0 bonus'
                    else OngorulenBonusNeden
                end
        where OngorulenBonus>0
        ;
        commit;
    end;
    procedure p_bc_insert_01 is
    begin
      execute immediate 'TRUNCATE TABLE CRM_DM.BONUS_CALISMA_TEKLIF_TEMP';

        insert /*+ append nologging parallel(4) */ into crm_DM.Bonus_Calisma_Teklif_temp
        select /*+ parallel(4) */
        A.CUSTOMER_ID,
        (A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Ciro
        +A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Kaybedilen
        +A.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Kazanilan
        +NVL(A.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_Basketbol
        +NVL(A.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_3OranAltı_Kaybeden
        +NVL(A.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_5OranAltı_Kaybeden) as Bonus_Teklif,
        TRUNC(SYSDATE) as DWH_DATE
        from crm_DM.Bonus_Calisma_tmp A
        join crm_DM.Aramalar_Teklifler B on A.USERID=B.USERID and TRUNC(SYSDATE) between BaslangicTar and BitisTar
        ;
        commit;
    end;
    procedure p_bc_update_26 is
    begin
        MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_tmp A
        USING (select  CUSTOMER_ID, sum(Bonus_Teklif) AS  Bonus_Teklif
        FROM crm_DM.Bonus_Calisma_Teklif_temp
        GROUP BY CUSTOMER_ID
        ) B
        ON (A.CUSTOMER_ID=B.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE
        SET
        OngorulenBonus= case when TO_CHAR(SYSDATE,'DY')='Fri' then
                            case
                            when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC=0 and A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC=0 then 0
                            when Segment_Assigned='A0' and B.Bonus_Teklif between 3 and 20 then 20
                            when Segment_Assigned in ('A1','A2','A3','A7','A8') and B.Bonus_Teklif between 3 and 10 then 10
                            when B.Bonus_Teklif<1 then 0
                            when B.Bonus_Teklif<3 then 3
                            when B.Bonus_Teklif<=100 then ceil(B.Bonus_Teklif)
                            when B.Bonus_Teklif<=250 then ceil(B.Bonus_Teklif/5)*5
                            when B.Bonus_Teklif<=500 then ceil(B.Bonus_Teklif/10)*10 ---20
                            when B.Bonus_Teklif<=1000 then ceil(B.Bonus_Teklif/20)*20 ---25
                            else ceil(B.Bonus_Teklif/25)*25 ---50
                            end
        else (case when OngorulenBonus>500 then 500 else OngorulenBonus end) end, --- 20181121'de eklendi.
        OngorulenBonusNeden=case when TO_CHAR(SYSDATE,'DY')='Friday' then
                            case
                            when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC=0 and A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC=0 then 'Teklif-Bonus haric oyun yok - 0 bonus'
                            when Segment_Assigned='A0' and B.Bonus_Teklif between 3 and 20 then 'Teklif-A0 üye için minimum 20 TL bonus'
                            when Segment_Assigned in ('A1','A2','A3','A7','A8') and B.Bonus_Teklif between 3 and 10 then 'Teklif-Platin üye için minimum 10 TL bonus'
                            when B.Bonus_Teklif<1 then 'Teklif-Cok dusuk hakedis - 0 bonus'
                            else 'Teklif-Hakedise gore yukleme'
                            end
        else
        (case when OngorulenBonus>0 then 'Teklif-Cuma haric hakedis var' else 'Teklif-Cuma haric hakedis yok' end)
        end
        ;
        commit;
    end;
    procedure p_bc_update_27 is
    begin
       declare
            pMIN_Bonus_Ratio number(22,6):=0.005;
            pBASLANGIC_TAR   date:=TRUNC(SYSDATE);
        begin

            MERGE into CRM_DM.BONUS_CALISMA_tmp A
            USING (select userid from crm_DM.ARAMALAR_TEKLIFLER
                   where pBASLANGIC_TAR between BaslangicTar and BitisTar
                        and Teklif_Yuzde_Kaybedilen>0
                        and TO_CHAR(SYSDATE,'DY')='Fri') B
            ON (A.USERID=B.USERID)
            WHEN MATCHED THEN UPDATE
            set
            OngorulenBonus= case
            when
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)>OngorulenBonus
            THEN
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)
            else OngorulenBonus end,
            OngorulenBonusNeden= case
            when
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)>OngorulenBonus
            THEN 'Teklif-Kaybeden kuponlar icin duzeltme'
            else OngorulenBonusNeden end
            ;
            commit;
            end;
    end;
    procedure p_bc_update_28 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pMax_OngorulenYuzde_for_low_Bonus number(22,6):=0.0025;
                pBASLANGIC_TAR DATE:=TRUNC(SYSDATE);
        begin

                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
                 begin
                 select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
                 into pAYLIK_YUKLEME_SAYI
                 from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
                 ;
                 exception when no_data_found or too_many_rows then
                   pAYLIK_YUKLEME_SAYI := 0;
                end;

                MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_tmp A
                USING crm_DM.ARAMALAR_TEKLIFLER B
                ON (A.USERID=B.USERID)
                WHEN MATCHED THEN UPDATE
                set
                OngorulenBonus= case
                when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI-OngorulenBonus>0
                then
                    case
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=30
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/5,0)*5
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=250
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/10,0)*10
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=500
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/20,0)*20
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=1000
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/25,0)*25
                    else
                           round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/50,0)*50
                    end
                else OngorulenBonus end,
                OngorulenBonusNeden=case
                when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI-OngorulenBonus>0
                then 'Teklif-Dusuk bonuslar icin duzeltme'
                else OngorulenBonusNeden end
                where pBASLANGIC_TAR between BaslangicTar and BitisTar
                and (Teklif_Yuzde_Ciro>0 or Teklif_Yuzde_Kaybedilen>0 or Teklif_Yuzde_Kazanilan>0 or Teklif_Yuzde_Basketbol>0)
                and TO_CHAR(SYSDATE,'DY')='Fri'
                and NVL(OngorulenBonus,0)<250
                and (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))>=1000
                ;
                commit;
            end;
    end;
    procedure p_bc_update_29 is
    begin
       declare
                pBonusBalanceRatio number(22,6):=0.20; --- 2018-12-11'de değiştirildi. Eski değer: 0.3
            begin

            update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
            set
            OngorulenBonus= case
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 0
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and BONUS_BAKIYE>=OngorulenBonus*pBonusBalanceRatio then 0
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and NVL(Status_Desc,'XX')<>'Active' then 0
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle='Yeni Uye-Oyun Yok' then 3
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle in ('Geri Kazanılan-1','Geri Kazanılan-2') then (case when OngorulenBonus>500 then 500 else OngorulenBonus end)
            when YuzdeTeklifDiscard is null and NVL(BonusYukleme_SonAy,0)<10 and NVL(Alarm,10) in (0,1,2) then 0
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 then 50
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 then 20
            when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and OngorulenBonus>500 then 500
            when OngorulenBonus>500 and YuzdeTeklifDiscard is null then 500
            else OngorulenBonus end,
            OngorulenBonusNeden= case
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 'Fenomen/Yazar/VIP/Sorunlu/Calisan/Bonus kazanamaz nedeniyle - 0 bonus'
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and BONUS_BAKIYE>=OngorulenBonus*pBonusBalanceRatio then 'Bonus bakiyesi mevcut - 0 bonus'
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and NVL(Status_Desc,'XX')<>'Active' then 'Uye aktif degil - 0 bonus'
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle='Yeni Uye-Oyun Yok' then 'Duzenli Aksiyon Kitle Yuklemesi'
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle in ('Geri Kazanılan-1','Geri Kazanılan-2') then 'Duzenli Aksiyon Kitle Yuklemesi'
            when YuzdeTeklifDiscard is null and NVL(BonusYukleme_SonAy,0)<10 and NVL(Alarm,10) in (0,1,2) then 'Bonus almayan loyal oyuncu - 0 bonus'
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 and YuzdeTeklifDiscard is not null then 'Teklif-A0 üye için minimum 50 TL bonus'
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 then 'A0 üye için minimum 50 TL bonus'
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 and YuzdeTeklifDiscard is not null then 'Teklif-Platin üye için minimum 20 TL bonus'
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 then 'Platin üye için minimum 20 TL bonus'
            when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and OngorulenBonus>500 then 'Duzenli Aksiyon Kitlesi/Bonus Talepkar icin maksimum 500 TL yukleme'
            when OngorulenBonus>500 and YuzdeTeklifDiscard is null then 'Hakedise gore maksimum 500 TL yukleme'
            when OngorulenBonus>0 and DuzenliAksiyonKitle is not null and OngorulenBonusNeden is null then 'Duzenli Aksiyon Kitle Yuklemesi/'||DuzenliAksiyonKitle
            else OngorulenBonusNeden end
            ;
            commit;
            end;

    end;
    procedure p_bc_update_30 is
    begin
        declare
                pMIN_Bonus_Ratio number(22,6):=0.005;
        begin

        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=case
        when (case when BonusYukleme_SonHafta>0 and Ciro_SonHafta=0 then 99 when BonusYukleme_SonHafta=0 and Ciro_SonHafta=0 then 0 else BonusYukleme_SonHafta*1.0/Ciro_SonHafta end)>0.018 then 0
        when (case when BonusYukleme_SonAy>0 and Ciro_SonAy=0 then 99 when BonusYukleme_SonAy=0 and Ciro_SonAy=0 then 0 else BonusYukleme_SonAy*1.0/Ciro_SonAy end)>0.018 then 0
        when (case when BonusYukleme_Son3Ay>0 and Ciro_Son3Ay=0 then 99 when BonusYukleme_Son3Ay=0 and Ciro_Son3Ay=0 then 0 else BonusYukleme_Son3Ay*1.0/Ciro_Son3Ay end)>0.018 then 0
        else (Ciro_Ort_W*0.4+Ciro_pMonth_Max*0.3+Ciro_Donem_Max*0.3)*pMIN_Bonus_Ratio end
        ;
        commit;
        end;

    end;
    procedure p_bc_update_31 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=case
        when NVL(Bonus_CuRe_Available,0)<1 then 0
        when NVL(Bonus_CuRe_Available,0)<=3 then 3
        when NVL(Bonus_CuRe_Available,0)<=5 then 5
        when Bonus_CuRe_Available<=30 then round(Bonus_CuRe_Available/5,0)*5
        when Bonus_CuRe_Available<=250 then round(Bonus_CuRe_Available/10,0)*10
        when Bonus_CuRe_Available<=500 then round(Bonus_CuRe_Available/20,0)*20
        else 500 end
        ;
        commit;
    end;
    procedure p_bc_update_32 is
    begin
        declare
                pBonusBalanceRatio number(22,6):=0.20; --- 2018-12-11'de değiştirildi. Eski değer: 0.3
        begin

        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=case
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 0
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and BONUS_BAKIYE>=Bonus_CuRe_Available*pBonusBalanceRatio then 0
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and NVL(Status_Desc,'XX')<>'Active' then 0
        when Segment_Assigned='A0' and Bonus_CuRe_Available>=3 and Bonus_CuRe_Available<50 then 50
        when Segment_Assigned in ('A1','A2','A3','A7','A8') and Bonus_CuRe_Available>=3 and Bonus_CuRe_Available<20 then 20
        when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and Bonus_CuRe_Available>500 then 500
        when Bonus_CuRe_Available>500 and YuzdeTeklifDiscard is null then 500
        else Bonus_CuRe_Available end
        ;
        commit;
        end;

    end;
    procedure p_bc_update_33 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=OngorulenBonus
        where OngorulenBonus>0 and Bonus_CuRe_Available<OngorulenBonus
        ;
        commit;
    end;
    procedure p_bc_update_34 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        OngorulenBonusNeden=OngorulenBonusNeden||'/CuRe yukleme yapabilir'
        where Bonus_CuRe_Available>OngorulenBonus
        and OngorulenBonus=0
        ;
        commit;
    end;
    procedure p_bc_update_35 IS
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING
        (select LA.CUSTOMER_ID,
            sum(case when TRUNC(OPERATION_DATE)>=TRUNC(SYSDATE)-7 then AMOUNT else 0 end) as HP_YUKLEME_SonHafta,
            sum(case when TRUNC(OPERATION_DATE)>=ADD_MONTHS(TRUNC(SYSDATE),-1) then AMOUNT else 0 end) as HP_YUKLEME_SonAy
        from CRM_DM.BONUS_CALISMA_X BCX
        LEFT JOIN lbrdwh.LOYALTY_ACCOUNT_HISTORY LA
        ON BCX.CUSTOMER_ID = LA.CUSTOMER_ID
        WHERE TRUNC(OPERATION_DATE)>=ADD_MONTHS(TRUNC(SYSDATE),-1)
        AND LA.OPERATION_TYPE in (1,2,5)
        GROUP BY LA.CUSTOMER_ID
        ) MG
        ON (MG.CUSTOMER_ID=BC.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE SET
        HediyeKatalogPuan_Yukleme_SonAy=NVL(HP_YUKLEME_SonAy,0),
        HediyeKatalogPuan_Yukleme_SonHafta=NVL(HP_YUKLEME_SonHafta,0)
        ;
        commit;
    end;
    procedure p_bc_update_36 is
    begin
        declare
                pRETURN NUMBER(22,6):=0.02;
                pMIN_Ciro_LN NUMBER(22,6):=ln(3);
                pMAX_Ciro_LN NUMBER(22,6):=ln(100000);
                pMAX_Puan_Yuzde NUMBER(22,6);
                pMIN_Puan_Yuzde NUMBER(22,6);
                pSlope NUMBER(22,6);
        begin
                pMAX_Puan_Yuzde:=pRETURN*2;
                PMIN_Puan_Yuzde:=pRETURN*1;
        begin
                pSlope:=(pMAX_Puan_Yuzde-pMIN_Puan_Yuzde)/(pMAX_Ciro_LN-pMIN_Ciro_LN);
        end;
                update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
                set
                HediyeKatalogPuan_Oran=case
                            when (pMAX_Puan_Yuzde-pSlope*(LN(case when Ciro_Ort_W<3 then 3 else Ciro_Ort_W end)-pMIN_Ciro_LN))<pMIN_Puan_Yuzde then pMIN_Puan_Yuzde
                            else (pMAX_Puan_Yuzde-pSlope*(LN(case when Ciro_Ort_W<3 then 3 else Ciro_Ort_W end)-pMIN_Ciro_LN)) end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_37 is
    begin
        declare
                pRETURN NUMBER(22,6):=0.02;
                pdeviation NUMBER(22,6):=0.5;
        begin
        update  /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
        set
        HediyeKatalogPuan= case
        when NVL(Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)>=100 and TO_CHAR(SYSDATE,'DY') != 'Fri' and NVL(Bonus_Oran_W,0)<=0.012
        then
            case
            when (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta<1000 then 1000
            when (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta>500000 then 500000
            else (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta
            end
        else 0 end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_38 is
    begin
        update  /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
        set
        HediyeKatalogPuan=0
        where
        (nvl(DigerDiscard,9) in (1,3) or nvl(Status_Desc,'XX')!='Active')
        ;
        commit;
    end;
    procedure p_bc_update_39 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select * from CRM_DM.Aramalar_Teklifler
               where TRUNC(SYSDATE) between BaslangicTar and BitisTar and Teklif_Hediye_Katalog_Carpan>0 ) ART
        ON (BC.USERID = ART.USERID)
        WHEN MATCHED THEN UPDATE SET
			HediyeKatalogPuan=case when TO_CHAR(SYSDATE,'DY')='Fri' and NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)>0
                        then
                            case
                            when NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)*ART.Teklif_Hediye_Katalog_Carpan<2000 then 2000
                            else NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)*ART.Teklif_Hediye_Katalog_Carpan
                            end
                        else 0 end

        ;
        commit;
    end;
    procedure p_bc_update_40 is
    begin
        update /*+ parallel(4) */ crm_DM.Bonus_Calisma_tmp
        set
        HediyeKatalogPuan=case when HediyeKatalogPuan<500 then ceil(HediyeKatalogPuan/25)*25
                               when HediyeKatalogPuan<1000 then ceil(HediyeKatalogPuan/50)*50
                               when HediyeKatalogPuan<5000 then ceil(HediyeKatalogPuan/100)*100
                               when HediyeKatalogPuan<20000 then ceil(HediyeKatalogPuan/250)*250
                               when HediyeKatalogPuan<50000 then ceil(HediyeKatalogPuan/500)*500
                               when HediyeKatalogPuan<100000 then ceil(HediyeKatalogPuan/1000)*1000
                               when HediyeKatalogPuan<500000 then ceil(HediyeKatalogPuan/5000)*5000
                               when HediyeKatalogPuan<1000000 then ceil(HediyeKatalogPuan/10000)*10000
                               else ceil(HediyeKatalogPuan/25000)*25000 end
        ;
        commit;
    end;
    procedure p_bc_update_41 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING CRM_DM.YuklemeDisi YD
        ON (BC.USERID = YD.USERID)
        WHEN MATCHED THEN UPDATE SET
                        HediyeKatalogPuan=0
        WHERE
        (
        (NEDEN in ('VIPX','Vefat')) --- VIPX ya da vefat ise kesinlikle yüklenmeyecek
            OR
            (NEDEN in ('Sorunlu') and
             exists (select 1 from crm_DM.Aramalar_Teklifler ART where BC.USERID=ART.USERID and TRUNC(SYSDATE) between BaslangicTar and BitisTar and ART.Teklif_Hediye_Katalog_Carpan=0)) --- Sorunlu ve Tekliflerde HK puan yok ise verme
        )
        ;
        commit;
    end;
    procedure p_bc_update_42 is
    begin
        MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_tmp BC
        USING CRM_DM.HP_Exclude HPE
        ON (BC.USERID = HPE.USERID)
        WHEN MATCHED THEN UPDATE
        SET
        HediyeKatalogPuan=0
        ;
        commit;
    end;
   procedure p_bc_update_999 is
    begin
        execute immediate 'ALTER TABLE  crm_dm.BONUS_CALISMA
					  EXCHANGE PARTITION ALLVALUE
					  WITH TABLE crm_dm.BONUS_CALISMA_TMP
					  WITHOUT VALIDATION
					  UPDATE GLOBAL INDEXES';
    end;

end ;
/

create or replace package        pkg_update_bonus_calisma_tmp_test is
    procedure p_main;
    procedure p_bc_update_01;
    procedure p_bc_update_02;
    procedure p_bc_update_03;
    procedure p_bc_update_04;
    procedure p_bc_update_05;
    procedure p_bc_update_06;
    procedure p_bc_update_07;
    procedure p_bc_update_08;
    procedure p_bc_update_09;
    procedure p_bc_update_10;
    procedure p_bc_update_11;
    procedure p_bc_update_12;
    procedure p_bc_update_13;
    procedure p_bc_update_14;
    procedure p_bc_update_15;
    procedure p_bc_update_16;
    procedure p_bc_update_17;
    procedure p_bc_update_18;
    procedure p_bc_update_19;
    procedure p_bc_update_20;
    procedure p_bc_update_21;
    procedure p_bc_update_22;
    procedure p_bc_update_23;
    procedure p_bc_update_24;
    procedure p_bc_update_25;
    procedure p_bc_insert_01;
    procedure p_bc_update_26;
    procedure p_bc_update_27;
    procedure p_bc_update_28;
    procedure p_bc_update_29;
    procedure p_bc_update_30;
    procedure p_bc_update_31;
    procedure p_bc_update_32;
    procedure p_bc_update_33;
    procedure p_bc_update_34;
    procedure p_bc_update_35;
    procedure p_bc_update_36;
    procedure p_bc_update_37;
    procedure p_bc_update_38;
    procedure p_bc_update_39;
    procedure p_bc_update_40;
    procedure p_bc_update_41;
    procedure p_bc_update_42;
end pkg_update_bonus_calisma_tmp_test;
/

create or replace package body        pkg_update_bonus_calisma_tmp_test is
    procedure p_main is
    begin
        execute immediate 'alter session enable parallel dml';
        p_bc_update_01;
        p_bc_update_02;
        p_bc_update_03;
        p_bc_update_04;
        p_bc_update_05;
        p_bc_update_06;
        p_bc_update_07;
        p_bc_update_08;
        p_bc_update_09;
        p_bc_update_10;
        p_bc_update_11;
        p_bc_update_12;
        p_bc_update_13;
        p_bc_update_14;
        p_bc_update_15;
        p_bc_update_16;
        p_bc_update_17;
        p_bc_update_18;
        p_bc_update_19;
        p_bc_update_20;
        p_bc_update_21;
        p_bc_update_22;
        p_bc_update_23;
        p_bc_update_24;
        p_bc_update_25;
        p_bc_insert_01;
        p_bc_update_26;
        p_bc_update_27;
        p_bc_update_28;
        p_bc_update_29;
        p_bc_update_30;
        p_bc_update_31;
        p_bc_update_32;
        p_bc_update_33;
        p_bc_update_34;
        p_bc_update_35;
        p_bc_update_36;
        p_bc_update_37;
        p_bc_update_38;
        p_bc_update_39;
        p_bc_update_40;
        p_bc_update_41;
        p_bc_update_42;
    END p_main;


-----------------------------------------------------------------------------------------------------------------------
    procedure p_bc_update_01 is
    begin
        merge into crm_dm.Bonus_Calisma_tmp A
        using(
            select
                B.CUSTOMER_ID,
                IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
                IKDD.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
                IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
                IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
                NVL(IKDD.Iddaa_Ciro_SonHafta,0) + NVL(SKDD.STO_Ciro_SonHafta,0) AS Iddaa_STO_Ciro_SonHafta,
                NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta,
                NVL(IKDD.KazananKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta,0) AS Iddaa_STO_Kazanan_SonHafta,
                NVL(IKDD.KaybedenKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta,0) AS Iddaa_STO_Kaybeden_SonHafta,
                NVL(IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
                NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
                NVL(IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
                NVL(IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
                IKDD.KaybedenKuponTutar_SonHafta,
                IKDD.KaybedenKuponTutar_SonAy,
                IKDD.KaybedenKuponTutar_Son3Ay,
                IKDD.KaybedenKuponTutar_Son6Ay,
                IKDD.KaybedenKuponTutar_Son12Ay,
                IKDD.KazananKuponTutar_SonHafta,
                IKDD.KazananKuponTutar_SonAy,
                IKDD.KazananKuponTutar_Son3Ay,
                IKDD.KazananKuponTutar_Son6Ay,
                IKDD.KazananKuponTutar_Son12Ay
            from crm_DM.Bonus_Calisma_tmp B
            left join CRM_DM.DM_IDDAA_KUPONDURUM_DAILY IKDD on B.CUSTOMER_ID=IKDD.CUSTOMER_ID
            left join CRM_DM.DM_STO_KUPONDURUM_DAILY SKDD on B.CUSTOMER_ID=SKDD.CUSTOMER_ID
        ) S
          ON (A.CUSTOMER_ID = S.CUSTOMER_ID)
        when matched then update
        set
            A.Iddaa_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
            A.BASKETBALL_CIRO_SonHafta_BONUS_HARIC = S.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
            A.KaybedenKuponTutar_SonHafta_BONUS_HARIC = S.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
            A.KazananKuponTutar_SonHafta_BONUS_HARIC = S.KazananKuponTutar_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Ciro_SonHafta = S.Iddaa_STO_Ciro_SonHafta,
            A.Iddaa_STO_Degerlendirilmemis_SonHafta = S.Iddaa_STO_Degerlendirilmemis_SonHafta,
            A.Iddaa_STO_Kazanan_SonHafta = S.Iddaa_STO_Kazanan_SonHafta,
            A.Iddaa_STO_Kaybeden_SonHafta = S.Iddaa_STO_Kaybeden_SonHafta,
            A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC = S.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
            A.KaybedenKuponTutar_SonHafta = S.KaybedenKuponTutar_SonHafta,
            A.KaybedenKuponTutar_SonAy = S.KaybedenKuponTutar_SonAy,
            A.KaybedenKuponTutar_Son3Ay = S.KaybedenKuponTutar_Son3Ay,
            A.KaybedenKuponTutar_Son6Ay = S.KaybedenKuponTutar_Son6Ay,
            A.KaybedenKuponTutar_Son12Ay = S.KaybedenKuponTutar_Son12Ay,
            A.KazananKuponTutar_SonHafta = S.KazananKuponTutar_SonHafta,
            A.KazananKuponTutar_SonAy = S.KazananKuponTutar_SonAy,
            A.KazananKuponTutar_Son3Ay = S.KazananKuponTutar_Son3Ay,
            A.KazananKuponTutar_Son6Ay = S.KazananKuponTutar_Son6Ay,
            A.KazananKuponTutar_Son12Ay = S.KazananKuponTutar_Son12Ay
        ;
        commit;
    end;
-----------------------------------------------------------------------------------------------------------------------------------------------
    procedure p_bc_update_02 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select customer_id from lbrdwh.tribun_users WHERE  IS_AUTHOR=1) TR
        ON (BC.CUSTOMER_id = TR.CUSTOMER_id)
        WHEN MATCHED THEN UPDATE SET BC.TRIBUNDISCARD=1
        ;
        commit;
    end;
    procedure p_bc_update_03 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select customer_id from CRM_DM.tribun_dashboard_vip_list WHERE STATUS=1) TDVL
        ON (BC.CUSTOMER_id = TDVL.CUSTOMER_id)
        WHEN MATCHED THEN UPDATE SET BC.TRIBUNDISCARD=1
        ;
        commit;
    end;
    procedure p_bc_update_04 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select DISTINCT userid from CRM_DM.Aramalar_Teklifler  WHERE TRUNC(SYSDATE) BETWEEN BASLANGICTAR AND BITISTAR) ART
        ON (BC.USERID = ART.USERID)
        WHEN MATCHED THEN UPDATE SET BC.YuzdeTeklifDiscard=1

        ;
        commit;
    end;
    procedure p_bc_update_05 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING CRM_DM.YuklemeDisi YD
        ON (BC.USERID = YD.USERID)
        WHEN MATCHED THEN UPDATE SET BC.DigerDiscard=1
        ;
        commit;
    end;
    procedure p_bc_update_06 is
    begin
        null;
    end;
    procedure p_bc_update_07 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING lbrdwh.customer_restricted_bonus CRB
        ON (BC.CUSTOMER_ID = CRB.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE SET BC.DigerDiscard=3
        ;
        commit;
    end;
    procedure p_bc_update_08 is
    begin
        update /*+ parallel(4) */ crm_DM.Bonus_Calisma_tmp
                    set Para_Bonus_Kontrol=case
                    when NVL(Ciro_Son12Ay,0)=0 then -10
                    when NVL(SonParaTransferiUzerindenGecenSure,400)=400 then -9
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)>0 then -8
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)>0 then -7
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<10 then -6
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<10 then -5
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<30 then -4
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)<=0 then -3
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<30 then -2
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)<=0 then -1
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)<=0.05 then
                        case
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=10 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 0
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 1
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 5
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=30 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 1
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 7
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 8
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=60 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 6
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 8
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 9
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=90 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 7
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 9
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 10
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)>90 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 6
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 8
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 9
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 10
                            end
                        end
                    else 99 end
                    ;
                    commit;

    end;
    procedure p_bc_update_09 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        OyunGunRatio_SonHafta=case when UyelikTarihi > TRUNC(SYSDATE)-7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_SonHafta,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_SonHafta,0)*1.0/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_SonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_SonAy,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_SonAy,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son3Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son3Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son6Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son6Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son12Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son12Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_SonHafta=case when UyelikTarihi > TRUNC(SYSDATE)-7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_SonHafta,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_SonHafta,0)*1.0/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_SonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_SonAy,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_SonAy,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son3Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son3Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son6Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son6Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son12Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son12Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end
        ;
        commit;
    end;
    procedure p_bc_update_10 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        PayoutRatio_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then null else NVL(Payout_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        PayoutRatio_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then null else NVL(Payout_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        PayoutRatio_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then null else NVL(Payout_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        PayoutRatio_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then null else NVL(Payout_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        PayoutRatio_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then null else NVL(Payout_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end
        ;
        commit;
    end;
    procedure p_bc_update_11 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        BASKETBALL_RATIO_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then null else NVL(BASKETBALL_CIRO_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        BASKETBALL_RATIO_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then null else NVL(BASKETBALL_CIRO_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        BASKETBALL_RATIO_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        BASKETBALL_RATIO_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        BASKETBALL_RATIO_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Iddaa_Ciro_Pay_SonHafta=case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_SonHafta,0)/NVL(Ciro_SonHafta,0) end,
        Iddaa_Ciro_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_SonAy,0)/NVL(Ciro_SonAy,0) end,
        Iddaa_Ciro_Pay_Son3Ay=case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son3Ay,0)/NVL(Ciro_Son3Ay,0) end,
        Iddaa_Ciro_Pay_Son6Ay=case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son6Ay,0)/NVL(Ciro_Son6Ay,0) end,
        Iddaa_Ciro_Pay_Son12Ay=case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son12Ay,0)/NVL(Ciro_Son12Ay,0) end,
        MP_Ciro_Pay_SonHafta=case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(MP_Ciro_SonHafta,0)/NVL(Ciro_SonHafta,0) end,
        MP_Ciro_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(MP_Ciro_SonAy,0)/NVL(Ciro_SonAy,0) end,
        MP_Ciro_Pay_Son3Ay=case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(MP_Ciro_Son3Ay,0)/NVL(Ciro_Son3Ay,0) end,
        MP_Ciro_Pay_Son6Ay=case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(MP_Ciro_Son6Ay,0)/NVL(Ciro_Son6Ay,0) end,
        MP_Ciro_Pay_Son12Ay=case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(MP_Ciro_Son12Ay,0)/NVL(Ciro_Son12Ay,0) end
        ;
        commit;
    end;
    procedure p_bc_update_12 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        Iddaa_Ciro_3OranAltı_Pay_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        Iddaa_Ciro_3OranAltı_Pay_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        Iddaa_Ciro_5OranAltı_Pay_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Haftaici_Ogle_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(Haftaici_Ogle_SonAy,0)/NVL(Ciro_SonAy,0) end
        ;
        commit;
    end;
    procedure p_bc_update_13 is
    begin
        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        Ciro_pMonth_sonHafta=case when UyelikTarihi > TRUNC(SYSDATE) - 7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(Ciro_SonHafta,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_SonHafta,0)*30.00/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_sonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(Ciro_SonAy,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_SonAy,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(Ciro_Son3Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son3Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(Ciro_Son6Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son6Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(Ciro_Son12Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son12Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end
        ;
        commit;
    end;
    procedure p_bc_update_14 is
    begin
        declare
                pW1 number(22,6):=0.10;
                pW2 number(22,6):=0.40;
                pW3 number(22,6):=0.30;
                pW4 number(22,6):=0.15;
                pW5 number(22,6):=0.05;

        begin

            update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
            set
            Ciro_pMonth_Max=case
            when
                (case
                when Ciro_pMonth_sonHafta>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonHafta>=Ciro_pMonth_sonAy and Ciro_pMonth_sonHafta>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son12Ay then (Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)
                when Ciro_pMonth_sonAy>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonAy>=Ciro_pMonth_sonAy and Ciro_pMonth_sonAy>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son12Ay then Ciro_pMonth_sonAy
                when Ciro_pMonth_son3Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son3Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son3Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son3Ay
                when Ciro_pMonth_son6Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son6Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son6Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son6Ay
                when Ciro_pMonth_son12Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son12Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son12Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son12Ay
                else 0 end)>Ciro_Donem_Max then Ciro_Donem_Max
            else (case
                when Ciro_pMonth_sonHafta>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonHafta>=Ciro_pMonth_sonAy and Ciro_pMonth_sonHafta>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son12Ay then (Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)
                when Ciro_pMonth_sonAy>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonAy>=Ciro_pMonth_sonAy and Ciro_pMonth_sonAy>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son12Ay then Ciro_pMonth_sonAy
                when Ciro_pMonth_son3Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son3Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son3Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son3Ay
                when Ciro_pMonth_son6Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son6Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son6Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son6Ay
                when Ciro_pMonth_son12Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son12Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son12Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son12Ay
                else 0 end)
            end,
            Login_Ratio_Max=case
            when LoginGunRatio_sonHafta>=LoginGunRatio_sonHafta and LoginGunRatio_sonHafta>=LoginGunRatio_sonAy and LoginGunRatio_sonHafta>=LoginGunRatio_son3Ay and LoginGunRatio_sonHafta>=LoginGunRatio_son6Ay and LoginGunRatio_sonHafta>=LoginGunRatio_son12Ay then (LoginGunRatio_sonHafta*0.1+LoginGunRatio_sonAy*0.9)
            when LoginGunRatio_sonAy>=LoginGunRatio_sonHafta and LoginGunRatio_sonAy>=LoginGunRatio_sonAy and LoginGunRatio_sonAy>=LoginGunRatio_son3Ay and LoginGunRatio_sonAy>=LoginGunRatio_son6Ay and LoginGunRatio_sonAy>=LoginGunRatio_son12Ay then LoginGunRatio_sonAy
            when LoginGunRatio_son3Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son3Ay>=LoginGunRatio_sonAy and LoginGunRatio_son3Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son3Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son3Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son3Ay
            when LoginGunRatio_son6Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son6Ay>=LoginGunRatio_sonAy and LoginGunRatio_son6Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son6Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son6Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son6Ay
            when LoginGunRatio_son12Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son12Ay>=LoginGunRatio_sonAy and LoginGunRatio_son12Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son12Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son12Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son12Ay
            else 0 end,
            Oyun_Ratio_Max=case
            when OyunGunRatio_sonHafta>=OyunGunRatio_sonHafta and OyunGunRatio_sonHafta>=OyunGunRatio_sonAy and OyunGunRatio_sonHafta>=OyunGunRatio_son3Ay and OyunGunRatio_sonHafta>=OyunGunRatio_son6Ay and OyunGunRatio_sonHafta>=OyunGunRatio_son12Ay then (OyunGunRatio_sonHafta*0.1+OyunGunRatio_sonAy*0.9)
            when OyunGunRatio_sonAy>=OyunGunRatio_sonHafta and OyunGunRatio_sonAy>=OyunGunRatio_sonAy and OyunGunRatio_sonAy>=OyunGunRatio_son3Ay and OyunGunRatio_sonAy>=OyunGunRatio_son6Ay and OyunGunRatio_sonAy>=OyunGunRatio_son12Ay then OyunGunRatio_sonAy
            when OyunGunRatio_son3Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son3Ay>=OyunGunRatio_sonAy and OyunGunRatio_son3Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son3Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son3Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son3Ay
            when OyunGunRatio_son6Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son6Ay>=OyunGunRatio_sonAy and OyunGunRatio_son6Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son6Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son6Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son6Ay
            when OyunGunRatio_son12Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son12Ay>=OyunGunRatio_sonAy and OyunGunRatio_son12Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son12Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son12Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son12Ay
            else 0 end,
            Ciro_Ort_W=(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)*pW1+Ciro_pMonth_SonAy*pW2+Ciro_pMonth_Son3Ay*pW3+Ciro_pMonth_Son6Ay*pW4+Ciro_pMonth_Son12Ay*pW5,
            LoginGun_Ort_W=LoginGunRatio_SonHafta*pW1+LoginGunRatio_SonAy*pW2+LoginGunRatio_Son3Ay*pW3+LoginGunRatio_Son6Ay*pW4+LoginGunRatio_Son12Ay*pW5,
            OyunGun_Ort_W=OyunGunRatio_SonHafta*pW1+OyunGunRatio_SonAy*pW2+OyunGunRatio_Son3Ay*pW3+OyunGunRatio_Son6Ay*pW4+OyunGunRatio_Son12Ay*pW5,
            Bonus_Oran_W=(case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(BonusYukleme_SonHafta,0)*pW1/NVL(Ciro_SonHafta,0) end)+
            (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)*pW2/NVL(Ciro_SonAy,0) end)+
            (case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(BonusYukleme_Son3Ay,0)*pW3/NVL(Ciro_Son3Ay,0) end)+
            (case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(BonusYukleme_Son6Ay,0)*pW4/NVL(Ciro_Son6Ay,0) end)+
            (case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(BonusYukleme_Son12Ay,0)*pW5/NVL(Ciro_Son12Ay,0) end),
            Ticket_Ort_W=(case when NVL(OyunGunAdet_SonHafta,0)=0 then 0 else NVL(Ciro_SonHafta,0)*pW1/NVL(OyunGunAdet_SonHafta,0) end)+
            (case when NVL(OyunGunAdet_SonAy,0)=0 then 0 else NVL(Ciro_SonAy,0)*pW2/NVL(OyunGunAdet_SonAy,0) end)+
            (case when NVL(OyunGunAdet_Son3Ay,0)=0 then 0 else NVL(Ciro_Son3Ay,0)*pW3/NVL(OyunGunAdet_Son3Ay,0) end)+
            (case when NVL(OyunGunAdet_Son6Ay,0)=0 then 0 else NVL(Ciro_Son6Ay,0)*pW4/NVL(OyunGunAdet_Son6Ay,0) end)+
            (case when NVL(OyunGunAdet_Son12Ay,0)=0 then 0 else NVL(Ciro_Son12Ay,0)*pW5/NVL(OyunGunAdet_Son12Ay,0) end)
            ;
         end;
         commit;
    end;
    procedure p_bc_update_15 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
            set
            Log_Ciro_Ort_W=case when NVL(Ciro_Ort_W,0)<1 then 0 else ln(Ciro_Ort_W) end,
            Log_Ticket_Ort_W=case when NVL(Ticket_Ort_W,0)<1 then 0 else ln(Ticket_Ort_W) end,
            Ciro_Score1=case when NVL(Ciro_pMonth_Max,0)<3 then 0
                            when Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9<1 then 0
                 else
                    (case when ln(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)/ln(Ciro_pMonth_Max)>1 then 1 else ln(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)/ln(Ciro_pMonth_Max) end)
                 end,
            Ciro_Score2=case when NVL(Ciro_pMonth_Max,0)<3 then 0
                 when Ciro_pMonth_sonAy<1 then 0
                 else
                    (case when ln(Ciro_pMonth_sonAy)/ln(Ciro_pMonth_Max)>1 then 1 else ln(Ciro_pMonth_sonAy)/ln(Ciro_pMonth_Max) end)
                 end
                 ;
                 commit;
    end;
    procedure p_bc_update_16 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Login_Score=case when SonLoginUzerindenGecenSure is null then 0
                         when NVL(Login_Ratio_Max,0)<0.03 then 0
                         else power((1-(case when NVL(Login_Ratio_Max,0)>0.95 then 0.95 else NVL(Login_Ratio_Max,0) end)),(SonLoginUzerindenGecenSure-1)) end,
        Game_Score=case when SonOyunUzerindenGecenSure is null then 0
                         when NVL(Ciro_Score1,0)=0 then 0
                         when NVL(Ciro_Score2,0)=0 then 0
                         when NVL(Oyun_Ratio_Max,0)<0.03 then 0
                         else power((1-(case when NVL(Oyun_Ratio_Max,0)>0.95 then 0.95 else NVL(Oyun_Ratio_Max,0) end)),(SonOyunUzerindenGecenSure-1)) end
                        ;
                        commit;
    end;
    procedure p_bc_update_17 is
    begin
        declare
                pParam1_CiroSonHafta number(22,6):=0.4;
                pParam2_CiroSonAy    number(22,6):=0.6;
                pParam3_Login	     number(22,6):=0.2;
                pParam4_SonOyun      number(22,6):=0.8;
        begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Alarm_Score=power(Ciro_Score1*pParam1_CiroSonHafta+Ciro_Score2*pParam2_CiroSonAy-1,2)+power(Login_Score*pParam3_Login+Game_Score*pParam4_SonOyun-1,2)
        ;
        end;
        commit;
    end;
    procedure p_bc_update_18 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Alarm=
        case
        when Alarm_Score> 1.1 then 10
        when Alarm_Score> 0.95 then 9
        when Alarm_Score> 0.85 then 8
        when Alarm_Score> 0.75 then 7
        when Alarm_Score> 0.65 then 6
        when Alarm_Score> 0.55 then 5
        when Alarm_Score> 0.45 then 4
        when Alarm_Score> 0.35 then 3
        when Alarm_Score> 0.25 then 2
        when Alarm_Score> 0.15 then 1
        else 0 end
        ;
        commit;
    end;
    procedure p_bc_update_19 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Alarm=10
        where Alarm is null
        ;
        commit;
    end;
    procedure p_bc_update_20 is
    begin
        MERGE  /*+ parallel(4) */into CRM_DM.BONUS_CALISMA_tmp BC
    USING
    (select /*+ parallel(4) */ CN.CUSTOMER_ID,RF.USERID,CN.BIRTHDATE,
    TO_DATE(to_char(sysdate,'yyyy') || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth2,
    TO_DATE(to_char(sysdate,'yyyy')-1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth3,
    TO_DATE(to_char(sysdate,'yyyy')+1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth4,
    TO_DATE(to_char(sysdate,'yyyy') || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar2,
    TO_DATE(to_char(sysdate,'yyyy')-1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar3,
    TO_DATE(to_char(sysdate,'yyyy')+1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar4

    from lbrdwh.customer_new2 CN
    INNER JOIN CRM_DM.BONUS_CALISMA_tmp BC
    ON CN.CUSTOMER_ID = BC.CUSTOMER_ID
    LEFT JOIN crm_DM.RakipFenomen RF
    ON BC.USERID = RF.USERID) MG
    ON (MG.CUSTOMER_ID=BC.CUSTOMER_ID)
    WHEN MATCHED THEN UPDATE SET
    DuzenliAksiyonKitle=
    case
    when UyelikSuresi between 2 and 8 and NVL(Ciro_Donem_Toplam,0)=0 and NVL(BonusYukleme_SonAy,0)=0 then 'Yeni Uye-Oyun Yok'
    when UyelikSuresi<=30 and SonOyunUzerindenGecenSure between 4 and 10 and SonPayoutUzerindenGecenSure is null and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Payout Yok'
    when UyelikSuresi between 10 and 16 and NVL(Ciro_SonAy,0)>=50 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Motivasyon'
    when UyelikSuresi between 24 and 30 and NVL(Ciro_SonAy,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Motivasyon'
    when KaybedenKuponTutar_SonHafta_BONUS_HARIC>=100 and NVL(PayoutRatio_SonHafta,0)<0.25 and NVL(Alarm,10)>2 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(PayoutRatio_SonAy,0)<0.40 then 'Kaybedenler Kulubu'
    when UyelikSuresi>90 and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)=NVL(Ciro_Son3Ay,0)-NVL(BonusKullanım_Son3Ay,0)
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Geri Kazanılan-1'
    when UyelikSuresi>90 and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)=NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0)
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Geri Kazanılan-2'
    when UyelikSuresi>30 and NVL(Ciro_SonAy,0)>=100 and SonOyunUzerindenGecenSure between 7 and 13 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(Alarm,10)>4 then 'Mevcut Uye-Motivasyon'
    when UyelikSuresi>30 and NVL(TribunTakipciSayı,0)>=250 and NVL(Ciro_SonAy,0)>=250 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)*1.0/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Tribun-Motivasyon'
    when NVL(MG.USERID,'Yok')<>'Yok' and NVL(BonusYukleme_SonHafta,0)<=3 then 'Tribun-Motivasyon'
    when ActivityStatus='AKTIF' and SonOyunUzerindenGecenSure>15 and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Alarm,10)>4 then 'Mevcut Uye-Son donem oyun yok'
    when ActivityStatus<>'AKTIF' and SonOyunUzerindenGecenSure>30 and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Alarm,10)>4 then 'Mevcut Uye-Inaktif'
    when ( (trunc(sysdate) - birth2 between -3 and 3)/*(datediff(day, YMD(year(getdate()), month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
            or (trunc(sysdate) - birth3 between -3 and 3)/*(datediff(day, YMD(year(getdate())-1, month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
            or (trunc(sysdate) - birth4 between -3 and 3)/*(datediff(day, YMD(year(getdate())+1, month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
               )
         and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Ciro_SonAy,0)>=100 and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01 then 'Mevcut Uye-Dogumgunu'
    when UyelikSuresi>30
         and ((trunc(sysdate) - uyeliktar2 between -3 and 3)/*(datediff(day, YMD(year(getdate()), month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               or (trunc(sysdate) - uyeliktar3 between -3 and 3)/*(datediff(day, YMD(year(getdate())-1, month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               or (trunc(sysdate) - uyeliktar4 between -3 and 3)/*(datediff(day, YMD(year(getdate())+1, month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               )
         and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Ciro_SonAy,0)>=100 and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01 then 'Mevcut Uye-Uyelik yildonumu'
    /*
    when UyelikSuresi>30 and isnull(Ciro_SonAy,0)>=100 and SonOyunUzerindenGecenSure between 7 and 13 and isnull(SonPayoutUzerindenGecenSure,999)>SonOyunUzerindenGecenSure+10
         and (case when isnull(Ciro_SonAy,0)=0 then 0 else isnull(BonusYukleme_SonAy,0)/isnull(Ciro_SonAy,0) end)<=0.03
         and isnull(BAKIYE,0)+isnull(BONUS_BAKIYE,0)<3 and isnull(PayoutRatio_SonAy,0)<0.40 then 'Mevcut Uye-Payout Dusuk'
    */
    else null end
    WHERE
    BC.TribunDiscard is null
    and BC.YuzdeTeklifDiscard is null
    and NVL(BC.DigerDiscard,9) not in (1,3) ---Sorunlular ve restiricted olanlar
    and (NVL(BC.Ciro_Donem_Toplam,0)>0 or (BC.UyelikSuresi between 2 and 8 and NVL(BC.Ciro_Donem_Toplam,0)=0 ))
    ;
    commit;
    end;
    procedure p_bc_update_21 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
                pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
        pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
        pSONGUN :=trunc(last_day(pBUGUN));
         begin
         select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
         into pAYLIK_YUKLEME_SAYI
         from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
         ;
         exception when no_data_found or too_many_rows then
           pAYLIK_YUKLEME_SAYI := 0;
         end;
        merge  /*+ parallel(4) */ into crm_dm.Bonus_Calisma_tmp A
            using crm_dm.Bonus_Yukleme_Kural B
                on (nvl(A.Ciro_Ort_W,0)>=B.Ciro_Alt and nvl(A.Ciro_Ort_W,0)<B.Ciro_Ust)
            when matched then update set
                OngorulenYuklemeAdet =
                    case when nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio>pAYLIK_YUKLEME_SAYI then round(nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio,0)
                         when nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio>=B.YuklemeAdet then round(nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio,0)
                         else B.YuklemeAdet
                    end
            ;
            end;
        commit;

    end;
    procedure p_bc_update_22 is
    begin
        declare
                    pYuklemeRatio 		    number(22,6):=0.7;
                    pAlarmBasedBonusRatio 	number(22,6):=0.002;
        begin
            merge /*+ parallel(4) */ into crm_dm.Bonus_Calisma_tmp A
            using (select /*+ parallel(4) */ a.*, B.Yuzde, c.yuzde_alt,c.yuzde_ust  ----hangi kolonlar gerekiyorsa onları seç !!!!
                   from crm_dm.Bonus_Calisma_tmp A, crm_dm.Bonus_Yukleme_Kural B, crm_dm.Bonus_Yukleme_Kural_2 C
                   where nvl(A.Ciro_Ort_W,0)>=B.Ciro_Alt and nvl(A.Ciro_Ort_W,0)<B.Ciro_Ust
                     and A.Segment_Assigned=C.Segment )s
            on (a.customer_id = s.customer_id ) ----- burada kolon adına bakamadım, musteri_id?musteri_no ?
            when matched then update set
            OngorulenYuzde= case when nvl(BonusTalepkar,0)=1 and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.01 then 0.01
                                when UyelikSuresi<=30 and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.0125 then 0.0125
                                when DuzenliAksiyonKitle in ('Mevcut Uye-Uyelik yildonumu', 'Mevcut Uye-Dogumgunu','Mevcut Uye-Son donem oyun yok','Mevcut Uye-Inaktif','Kaybedenler Kulubu')
                                        and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.01 then 0.01
                                when DuzenliAksiyonKitle in ('Geri Kazanılan-1') then 0.0125
                                when DuzenliAksiyonKitle in ('Geri Kazanılan-2') then 0.0125
                                when nvl(Bonus_Oran_W,0)<s.Yuzde then s.Yuzde
                                when nvl(Bonus_Oran_W,0)>nvl(s.Yuzde_Ust,0.00625) then nvl(s.Yuzde_Ust,0.00625)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                                when nvl(Bonus_Oran_W,0)<nvl(s.Yuzde_Alt,0.00175) then nvl(s.Yuzde_Alt,0.00175)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                                else nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                            end + (nvl(Alarm,10)*pAlarmBasedBonusRatio/10)
            ;
        end;
        commit;
    end;
    procedure p_bc_update_23 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
                pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
        begin
                 select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
                 into pAYLIK_YUKLEME_SAYI
                 from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
                 ;
                 exception when no_data_found or too_many_rows then
                 pAYLIK_YUKLEME_SAYI := 0;
         end;
	update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
	set
	OngorulenBonus =
		case
			when nvl(MP_Ciro_Donem_Toplam,0)=nvl(Ciro_Donem_Toplam,0) and nvl(MP_Ciro_Donem_Toplam,0)>0 then 0
			when nvl(BonusYukleme_SonHafta,0)>=3 and (nvl(Ciro_SonHafta,0)-nvl(MP_Ciro_SonHafta,0))*OngorulenYuzde-nvl(BonusYukleme_SonHafta,0)<=0 then 0
			when nvl(BonusYukleme_SonAy,0)>=3 and (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.1-nvl(BonusYukleme_SonAy,0)<=0 then 0
			when nvl(BonusYukleme_Son3Ay,0)>=3 and (nvl(Ciro_Son3Ay,0)-nvl(MP_Ciro_Son3Ay,0))*OngorulenYuzde*1.2-nvl(BonusYukleme_Son3Ay,0)<=0 then 0
			when nvl(BonusYukleme_SonHafta,0)-nvl(Ciro_SonHafta,0)*0.015>0 then 0  --- breakeven 0.06'dan 0.015'ye update edildi
			when nvl(BonusYukleme_SonAy,0)-nvl(Ciro_SonAy,0)*0.015>0 then 0 --- breakeven 0.06'dan 0.015'ye update edildi
			when nvl(BonusYukleme_Son3Ay,0)-nvl(Ciro_Son3Ay,0)*0.015>0 then 0 --- breakeven 0.06'dan 0.015'ye update edildi
			when 28.00/nvl(OngorulenYuklemeAdet,0.01)/2>nvl(SonBonusYuklemeUzerindenGecenSure,99) then 0
			when Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 0
			when Ciro_Ort_W*OngorulenYuzde/pAYLIK_YUKLEME_SAYI-nvl(BonusYukleme_SonHafta,0)>0 and (Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet)>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when Ciro_Ort_W*OngorulenYuzde-nvl(BonusYukleme_SonAy,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when Ciro_Ort_W*3*OngorulenYuzde-nvl(BonusYukleme_Son3Ay,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 0
			else (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet
		end,
	OngorulenBonusNeden =
		case
			when nvl(MP_Ciro_Donem_Toplam,0)=nvl(Ciro_Donem_Toplam,0) and nvl(MP_Ciro_Donem_Toplam,0)>0 then 'MP Musterisi'
			when nvl(BonusYukleme_SonHafta,0)>=3 and (nvl(Ciro_SonHafta,0)-nvl(MP_Ciro_SonHafta,0))*OngorulenYuzde-nvl(BonusYukleme_SonHafta,0)<=0 then 'Son hafta yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_SonAy,0)>=3 and (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.1-nvl(BonusYukleme_SonAy,0)<=0 then 'Son ay yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_Son3Ay,0)>=3 and (nvl(Ciro_Son3Ay,0)-nvl(MP_Ciro_Son3Ay,0))*OngorulenYuzde*1.2-nvl(BonusYukleme_Son3Ay,0)<=0 then 'Son 3 ay yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_SonHafta,0)-nvl(Ciro_SonHafta,0)*0.015>0 then 'Son hafta bonus maliyeti yuksek - 0 bonus'
			when nvl(BonusYukleme_SonAy,0)-nvl(Ciro_SonAy,0)*0.015>0 then 'Son ay bonus maliyeti yuksek - 0 bonus'
			when nvl(BonusYukleme_Son3Ay,0)-nvl(Ciro_Son3Ay,0)*0.015>0 then 'Son 3 ay bonus maliyeti yuksek - 0 bonus'
			when 28.00/nvl(OngorulenYuklemeAdet,0.01)/2>nvl(SonBonusYuklemeUzerindenGecenSure,99) then 'Olması gerekenden daha sık yükleme - 0 bonus'
			when Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 'Hakedis yok - 0 bonus'
			when Ciro_Ort_W*OngorulenYuzde/pAYLIK_YUKLEME_SAYI-nvl(BonusYukleme_SonHafta,0)>0 and (Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet)>0 then 'Hakedise gore yukleme'
			when Ciro_Ort_W*OngorulenYuzde-nvl(BonusYukleme_SonAy,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then 'Hakedise gore yukleme'
			when Ciro_Ort_W*3*OngorulenYuzde-nvl(BonusYukleme_Son3Ay,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then 'Hakedise gore yukleme'
			when (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 'Hakedis yok - 0 bonus'
			else 'Hakedise gore yukleme'
		end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_24 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
	--pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
         begin
         select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
         into pAYLIK_YUKLEME_SAYI
         from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
         ;
         exception when no_data_found or too_many_rows then
         pAYLIK_YUKLEME_SAYI := 0;
         end;

        update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
        set
        OngorulenBonus= case when NVL(Bonus_Donem_Toplam,0)-NVL(Ciro_Donem_Toplam,0)*0.015<=0 --- breakeven 0.06'dan 0.015'ye update edildi
        then
            case
            when (Ciro_Ort_W*0.6+Ciro_pMonth_Max*0.2+Ciro_Donem_Max*0.2)*OngorulenYuzde*1.00/pAYLIK_YUKLEME_SAYI>OngorulenBonus
            then (Ciro_Ort_W*0.6+Ciro_pMonth_Max*0.2+Ciro_Donem_Max*0.2)*OngorulenYuzde*1.00/pAYLIK_YUKLEME_SAYI
            else OngorulenBonus end
        else 0 end,
        OngorulenBonusNeden=case when NVL(Bonus_Donem_Toplam,0)-NVL(Ciro_Donem_Toplam,0)*0.015<=0 --- breakeven 0.06'dan 0.015'ye update edildi
        then 'Terk/Terke yakin musteriler icin yukleme'
        else 'Hakedis yok - 0 bonus' end
        where DuzenliAksiyonKitle in ('Mevcut Uye-Son donem oyun yok','Mevcut Uye-Inaktif')
        ;
        commit;
        end;
    end;
    procedure p_bc_update_25 is
    begin
        update /*+ parallel(4) */crm_DM.Bonus_Calisma_tmp
        set
            OngorulenBonus =
                case
                    when nvl(OngorulenBonus,0)<1 then 0
                    when nvl(OngorulenBonus,0)<=3 then 3
                    when nvl(OngorulenBonus,0)<=5 then 5
                    when OngorulenBonus<=30 then round(OngorulenBonus/5,0)*5
                    when OngorulenBonus<=250 then round(OngorulenBonus/10,0)*10
                    when OngorulenBonus<=500 then round(OngorulenBonus/20,0)*20
                    when OngorulenBonus<=1000 then round(OngorulenBonus/25,0)*25
                    else round(OngorulenBonus/50,0)*50 end,
                    OngorulenBonusNeden= case
                    when nvl(OngorulenBonus,0)<1 then 'Cok dusuk hakedise istinaden - 0 bonus'
                    else OngorulenBonusNeden
                end
        where OngorulenBonus>0
        ;
        commit;
    end;
    procedure p_bc_insert_01 is
    begin
      execute immediate 'TRUNCATE TABLE CRM_DM.BONUS_CALISMA_TEKLIF_TEMP';

        insert /*+ append nologging parallel(4) */ into crm_DM.Bonus_Calisma_Teklif_temp
        select /*+ parallel(4) */
        A.CUSTOMER_ID,
        (A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Ciro
        +A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Kaybedilen
        +A.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Kazanilan
        +NVL(A.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_Basketbol
        +NVL(A.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_3OranAltı_Kaybeden
        +NVL(A.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_5OranAltı_Kaybeden) as Bonus_Teklif,
        TRUNC(SYSDATE) as DWH_DATE
        from crm_DM.Bonus_Calisma_tmp A
        join crm_DM.Aramalar_Teklifler B on A.USERID=B.USERID and TRUNC(SYSDATE) between BaslangicTar and BitisTar
        ;
        commit;
    end;
    procedure p_bc_update_26 is
    begin
        MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_tmp A
        USING (select  CUSTOMER_ID, sum(Bonus_Teklif) AS  Bonus_Teklif
        FROM crm_DM.Bonus_Calisma_Teklif_temp
        GROUP BY CUSTOMER_ID
        ) B
        ON (A.CUSTOMER_ID=B.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE
        SET
        OngorulenBonus= case when TO_CHAR(SYSDATE,'DY')='Fri' then
                            case
                            when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC=0 and A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC=0 then 0
                            when Segment_Assigned='A0' and B.Bonus_Teklif between 3 and 20 then 20
                            when Segment_Assigned in ('A1','A2','A3','A7','A8') and B.Bonus_Teklif between 3 and 10 then 10
                            when B.Bonus_Teklif<1 then 0
                            when B.Bonus_Teklif<3 then 3
                            when B.Bonus_Teklif<=100 then ceil(B.Bonus_Teklif)
                            when B.Bonus_Teklif<=250 then ceil(B.Bonus_Teklif/5)*5
                            when B.Bonus_Teklif<=500 then ceil(B.Bonus_Teklif/10)*10 ---20
                            when B.Bonus_Teklif<=1000 then ceil(B.Bonus_Teklif/20)*20 ---25
                            else ceil(B.Bonus_Teklif/25)*25 ---50
                            end
        else (case when OngorulenBonus>500 then 500 else OngorulenBonus end) end, --- 20181121'de eklendi.
        OngorulenBonusNeden=case when TO_CHAR(SYSDATE,'DY')='Friday' then
                            case
                            when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC=0 and A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC=0 then 'Teklif-Bonus haric oyun yok - 0 bonus'
                            when Segment_Assigned='A0' and B.Bonus_Teklif between 3 and 20 then 'Teklif-A0 üye için minimum 20 TL bonus'
                            when Segment_Assigned in ('A1','A2','A3','A7','A8') and B.Bonus_Teklif between 3 and 10 then 'Teklif-Platin üye için minimum 10 TL bonus'
                            when B.Bonus_Teklif<1 then 'Teklif-Cok dusuk hakedis - 0 bonus'
                            else 'Teklif-Hakedise gore yukleme'
                            end
        else
        (case when OngorulenBonus>0 then 'Teklif-Cuma haric hakedis var' else 'Teklif-Cuma haric hakedis yok' end)
        end
        ;
        commit;
    end;
    procedure p_bc_update_27 is
    begin
       declare
            pMIN_Bonus_Ratio number(22,6):=0.005;
            pBASLANGIC_TAR   date:=TRUNC(SYSDATE);
        begin

            MERGE into CRM_DM.BONUS_CALISMA_tmp A
            USING (select userid from crm_DM.ARAMALAR_TEKLIFLER
                   where pBASLANGIC_TAR between BaslangicTar and BitisTar
                        and Teklif_Yuzde_Kaybedilen>0
                        and TO_CHAR(SYSDATE,'DY')='Fri') B
            ON (A.USERID=B.USERID)
            WHEN MATCHED THEN UPDATE
            set
            OngorulenBonus= case
            when
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)>OngorulenBonus
            THEN
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)
            else OngorulenBonus end,
            OngorulenBonusNeden= case
            when
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)>OngorulenBonus
            THEN 'Teklif-Kaybeden kuponlar icin duzeltme'
            else OngorulenBonusNeden end
            ;
            commit;
            end;
    end;
    procedure p_bc_update_28 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pMax_OngorulenYuzde_for_low_Bonus number(22,6):=0.0025;
                pBASLANGIC_TAR DATE:=TRUNC(SYSDATE);
        begin

                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
                 begin
                 select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
                 into pAYLIK_YUKLEME_SAYI
                 from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
                 ;
                 exception when no_data_found or too_many_rows then
                   pAYLIK_YUKLEME_SAYI := 0;
                end;

                MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_tmp A
                USING crm_DM.ARAMALAR_TEKLIFLER B
                ON (A.USERID=B.USERID)
                WHEN MATCHED THEN UPDATE
                set
                OngorulenBonus= case
                when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI-OngorulenBonus>0
                then
                    case
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=30
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/5,0)*5
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=250
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/10,0)*10
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=500
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/20,0)*20
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=1000
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/25,0)*25
                    else
                           round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/50,0)*50
                    end
                else OngorulenBonus end,
                OngorulenBonusNeden=case
                when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI-OngorulenBonus>0
                then 'Teklif-Dusuk bonuslar icin duzeltme'
                else OngorulenBonusNeden end
                where pBASLANGIC_TAR between BaslangicTar and BitisTar
                and (Teklif_Yuzde_Ciro>0 or Teklif_Yuzde_Kaybedilen>0 or Teklif_Yuzde_Kazanilan>0 or Teklif_Yuzde_Basketbol>0)
                and TO_CHAR(SYSDATE,'DY')='Fri'
                and NVL(OngorulenBonus,0)<250
                and (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))>=1000
                ;
                commit;
            end;
    end;
    procedure p_bc_update_29 is
    begin
       declare
                pBonusBalanceRatio number(22,6):=0.20; --- 2018-12-11'de değiştirildi. Eski değer: 0.3
            begin

            update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
            set
            OngorulenBonus= case
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 0
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and BONUS_BAKIYE>=OngorulenBonus*pBonusBalanceRatio then 0
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and NVL(Status_Desc,'XX')<>'Active' then 0
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle='Yeni Uye-Oyun Yok' then 3
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle in ('Geri Kazanılan-1','Geri Kazanılan-2') then (case when OngorulenBonus>500 then 500 else OngorulenBonus end)
            when YuzdeTeklifDiscard is null and NVL(BonusYukleme_SonAy,0)<10 and NVL(Alarm,10) in (0,1,2) then 0
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 then 50
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 then 20
            when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and OngorulenBonus>500 then 500
            when OngorulenBonus>500 and YuzdeTeklifDiscard is null then 500
            else OngorulenBonus end,
            OngorulenBonusNeden= case
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 'Fenomen/Yazar/VIP/Sorunlu/Calisan/Bonus kazanamaz nedeniyle - 0 bonus'
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and BONUS_BAKIYE>=OngorulenBonus*pBonusBalanceRatio then 'Bonus bakiyesi mevcut - 0 bonus'
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and NVL(Status_Desc,'XX')<>'Active' then 'Uye aktif degil - 0 bonus'
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle='Yeni Uye-Oyun Yok' then 'Duzenli Aksiyon Kitle Yuklemesi'
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle in ('Geri Kazanılan-1','Geri Kazanılan-2') then 'Duzenli Aksiyon Kitle Yuklemesi'
            when YuzdeTeklifDiscard is null and NVL(BonusYukleme_SonAy,0)<10 and NVL(Alarm,10) in (0,1,2) then 'Bonus almayan loyal oyuncu - 0 bonus'
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 and YuzdeTeklifDiscard is not null then 'Teklif-A0 üye için minimum 50 TL bonus'
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 then 'A0 üye için minimum 50 TL bonus'
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 and YuzdeTeklifDiscard is not null then 'Teklif-Platin üye için minimum 20 TL bonus'
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 then 'Platin üye için minimum 20 TL bonus'
            when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and OngorulenBonus>500 then 'Duzenli Aksiyon Kitlesi/Bonus Talepkar icin maksimum 500 TL yukleme'
            when OngorulenBonus>500 and YuzdeTeklifDiscard is null then 'Hakedise gore maksimum 500 TL yukleme'
            when OngorulenBonus>0 and DuzenliAksiyonKitle is not null and OngorulenBonusNeden is null then 'Duzenli Aksiyon Kitle Yuklemesi/'||DuzenliAksiyonKitle
            else OngorulenBonusNeden end
            ;
            commit;
            end;

    end;
    procedure p_bc_update_30 is
    begin
        declare
                pMIN_Bonus_Ratio number(22,6):=0.005;
        begin

        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=case
        when (case when BonusYukleme_SonHafta>0 and Ciro_SonHafta=0 then 99 when BonusYukleme_SonHafta=0 and Ciro_SonHafta=0 then 0 else BonusYukleme_SonHafta*1.0/Ciro_SonHafta end)>0.018 then 0
        when (case when BonusYukleme_SonAy>0 and Ciro_SonAy=0 then 99 when BonusYukleme_SonAy=0 and Ciro_SonAy=0 then 0 else BonusYukleme_SonAy*1.0/Ciro_SonAy end)>0.018 then 0
        when (case when BonusYukleme_Son3Ay>0 and Ciro_Son3Ay=0 then 99 when BonusYukleme_Son3Ay=0 and Ciro_Son3Ay=0 then 0 else BonusYukleme_Son3Ay*1.0/Ciro_Son3Ay end)>0.018 then 0
        else (Ciro_Ort_W*0.4+Ciro_pMonth_Max*0.3+Ciro_Donem_Max*0.3)*pMIN_Bonus_Ratio end
        ;
        commit;
        end;

    end;
    procedure p_bc_update_31 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=case
        when NVL(Bonus_CuRe_Available,0)<1 then 0
        when NVL(Bonus_CuRe_Available,0)<=3 then 3
        when NVL(Bonus_CuRe_Available,0)<=5 then 5
        when Bonus_CuRe_Available<=30 then round(Bonus_CuRe_Available/5,0)*5
        when Bonus_CuRe_Available<=250 then round(Bonus_CuRe_Available/10,0)*10
        when Bonus_CuRe_Available<=500 then round(Bonus_CuRe_Available/20,0)*20
        else 500 end
        ;
        commit;
    end;
    procedure p_bc_update_32 is
    begin
        declare
                pBonusBalanceRatio number(22,6):=0.20; --- 2018-12-11'de değiştirildi. Eski değer: 0.3
        begin

        update /*+ parallel(4) */  crm_DM.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=case
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 0
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and BONUS_BAKIYE>=Bonus_CuRe_Available*pBonusBalanceRatio then 0
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and NVL(Status_Desc,'XX')<>'Active' then 0
        when Segment_Assigned='A0' and Bonus_CuRe_Available>=3 and Bonus_CuRe_Available<50 then 50
        when Segment_Assigned in ('A1','A2','A3','A7','A8') and Bonus_CuRe_Available>=3 and Bonus_CuRe_Available<20 then 20
        when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and Bonus_CuRe_Available>500 then 500
        when Bonus_CuRe_Available>500 and YuzdeTeklifDiscard is null then 500
        else Bonus_CuRe_Available end
        ;
        commit;
        end;

    end;
    procedure p_bc_update_33 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        Bonus_CuRe_Available=OngorulenBonus
        where OngorulenBonus>0 and Bonus_CuRe_Available<OngorulenBonus
        ;
        commit;
    end;
    procedure p_bc_update_34 is
    begin
        update /*+ parallel(4) */  crm_dm.Bonus_Calisma_tmp
        set
        OngorulenBonusNeden=OngorulenBonusNeden||'/CuRe yukleme yapabilir'
        where Bonus_CuRe_Available>OngorulenBonus
        and OngorulenBonus=0
        ;
        commit;
    end;
    procedure p_bc_update_35 IS
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING
        (select LA.CUSTOMER_ID,
            sum(case when TRUNC(OPERATION_DATE)>=TRUNC(SYSDATE)-7 then AMOUNT else 0 end) as HP_YUKLEME_SonHafta,
            sum(case when TRUNC(OPERATION_DATE)>=ADD_MONTHS(TRUNC(SYSDATE),-1) then AMOUNT else 0 end) as HP_YUKLEME_SonAy
        from CRM_DM.BONUS_CALISMA_X BCX
        LEFT JOIN lbrdwh.LOYALTY_ACCOUNT_HISTORY LA
        ON BCX.CUSTOMER_ID = LA.CUSTOMER_ID
        WHERE TRUNC(OPERATION_DATE)>=ADD_MONTHS(TRUNC(SYSDATE),-1)
        AND LA.OPERATION_TYPE in (1,2,5)
        GROUP BY LA.CUSTOMER_ID
        ) MG
        ON (MG.CUSTOMER_ID=BC.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE SET
        HediyeKatalogPuan_Yukleme_SonAy=NVL(HP_YUKLEME_SonAy,0),
        HediyeKatalogPuan_Yukleme_SonHafta=NVL(HP_YUKLEME_SonHafta,0)
        ;
        commit;
    end;
    procedure p_bc_update_36 is
    begin
        declare
                pRETURN NUMBER(22,6):=0.02;
                pMIN_Ciro_LN NUMBER(22,6):=ln(3);
                pMAX_Ciro_LN NUMBER(22,6):=ln(100000);
                pMAX_Puan_Yuzde NUMBER(22,6);
                pMIN_Puan_Yuzde NUMBER(22,6);
                pSlope NUMBER(22,6);
        begin
                pMAX_Puan_Yuzde:=pRETURN*2;
                PMIN_Puan_Yuzde:=pRETURN*1;
        begin
                pSlope:=(pMAX_Puan_Yuzde-pMIN_Puan_Yuzde)/(pMAX_Ciro_LN-pMIN_Ciro_LN);
        end;
                update /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
                set
                HediyeKatalogPuan_Oran=case
                            when (pMAX_Puan_Yuzde-pSlope*(LN(case when Ciro_Ort_W<3 then 3 else Ciro_Ort_W end)-pMIN_Ciro_LN))<pMIN_Puan_Yuzde then pMIN_Puan_Yuzde
                            else (pMAX_Puan_Yuzde-pSlope*(LN(case when Ciro_Ort_W<3 then 3 else Ciro_Ort_W end)-pMIN_Ciro_LN)) end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_37 is
    begin
        declare
                pRETURN NUMBER(22,6):=0.02;
                pdeviation NUMBER(22,6):=0.5;
        begin
        update  /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
        set
        HediyeKatalogPuan= case
        when NVL(Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)>=100 and TO_CHAR(SYSDATE,'DY') != 'Fri' and NVL(Bonus_Oran_W,0)<=0.012
        then
            case
            when (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta<1000 then 1000
            when (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta>500000 then 500000
            else (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta
            end
        else 0 end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_38 is
    begin
        update  /*+ parallel(4) */ crm_dm.Bonus_Calisma_tmp
        set
        HediyeKatalogPuan=0
        where
        (nvl(DigerDiscard,9) in (1,3) or nvl(Status_Desc,'XX')!='Active')
        ;
        commit;
    end;
    procedure p_bc_update_39 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING (select * from CRM_DM.Aramalar_Teklifler
               where TRUNC(SYSDATE) between BaslangicTar and BitisTar and Teklif_Hediye_Katalog_Carpan>0 ) ART
        ON (BC.USERID = ART.USERID)
        WHEN MATCHED THEN UPDATE SET
			HediyeKatalogPuan=case when TO_CHAR(SYSDATE,'DY')='Fri' and NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)>0
                        then
                            case
                            when NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)*ART.Teklif_Hediye_Katalog_Carpan<2000 then 2000
                            else NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)*ART.Teklif_Hediye_Katalog_Carpan
                            end
                        else 0 end

        ;
        commit;
    end;
    procedure p_bc_update_40 is
    begin
        update /*+ parallel(4) */ crm_DM.Bonus_Calisma_tmp
        set
        HediyeKatalogPuan=case when HediyeKatalogPuan<500 then ceil(HediyeKatalogPuan/25)*25
                               when HediyeKatalogPuan<1000 then ceil(HediyeKatalogPuan/50)*50
                               when HediyeKatalogPuan<5000 then ceil(HediyeKatalogPuan/100)*100
                               when HediyeKatalogPuan<20000 then ceil(HediyeKatalogPuan/250)*250
                               when HediyeKatalogPuan<50000 then ceil(HediyeKatalogPuan/500)*500
                               when HediyeKatalogPuan<100000 then ceil(HediyeKatalogPuan/1000)*1000
                               when HediyeKatalogPuan<500000 then ceil(HediyeKatalogPuan/5000)*5000
                               when HediyeKatalogPuan<1000000 then ceil(HediyeKatalogPuan/10000)*10000
                               else ceil(HediyeKatalogPuan/25000)*25000 end
        ;
        commit;
    end;
    procedure p_bc_update_41 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_tmp BC
        USING CRM_DM.YuklemeDisi YD
        ON (BC.USERID = YD.USERID)
        WHEN MATCHED THEN UPDATE SET
                        HediyeKatalogPuan=0
        WHERE
        (
        (NEDEN in ('VIPX','Vefat')) --- VIPX ya da vefat ise kesinlikle yüklenmeyecek
            OR
            (NEDEN in ('Sorunlu') and
             exists (select 1 from crm_DM.Aramalar_Teklifler ART where BC.USERID=ART.USERID and TRUNC(SYSDATE) between BaslangicTar and BitisTar and ART.Teklif_Hediye_Katalog_Carpan=0)) --- Sorunlu ve Tekliflerde HK puan yok ise verme
        )
        ;
        commit;
    end;
    procedure p_bc_update_42 is
    begin
        MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_tmp BC
        USING CRM_DM.HP_Exclude HPE
        ON (BC.USERID = HPE.USERID)
        WHEN MATCHED THEN UPDATE
        SET
        HediyeKatalogPuan=0
        ;
        commit;
    end;

end ;
/

create or replace package        pkg_rt_update_bonus_calisma_cs is
procedure	p_main;
procedure	p_bc_insert_00;
procedure	p_bc_update_01;
procedure	p_bc_update_02;
procedure	p_bc_update_03;
procedure	p_bc_update_04;
procedure	p_bc_update_05;
procedure	p_bc_update_06;
procedure	p_bc_update_07;
procedure	p_bc_update_08;
procedure	p_bc_update_09;
procedure	p_bc_update_10;
procedure	p_bc_update_11;
procedure	p_bc_update_12;
procedure	p_bc_update_13;
procedure	p_bc_update_14;
procedure	p_bc_update_15;
procedure	p_bc_update_16;
procedure	p_bc_update_17;
procedure	p_bc_update_18;
procedure	p_bc_update_19;
procedure	p_bc_update_20;
procedure	p_bc_update_21;
procedure	p_bc_update_22;
procedure	p_bc_update_23;
procedure	p_bc_update_24;
procedure	p_bc_update_25;
procedure	p_bc_insert_01;
procedure	p_bc_update_26;
procedure	p_bc_update_27;
procedure	p_bc_update_28;
procedure	p_bc_update_29;
procedure	p_bc_update_30;
procedure	p_bc_update_31;
procedure	p_bc_update_32;
procedure	p_bc_update_33;
procedure	p_bc_update_34;
procedure	p_bc_update_35;
procedure	p_bc_update_36;
procedure	p_bc_update_37;
procedure	p_bc_update_38;
procedure	p_bc_update_39;
procedure	p_bc_update_40;
procedure	p_bc_update_41;
procedure	p_bc_update_42;
procedure p_bc_update_999;
end pkg_rt_update_bonus_calisma_cs;
/

create or replace package body        pkg_rt_update_bonus_calisma_cs is
    procedure p_main is
    begin
        execute immediate 'alter session enable parallel dml';
	p_bc_insert_00;
	p_bc_update_01;
	p_bc_update_02;
	p_bc_update_03;
	p_bc_update_04;
	p_bc_update_05;
	p_bc_update_06;
	p_bc_update_07;
	p_bc_update_08;
	p_bc_update_09;
	p_bc_update_10;
	p_bc_update_11;
	p_bc_update_12;
	p_bc_update_13;
	p_bc_update_14;
	p_bc_update_15;
	p_bc_update_16;
	p_bc_update_17;
	p_bc_update_18;
	p_bc_update_19;
	p_bc_update_20;
	p_bc_update_21;
	p_bc_update_22;
	p_bc_update_23;
	p_bc_update_24;
	p_bc_update_25;
	p_bc_insert_01;
	p_bc_update_26;
	p_bc_update_27;
	p_bc_update_28;
	p_bc_update_29;
	p_bc_update_30;
	p_bc_update_31;
	p_bc_update_32;
	p_bc_update_33;
	p_bc_update_34;
	p_bc_update_35;
	p_bc_update_36;
	p_bc_update_37;
	p_bc_update_38;
	p_bc_update_39;
	p_bc_update_40;
	p_bc_update_41;
	p_bc_update_42;
  p_bc_update_999;
 /*merge into son adım olmalı*/
    END p_main;
   ------------------------------------------------------------------------------------------------------------

    procedure p_bc_insert_00 is
    BEGIN
	    execute immediate 'TRUNCATE TABLE CRM_DM.BONUS_CALISMA_RT_tmp';

	    INSERT INTO CRM_DM.BONUS_CALISMA_RT_TMP
	    (USERID,CUSTOMER_ID,UNIQUE_CUSTOMER_ID,STATUS,STATUS_DESC,STATUS_AVAILABLE,ISNEWCUSTOMER,ISCUSTOMER,ISVIP,ACTIVITYSTATUS,SEGMENT_CALCULATED,SEGMENT_ASSIGNED,SEGMENT_BEST,SEGMENT_BEST_INPERIOD,RFM_SEGMENT,AYRICALIKLI_UYE,TAKIM,YAS,CINSIYET,SEHIR,PAZIZINSMS,PAZIZINCC,PAZIZINMAIL,UYELIKTARIHI,UYELIKSURESI,SONLOGINTARIHI,SONLOGINUZERINDENGECENSURE,SONOYUNUZERINDENGECENSURE,SONPARATRANSFERIUZERINDENGECENSURE,SONPAYOUTUZERINDENGECENSURE,SONBONUSYUKLEMEUZERINDENGECENSURE,PARA_BONUS_KONTROL,BAKIYE,BONUS_BAKIYE,CIRO_SONHAFTA,CIRO_SONAY,CIRO_SON3AY,CIRO_SON6AY,CIRO_SON12AY,CIRO_DONEM_TOPLAM,BONUS_DONEM_TOPLAM,IDDAA_CIRO_DONEM_TOPLAM,STO_CIRO_DONEM_TOPLAM,MP_CIRO_DONEM_TOPLAM,CIRO_DONEM_MAX,BONUSKULLANIM_SONHAFTA,BONUSKULLANIM_SONAY,BONUSKULLANIM_SON3AY,BONUSKULLANIM_SON6AY,BONUSKULLANIM_SON12AY,BONUSYUKLEME_SONHAFTA,BONUSYUKLEME_SONAY,BONUSYUKLEME_SON3AY,BONUSYUKLEME_SON6AY,BONUSYUKLEME_SON12AY,PARAYATIRMA_SONHAFTA,PARAYATIRMA_SONAY,PARAYATIRMA_SON3AY,PARAYATIRMA_SON6AY,PARAYATIRMA_SON12AY,IDDAA_CIRO_SONHAFTA,IDDAA_CIRO_SONAY,IDDAA_CIRO_SON3AY,IDDAA_CIRO_SON6AY,IDDAA_CIRO_SON12AY,OYUNGUNADET_SONHAFTA,OYUNGUNADET_SONAY,OYUNGUNADET_SON3AY,OYUNGUNADET_SON6AY,OYUNGUNADET_SON12AY,OYUNGUNRATIO_SONHAFTA,OYUNGUNRATIO_SONAY,OYUNGUNRATIO_SON3AY,OYUNGUNRATIO_SON6AY,OYUNGUNRATIO_SON12AY,LOGINGUNADET_SONHAFTA,LOGINGUNADET_SONAY,LOGINGUNADET_SON3AY,LOGINGUNADET_SON6AY,LOGINGUNADET_SON12AY,LOGINGUNRATIO_SONHAFTA,LOGINGUNRATIO_SONAY,LOGINGUNRATIO_SON3AY,LOGINGUNRATIO_SON6AY,LOGINGUNRATIO_SON12AY,PAYOUT_SONHAFTA,PAYOUT_SONAY,PAYOUT_SON3AY,PAYOUT_SON6AY,PAYOUT_SON12AY,PAYOUTRATIO_SONHAFTA,PAYOUTRATIO_SONAY,PAYOUTRATIO_SON3AY,PAYOUTRATIO_SON6AY,PAYOUTRATIO_SON12AY,BASKETBALL_CIRO_SONHAFTA,BASKETBALL_CIRO_SONAY,BASKETBALL_CIRO_SON3AY,BASKETBALL_CIRO_SON6AY,BASKETBALL_CIRO_SON12AY,BASKETBALL_RATIO_SONHAFTA,BASKETBALL_RATIO_SONAY,BASKETBALL_RATIO_SON3AY,BASKETBALL_RATIO_SON6AY,BASKETBALL_RATIO_SON12AY,KAYBEDENKUPONTUTAR_SONHAFTA,KAYBEDENKUPONTUTAR_SONAY,KAYBEDENKUPONTUTAR_SON3AY,KAYBEDENKUPONTUTAR_SON6AY,KAYBEDENKUPONTUTAR_SON12AY,KAZANANKUPONTUTAR_SONHAFTA,KAZANANKUPONTUTAR_SONAY,KAZANANKUPONTUTAR_SON3AY,KAZANANKUPONTUTAR_SON6AY,KAZANANKUPONTUTAR_SON12AY,IDDAA_CIRO_3ORANALTI_SONHAFTA,IDDAA_CIRO_3ORANALTI_SONAY,IDDAA_CIRO_3ORANALTI_SON3AY,IDDAA_CIRO_3ORANALTI_SON6AY,IDDAA_CIRO_3ORANALTI_SON12AY,IDDAA_CIRO_5ORANALTI_SONHAFTA,IDDAA_CIRO_5ORANALTI_SONAY,IDDAA_CIRO_5ORANALTI_SON3AY,IDDAA_CIRO_5ORANALTI_SON6AY,IDDAA_CIRO_5ORANALTI_SON12AY,IDDAA_CIRO_PAY_SONHAFTA,IDDAA_CIRO_PAY_SONAY,IDDAA_CIRO_PAY_SON3AY,IDDAA_CIRO_PAY_SON6AY,IDDAA_CIRO_PAY_SON12AY,IDDAA_CIRO_3ORANALTI_PAY_SONHAFTA,IDDAA_CIRO_3ORANALTI_PAY_SONAY,IDDAA_CIRO_3ORANALTI_PAY_SON3AY,IDDAA_CIRO_3ORANALTI_PAY_SON6AY,IDDAA_CIRO_3ORANALTI_PAY_SON12AY,IDDAA_CIRO_5ORANALTI_PAY_SONHAFTA,IDDAA_CIRO_5ORANALTI_PAY_SONAY,IDDAA_CIRO_5ORANALTI_PAY_SON3AY,IDDAA_CIRO_5ORANALTI_PAY_SON6AY,IDDAA_CIRO_5ORANALTI_PAY_SON12AY,IDDAA_CIRO_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_3ORANALTI_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_5ORANALTI_SONHAFTA_BONUS_HARIC,KAYBEDENKUPONTUTAR_SONHAFTA_BONUS_HARIC,KAZANANKUPONTUTAR_SONHAFTA_BONUS_HARIC,BASKETBALL_CIRO_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_3ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_5ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC,TRIBUNUYE,TRIBUNTAKIPCISAYI,TRIBUNOYNANANSONKUPONUZERINDENGECENGUN,TRIBUNPAYLASILANSONKUPONUZERINDENGECENGUN,TRIBUNOYNANANKUPONSAYI_SONHAFTA,TRIBUNOYNANANKUPONSAYI_SONAY,TRIBUNOYNANANKUPONSAYI_SON3AY,TRIBUNOYNANANKUPONSAYI_SON6AY,TRIBUNOYNANANKUPONSAYI_SON12AY,TRIBUNPAYLASILANKUPONSAYI_SONHAFTA,TRIBUNPAYLASILANKUPONSAYI_SONAY,TRIBUNPAYLASILANKUPONSAYI_SON3AY,TRIBUNPAYLASILANKUPONSAYI_SON6AY,TRIBUNPAYLASILANKUPONSAYI_SON12AY,MP_CIRO_SONHAFTA,MP_CIRO_SONAY,MP_CIRO_SON3AY,MP_CIRO_SON6AY,MP_CIRO_SON12AY,MP_CIRO_PAY_SONHAFTA,MP_CIRO_PAY_SONAY,MP_CIRO_PAY_SON3AY,MP_CIRO_PAY_SON6AY,MP_CIRO_PAY_SON12AY,SAATDILIM_1,SAATDILIM_2,SAATDILIM_3,SAATDILIM_4,SAATDILIM_5,SAATDILIM_6,SAATDILIM_7,SAATDILIM_8,GUN_1_SONAY,GUN_2_SONAY,GUN_3_SONAY,GUN_4_SONAY,GUN_5_SONAY,GUN_6_SONAY,GUN_7_SONAY,HAFTAICI_OGLE_SONAY,HAFTAICI_OGLE_PAY_SONAY,CIRO_PMONTH_SONHAFTA,CIRO_PMONTH_SONAY,CIRO_PMONTH_SON3AY,CIRO_PMONTH_SON6AY,CIRO_PMONTH_SON12AY,CIRO_PMONTH_MAX,LOGIN_RATIO_MAX,OYUN_RATIO_MAX,SONBONUSTALEPYUKLEMEUZERINDENGECENSURE,TALEP_SONAY,BONUSTALEP_SONAY,BONUSTALEPKAR,BONUS_TALEP_YUKLEME_ADET_SONAY,CIRO_ORT_W,LOG_CIRO_ORT_W,LOGINGUN_ORT_W,OYUNGUN_ORT_W,BONUS_ORAN_W,TICKET_ORT_W,LOG_TICKET_ORT_W,CIRO_SCORE1,CIRO_SCORE2,LOGIN_SCORE,GAME_SCORE,ALARM_SCORE,ALARM,TRIBUNDISCARD,YUZDETEKLIFDISCARD,DIGERDISCARD,ONGORULENYUKLEMEADET,ONGORULENYUZDE,ONGORULENBONUS,BONUS_CURE_AVAILABLE,ONGORULENBONUSNEDEN,DUZENLIAKSIYONKITLE,HEDIYEKATALOGPUAN_BAKIYE,HEDIYEKATALOGPUAN_ORAN,HEDIYEKATALOGPUAN,HEDIYEKATALOGPUAN_YUKLEME_SONAY,HEDIYEKATALOGPUAN_YUKLEME_SONHAFTA,IDDAA_STO_CIRO_SONHAFTA,IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA,IDDAA_STO_KAZANAN_SONHAFTA,IDDAA_STO_KAYBEDEN_SONHAFTA,IDDAA_STO_CIRO_SONHAFTA_BONUS_HARIC,IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA_BONUS_HARIC,IDDAA_STO_KAZANAN_SONHAFTA_BONUS_HARIC,IDDAA_STO_KAYBEDEN_SONHAFTA_BONUS_HARIC,DDWH_DATE)
	    SELECT
          DISTINCT
          USERID,bct.CUSTOMER_ID,UNIQUE_CUSTOMER_ID,
          3 AS STATUS,
          'Active' AS STATUS_DESC,
          1 AS  STATUS_AVAILABLE,
          ISNEWCUSTOMER,ISCUSTOMER,ISVIP,
          'AKTIF' AS ACTIVITYSTATUS,
          SEGMENT_CALCULATED,SEGMENT_ASSIGNED,SEGMENT_BEST,SEGMENT_BEST_INPERIOD,RFM_SEGMENT,AYRICALIKLI_UYE,TAKIM,YAS,CINSIYET,SEHIR,PAZIZINSMS,PAZIZINCC,PAZIZINMAIL,UYELIKTARIHI,UYELIKSURESI,SONLOGINTARIHI,SONLOGINUZERINDENGECENSURE,SONOYUNUZERINDENGECENSURE,SONPARATRANSFERIUZERINDENGECENSURE,SONPAYOUTUZERINDENGECENSURE,SONBONUSYUKLEMEUZERINDENGECENSURE,PARA_BONUS_KONTROL,BAKIYE,BONUS_BAKIYE,CIRO_SONHAFTA,CIRO_SONAY,CIRO_SON3AY,CIRO_SON6AY,CIRO_SON12AY,CIRO_DONEM_TOPLAM,BONUS_DONEM_TOPLAM,IDDAA_CIRO_DONEM_TOPLAM,STO_CIRO_DONEM_TOPLAM,MP_CIRO_DONEM_TOPLAM,CIRO_DONEM_MAX,BONUSKULLANIM_SONHAFTA,BONUSKULLANIM_SONAY,BONUSKULLANIM_SON3AY,BONUSKULLANIM_SON6AY,BONUSKULLANIM_SON12AY,BONUSYUKLEME_SONHAFTA,BONUSYUKLEME_SONAY,BONUSYUKLEME_SON3AY,BONUSYUKLEME_SON6AY,BONUSYUKLEME_SON12AY,PARAYATIRMA_SONHAFTA,PARAYATIRMA_SONAY,PARAYATIRMA_SON3AY,PARAYATIRMA_SON6AY,PARAYATIRMA_SON12AY,IDDAA_CIRO_SONHAFTA,IDDAA_CIRO_SONAY,IDDAA_CIRO_SON3AY,IDDAA_CIRO_SON6AY,IDDAA_CIRO_SON12AY,OYUNGUNADET_SONHAFTA,OYUNGUNADET_SONAY,OYUNGUNADET_SON3AY,OYUNGUNADET_SON6AY,OYUNGUNADET_SON12AY,OYUNGUNRATIO_SONHAFTA,OYUNGUNRATIO_SONAY,OYUNGUNRATIO_SON3AY,OYUNGUNRATIO_SON6AY,OYUNGUNRATIO_SON12AY,LOGINGUNADET_SONHAFTA,LOGINGUNADET_SONAY,LOGINGUNADET_SON3AY,LOGINGUNADET_SON6AY,LOGINGUNADET_SON12AY,LOGINGUNRATIO_SONHAFTA,LOGINGUNRATIO_SONAY,LOGINGUNRATIO_SON3AY,LOGINGUNRATIO_SON6AY,LOGINGUNRATIO_SON12AY,PAYOUT_SONHAFTA,PAYOUT_SONAY,PAYOUT_SON3AY,PAYOUT_SON6AY,PAYOUT_SON12AY,PAYOUTRATIO_SONHAFTA,PAYOUTRATIO_SONAY,PAYOUTRATIO_SON3AY,PAYOUTRATIO_SON6AY,PAYOUTRATIO_SON12AY,BASKETBALL_CIRO_SONHAFTA,BASKETBALL_CIRO_SONAY,BASKETBALL_CIRO_SON3AY,BASKETBALL_CIRO_SON6AY,BASKETBALL_CIRO_SON12AY,BASKETBALL_RATIO_SONHAFTA,BASKETBALL_RATIO_SONAY,BASKETBALL_RATIO_SON3AY,BASKETBALL_RATIO_SON6AY,BASKETBALL_RATIO_SON12AY,KAYBEDENKUPONTUTAR_SONHAFTA,KAYBEDENKUPONTUTAR_SONAY,KAYBEDENKUPONTUTAR_SON3AY,KAYBEDENKUPONTUTAR_SON6AY,KAYBEDENKUPONTUTAR_SON12AY,KAZANANKUPONTUTAR_SONHAFTA,KAZANANKUPONTUTAR_SONAY,KAZANANKUPONTUTAR_SON3AY,KAZANANKUPONTUTAR_SON6AY,KAZANANKUPONTUTAR_SON12AY,IDDAA_CIRO_3ORANALTI_SONHAFTA,IDDAA_CIRO_3ORANALTI_SONAY,IDDAA_CIRO_3ORANALTI_SON3AY,IDDAA_CIRO_3ORANALTI_SON6AY,IDDAA_CIRO_3ORANALTI_SON12AY,IDDAA_CIRO_5ORANALTI_SONHAFTA,IDDAA_CIRO_5ORANALTI_SONAY,IDDAA_CIRO_5ORANALTI_SON3AY,IDDAA_CIRO_5ORANALTI_SON6AY,IDDAA_CIRO_5ORANALTI_SON12AY,IDDAA_CIRO_PAY_SONHAFTA,IDDAA_CIRO_PAY_SONAY,IDDAA_CIRO_PAY_SON3AY,IDDAA_CIRO_PAY_SON6AY,IDDAA_CIRO_PAY_SON12AY,IDDAA_CIRO_3ORANALTI_PAY_SONHAFTA,IDDAA_CIRO_3ORANALTI_PAY_SONAY,IDDAA_CIRO_3ORANALTI_PAY_SON3AY,IDDAA_CIRO_3ORANALTI_PAY_SON6AY,IDDAA_CIRO_3ORANALTI_PAY_SON12AY,IDDAA_CIRO_5ORANALTI_PAY_SONHAFTA,IDDAA_CIRO_5ORANALTI_PAY_SONAY,IDDAA_CIRO_5ORANALTI_PAY_SON3AY,IDDAA_CIRO_5ORANALTI_PAY_SON6AY,IDDAA_CIRO_5ORANALTI_PAY_SON12AY,IDDAA_CIRO_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_3ORANALTI_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_5ORANALTI_SONHAFTA_BONUS_HARIC,KAYBEDENKUPONTUTAR_SONHAFTA_BONUS_HARIC,KAZANANKUPONTUTAR_SONHAFTA_BONUS_HARIC,BASKETBALL_CIRO_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_3ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC,IDDAA_CIRO_5ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC,TRIBUNUYE,TRIBUNTAKIPCISAYI,TRIBUNOYNANANSONKUPONUZERINDENGECENGUN,TRIBUNPAYLASILANSONKUPONUZERINDENGECENGUN,TRIBUNOYNANANKUPONSAYI_SONHAFTA,TRIBUNOYNANANKUPONSAYI_SONAY,TRIBUNOYNANANKUPONSAYI_SON3AY,TRIBUNOYNANANKUPONSAYI_SON6AY,TRIBUNOYNANANKUPONSAYI_SON12AY,TRIBUNPAYLASILANKUPONSAYI_SONHAFTA,TRIBUNPAYLASILANKUPONSAYI_SONAY,TRIBUNPAYLASILANKUPONSAYI_SON3AY,TRIBUNPAYLASILANKUPONSAYI_SON6AY,TRIBUNPAYLASILANKUPONSAYI_SON12AY,MP_CIRO_SONHAFTA,MP_CIRO_SONAY,MP_CIRO_SON3AY,MP_CIRO_SON6AY,MP_CIRO_SON12AY,MP_CIRO_PAY_SONHAFTA,MP_CIRO_PAY_SONAY,MP_CIRO_PAY_SON3AY,MP_CIRO_PAY_SON6AY,MP_CIRO_PAY_SON12AY,SAATDILIM_1,SAATDILIM_2,SAATDILIM_3,SAATDILIM_4,SAATDILIM_5,SAATDILIM_6,SAATDILIM_7,SAATDILIM_8,GUN_1_SONAY,GUN_2_SONAY,GUN_3_SONAY,GUN_4_SONAY,GUN_5_SONAY,GUN_6_SONAY,GUN_7_SONAY,HAFTAICI_OGLE_SONAY,HAFTAICI_OGLE_PAY_SONAY,CIRO_PMONTH_SONHAFTA,CIRO_PMONTH_SONAY,CIRO_PMONTH_SON3AY,CIRO_PMONTH_SON6AY,CIRO_PMONTH_SON12AY,CIRO_PMONTH_MAX,LOGIN_RATIO_MAX,OYUN_RATIO_MAX,SONBONUSTALEPYUKLEMEUZERINDENGECENSURE,TALEP_SONAY,BONUSTALEP_SONAY,BONUSTALEPKAR,BONUS_TALEP_YUKLEME_ADET_SONAY,CIRO_ORT_W,LOG_CIRO_ORT_W,LOGINGUN_ORT_W,OYUNGUN_ORT_W,BONUS_ORAN_W,TICKET_ORT_W,LOG_TICKET_ORT_W,CIRO_SCORE1,CIRO_SCORE2,LOGIN_SCORE,GAME_SCORE,ALARM_SCORE,ALARM,TRIBUNDISCARD,YUZDETEKLIFDISCARD,DIGERDISCARD,ONGORULENYUKLEMEADET,ONGORULENYUZDE,ONGORULENBONUS,BONUS_CURE_AVAILABLE,ONGORULENBONUSNEDEN,DUZENLIAKSIYONKITLE,HEDIYEKATALOGPUAN_BAKIYE,HEDIYEKATALOGPUAN_ORAN,HEDIYEKATALOGPUAN,HEDIYEKATALOGPUAN_YUKLEME_SONAY,HEDIYEKATALOGPUAN_YUKLEME_SONHAFTA,IDDAA_STO_CIRO_SONHAFTA,IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA,IDDAA_STO_KAZANAN_SONHAFTA,IDDAA_STO_KAYBEDEN_SONHAFTA,IDDAA_STO_CIRO_SONHAFTA_BONUS_HARIC,IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA_BONUS_HARIC,IDDAA_STO_KAZANAN_SONHAFTA_BONUS_HARIC,IDDAA_STO_KAYBEDEN_SONHAFTA_BONUS_HARIC,DDWH_DATE
		  FROM  crm_dm.BONUS_CALISMA_TMP bct
		  INNER JOIN
		  USERS_DB_ADM.CUSTOMER_STATUS_HISTORY@PROD_BLYNRDB A
		  ON bct.CUSTOMER_ID = a.customer_id
		 WHERE "TIMESTAMP" >= trunc(sysdate)
		   AND A.NEW_STATUS = 3
		   AND A.OLD_STATUS <> 3 ;
        commit;
    end;
-----------------------------------------------------------------------------------------------------------------------------------------------

   procedure p_bc_update_01 is
    begin
        merge into crm_dm.BONUS_CALISMA_RT_tmp A
        using(
            select
                B.CUSTOMER_ID,
                IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
                IKDD.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
                IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
                IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
                IKDD.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
                NVL(IKDD.Iddaa_Ciro_SonHafta,0) + NVL(SKDD.STO_Ciro_SonHafta,0) AS Iddaa_STO_Ciro_SonHafta,
                NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta,
                NVL(IKDD.KazananKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta,0) AS Iddaa_STO_Kazanan_SonHafta,
                NVL(IKDD.KaybedenKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta,0) AS Iddaa_STO_Kaybeden_SonHafta,
                NVL(IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
                NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
                NVL(IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
                NVL(IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
                IKDD.KaybedenKuponTutar_SonHafta,
                IKDD.KaybedenKuponTutar_SonAy,
                IKDD.KaybedenKuponTutar_Son3Ay,
                IKDD.KaybedenKuponTutar_Son6Ay,
                IKDD.KaybedenKuponTutar_Son12Ay,
                IKDD.KazananKuponTutar_SonHafta,
                IKDD.KazananKuponTutar_SonAy,
                IKDD.KazananKuponTutar_Son3Ay,
                IKDD.KazananKuponTutar_Son6Ay,
                IKDD.KazananKuponTutar_Son12Ay
            from crm_DM.BONUS_CALISMA_RT_tmp B
            left join CRM_DM.DM_IDDAA_KUPONDURUM_DAILY IKDD on B.CUSTOMER_ID=IKDD.CUSTOMER_ID
            left join CRM_DM.DM_STO_KUPONDURUM_DAILY SKDD on B.CUSTOMER_ID=SKDD.CUSTOMER_ID
        ) S
          ON (A.CUSTOMER_ID = S.CUSTOMER_ID)
        when matched then update
        set
            A.Iddaa_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
            A.BASKETBALL_CIRO_SonHafta_BONUS_HARIC = S.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
            A.KaybedenKuponTutar_SonHafta_BONUS_HARIC = S.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
            A.KazananKuponTutar_SonHafta_BONUS_HARIC = S.KazananKuponTutar_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
            A.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Ciro_SonHafta = S.Iddaa_STO_Ciro_SonHafta,
            A.Iddaa_STO_Degerlendirilmemis_SonHafta = S.Iddaa_STO_Degerlendirilmemis_SonHafta,
            A.Iddaa_STO_Kazanan_SonHafta = S.Iddaa_STO_Kazanan_SonHafta,
            A.Iddaa_STO_Kaybeden_SonHafta = S.Iddaa_STO_Kaybeden_SonHafta,
            A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC = S.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
            A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
            A.KaybedenKuponTutar_SonHafta = S.KaybedenKuponTutar_SonHafta,
            A.KaybedenKuponTutar_SonAy = S.KaybedenKuponTutar_SonAy,
            A.KaybedenKuponTutar_Son3Ay = S.KaybedenKuponTutar_Son3Ay,
            A.KaybedenKuponTutar_Son6Ay = S.KaybedenKuponTutar_Son6Ay,
            A.KaybedenKuponTutar_Son12Ay = S.KaybedenKuponTutar_Son12Ay,
            A.KazananKuponTutar_SonHafta = S.KazananKuponTutar_SonHafta,
            A.KazananKuponTutar_SonAy = S.KazananKuponTutar_SonAy,
            A.KazananKuponTutar_Son3Ay = S.KazananKuponTutar_Son3Ay,
            A.KazananKuponTutar_Son6Ay = S.KazananKuponTutar_Son6Ay,
            A.KazananKuponTutar_Son12Ay = S.KazananKuponTutar_Son12Ay
        ;
        commit;
    end;
-----------------------------------------------------------------------------------------------------------------------------------------------
    procedure p_bc_update_02 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING (select customer_id from lbrdwh.tribun_users WHERE  IS_AUTHOR=1) TR
        ON (BC.CUSTOMER_id = TR.CUSTOMER_id)
        WHEN MATCHED THEN UPDATE SET BC.TRIBUNDISCARD=1
        ;
        commit;
    end;
    procedure p_bc_update_03 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING (select customer_id from CRM_DM.tribun_dashboard_vip_list WHERE STATUS=1) TDVL
        ON (BC.CUSTOMER_id = TDVL.CUSTOMER_id)
        WHEN MATCHED THEN UPDATE SET BC.TRIBUNDISCARD=1
        ;
        commit;
    end;
    procedure p_bc_update_04 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING (select DISTINCT userid from CRM_DM.Aramalar_Teklifler  WHERE TRUNC(SYSDATE) BETWEEN BASLANGICTAR AND BITISTAR) ART
        ON (BC.USERID = ART.USERID)
        WHEN MATCHED THEN UPDATE SET BC.YuzdeTeklifDiscard=1

        ;
        commit;
    end;
    procedure p_bc_update_05 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING CRM_DM.YuklemeDisi YD
        ON (BC.USERID = YD.USERID)
        WHEN MATCHED THEN UPDATE SET BC.DigerDiscard=1
        ;
        commit;
    end;
    procedure p_bc_update_06 is
    begin
        null;
    end;
    procedure p_bc_update_07 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING lbrdwh.customer_restricted_bonus CRB
        ON (BC.CUSTOMER_ID = CRB.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE SET BC.DigerDiscard=3
        ;
        commit;
    end;
    procedure p_bc_update_08 is
    begin
        update /*+ parallel(4) */ crm_DM.BONUS_CALISMA_RT_tmp
                    set Para_Bonus_Kontrol=case
                    when NVL(Ciro_Son12Ay,0)=0 then -10
                    when NVL(SonParaTransferiUzerindenGecenSure,400)=400 then -9
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)>0 then -8
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)>0 then -7
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<10 then -6
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<10 then -5
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<30 then -4
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.07 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)<=0 then -3
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonBonusYuklemeUzerindenGecenSure,400)<30 then -2
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)>0.05 and NVL(SonParaTransferiUzerindenGecenSure,400)-NVL(SonBonusYuklemeUzerindenGecenSure,400)<=0 then -1
                    when NVL(Ciro_Son12Ay,0)>0 and NVL(BonusKullanım_Son12Ay,0)*1.0/NVL(Ciro_Son12Ay,0)<=0.05 then
                        case
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=10 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 0
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 1
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 5
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=30 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 1
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 7
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 8
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=60 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 2
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 6
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 8
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 9
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)<=90 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 3
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 7
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 9
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 10
                            end
                        when NVL(SonParaTransferiUzerindenGecenSure,400)>90 then
                            case
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=10 then 4
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=20 then 5
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=30 then 6
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=60 then 8
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)<=90 then 9
                            when NVL(SonBonusYuklemeUzerindenGecenSure,400)>90 then 10
                            end
                        end
                    else 99 end
                    ;
                    commit;

    end;
    procedure p_bc_update_09 is
    begin
        update /*+ parallel(4) */  crm_DM.BONUS_CALISMA_RT_tmp
        set
        OyunGunRatio_SonHafta=case when UyelikTarihi > TRUNC(SYSDATE)-7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_SonHafta,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_SonHafta,0)*1.0/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_SonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_SonAy,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_SonAy,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son3Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son3Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son6Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son6Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        OyunGunRatio_Son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(OyunGunAdet_Son12Ay,0)*1.0/UyelikSuresi else NVL(OyunGunAdet_Son12Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_SonHafta=case when UyelikTarihi > TRUNC(SYSDATE)-7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_SonHafta,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_SonHafta,0)*1.0/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_SonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_SonAy,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_SonAy,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son3Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son3Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son6Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son6Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        LoginGunRatio_Son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(LoginGunAdet_Son12Ay,0)*1.0/UyelikSuresi else NVL(LoginGunAdet_Son12Ay,0)*1.0/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end
        ;
        commit;
    end;
    procedure p_bc_update_10 is
    begin
        update /*+ parallel(4) */  crm_DM.BONUS_CALISMA_RT_tmp
        set
        PayoutRatio_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then null else NVL(Payout_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        PayoutRatio_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then null else NVL(Payout_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        PayoutRatio_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then null else NVL(Payout_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        PayoutRatio_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then null else NVL(Payout_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        PayoutRatio_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then null else NVL(Payout_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end
        ;
        commit;
    end;
    procedure p_bc_update_11 is
    begin
        update /*+ parallel(4) */  crm_DM.BONUS_CALISMA_RT_tmp
        set
        BASKETBALL_RATIO_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then null else NVL(BASKETBALL_CIRO_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        BASKETBALL_RATIO_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then null else NVL(BASKETBALL_CIRO_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        BASKETBALL_RATIO_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        BASKETBALL_RATIO_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        BASKETBALL_RATIO_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then null else NVL(BASKETBALL_CIRO_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Iddaa_Ciro_Pay_SonHafta=case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_SonHafta,0)/NVL(Ciro_SonHafta,0) end,
        Iddaa_Ciro_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_SonAy,0)/NVL(Ciro_SonAy,0) end,
        Iddaa_Ciro_Pay_Son3Ay=case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son3Ay,0)/NVL(Ciro_Son3Ay,0) end,
        Iddaa_Ciro_Pay_Son6Ay=case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son6Ay,0)/NVL(Ciro_Son6Ay,0) end,
        Iddaa_Ciro_Pay_Son12Ay=case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_Son12Ay,0)/NVL(Ciro_Son12Ay,0) end,
        MP_Ciro_Pay_SonHafta=case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(MP_Ciro_SonHafta,0)/NVL(Ciro_SonHafta,0) end,
        MP_Ciro_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(MP_Ciro_SonAy,0)/NVL(Ciro_SonAy,0) end,
        MP_Ciro_Pay_Son3Ay=case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(MP_Ciro_Son3Ay,0)/NVL(Ciro_Son3Ay,0) end,
        MP_Ciro_Pay_Son6Ay=case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(MP_Ciro_Son6Ay,0)/NVL(Ciro_Son6Ay,0) end,
        MP_Ciro_Pay_Son12Ay=case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(MP_Ciro_Son12Ay,0)/NVL(Ciro_Son12Ay,0) end
        ;
        commit;
    end;
    procedure p_bc_update_12 is
    begin
        update /*+ parallel(4) */  crm_DM.BONUS_CALISMA_RT_tmp
        set
        Iddaa_Ciro_3OranAltı_Pay_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        Iddaa_Ciro_3OranAltı_Pay_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        Iddaa_Ciro_3OranAltı_Pay_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_3OranAltı_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_SonHafta=case when NVL(Iddaa_Ciro_SonHafta,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_SonHafta,0)/NVL(Iddaa_Ciro_SonHafta,0) end,
        Iddaa_Ciro_5OranAltı_Pay_SonAy=case when NVL(Iddaa_Ciro_SonAy,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_SonAy,0)/NVL(Iddaa_Ciro_SonAy,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son3Ay=case when NVL(Iddaa_Ciro_Son3Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son3Ay,0)/NVL(Iddaa_Ciro_Son3Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son6Ay=case when NVL(Iddaa_Ciro_Son6Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son6Ay,0)/NVL(Iddaa_Ciro_Son6Ay,0) end,
        Iddaa_Ciro_5OranAltı_Pay_Son12Ay=case when NVL(Iddaa_Ciro_Son12Ay,0)=0 then 0 else NVL(Iddaa_Ciro_5OranAltı_Son12Ay,0)/NVL(Iddaa_Ciro_Son12Ay,0) end,
        Haftaici_Ogle_Pay_SonAy=case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(Haftaici_Ogle_SonAy,0)/NVL(Ciro_SonAy,0) end
        ;
        commit;
    end;
    procedure p_bc_update_13 is
    begin
        update /*+ parallel(4) */  crm_DM.BONUS_CALISMA_RT_tmp
        set
        Ciro_pMonth_sonHafta=case when UyelikTarihi > TRUNC(SYSDATE) - 7 /*dateadd(week, -1, @BASLANGIC_TAR)*/ then NVL(Ciro_SonHafta,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_SonHafta,0)*30.00/(TRUNC(SYSDATE)-TO_DATE(TO_CHAR(TRUNC(SYSDATE)-7)))/*(datediff(day, dateadd(week, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_sonAy=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-1) /*dateadd(month, -1, @BASLANGIC_TAR)*/ then NVL(Ciro_SonAy,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_SonAy,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-1))/*(datediff(day, dateadd(month, -1, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son3Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-3) /*dateadd(month, -3, @BASLANGIC_TAR)*/ then NVL(Ciro_Son3Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son3Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-3))/*(datediff(day, dateadd(month, -3, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son6Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-6) /*dateadd(month, -6, @BASLANGIC_TAR)*/ then NVL(Ciro_Son6Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son6Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-6))/*(datediff(day, dateadd(month, -6, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end,
        Ciro_pMonth_son12Ay=case when UyelikTarihi > ADD_MONTHS(TRUNC(SYSDATE),-12) /*dateadd(month, -12, @BASLANGIC_TAR)*/ then NVL(Ciro_Son12Ay,0)*30.00/(case when UyelikSuresi<15 then 15 else UyelikSuresi end) else NVL(Ciro_Son12Ay,0)*30.00/(TRUNC(SYSDATE)-ADD_MONTHS(TRUNC(SYSDATE),-12))/*(datediff(day, dateadd(month, -12, @BASLANGIC_TAR), @BASLANGIC_TAR))*/ end
        ;
        commit;
    end;
    procedure p_bc_update_14 is
    begin
        declare
                pW1 number(22,6):=0.10;
                pW2 number(22,6):=0.40;
                pW3 number(22,6):=0.30;
                pW4 number(22,6):=0.15;
                pW5 number(22,6):=0.05;

        begin

            update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
            set
            Ciro_pMonth_Max=case
            when
                (case
                when Ciro_pMonth_sonHafta>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonHafta>=Ciro_pMonth_sonAy and Ciro_pMonth_sonHafta>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son12Ay then (Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)
                when Ciro_pMonth_sonAy>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonAy>=Ciro_pMonth_sonAy and Ciro_pMonth_sonAy>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son12Ay then Ciro_pMonth_sonAy
                when Ciro_pMonth_son3Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son3Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son3Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son3Ay
                when Ciro_pMonth_son6Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son6Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son6Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son6Ay
                when Ciro_pMonth_son12Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son12Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son12Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son12Ay
                else 0 end)>Ciro_Donem_Max then Ciro_Donem_Max
            else (case
                when Ciro_pMonth_sonHafta>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonHafta>=Ciro_pMonth_sonAy and Ciro_pMonth_sonHafta>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonHafta>=Ciro_pMonth_son12Ay then (Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)
                when Ciro_pMonth_sonAy>=Ciro_pMonth_sonHafta and Ciro_pMonth_sonAy>=Ciro_pMonth_sonAy and Ciro_pMonth_sonAy>=Ciro_pMonth_son3Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son6Ay and Ciro_pMonth_sonAy>=Ciro_pMonth_son12Ay then Ciro_pMonth_sonAy
                when Ciro_pMonth_son3Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son3Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son3Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son3Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son3Ay
                when Ciro_pMonth_son6Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son6Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son6Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son6Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son6Ay
                when Ciro_pMonth_son12Ay>=Ciro_pMonth_sonHafta and Ciro_pMonth_son12Ay>=Ciro_pMonth_sonAy and Ciro_pMonth_son12Ay>=Ciro_pMonth_son3Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son6Ay and Ciro_pMonth_son12Ay>=Ciro_pMonth_son12Ay then Ciro_pMonth_son12Ay
                else 0 end)
            end,
            Login_Ratio_Max=case
            when LoginGunRatio_sonHafta>=LoginGunRatio_sonHafta and LoginGunRatio_sonHafta>=LoginGunRatio_sonAy and LoginGunRatio_sonHafta>=LoginGunRatio_son3Ay and LoginGunRatio_sonHafta>=LoginGunRatio_son6Ay and LoginGunRatio_sonHafta>=LoginGunRatio_son12Ay then (LoginGunRatio_sonHafta*0.1+LoginGunRatio_sonAy*0.9)
            when LoginGunRatio_sonAy>=LoginGunRatio_sonHafta and LoginGunRatio_sonAy>=LoginGunRatio_sonAy and LoginGunRatio_sonAy>=LoginGunRatio_son3Ay and LoginGunRatio_sonAy>=LoginGunRatio_son6Ay and LoginGunRatio_sonAy>=LoginGunRatio_son12Ay then LoginGunRatio_sonAy
            when LoginGunRatio_son3Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son3Ay>=LoginGunRatio_sonAy and LoginGunRatio_son3Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son3Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son3Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son3Ay
            when LoginGunRatio_son6Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son6Ay>=LoginGunRatio_sonAy and LoginGunRatio_son6Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son6Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son6Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son6Ay
            when LoginGunRatio_son12Ay>=LoginGunRatio_sonHafta and LoginGunRatio_son12Ay>=LoginGunRatio_sonAy and LoginGunRatio_son12Ay>=LoginGunRatio_son3Ay and LoginGunRatio_son12Ay>=LoginGunRatio_son6Ay and LoginGunRatio_son12Ay>=LoginGunRatio_son12Ay then LoginGunRatio_son12Ay
            else 0 end,
            Oyun_Ratio_Max=case
            when OyunGunRatio_sonHafta>=OyunGunRatio_sonHafta and OyunGunRatio_sonHafta>=OyunGunRatio_sonAy and OyunGunRatio_sonHafta>=OyunGunRatio_son3Ay and OyunGunRatio_sonHafta>=OyunGunRatio_son6Ay and OyunGunRatio_sonHafta>=OyunGunRatio_son12Ay then (OyunGunRatio_sonHafta*0.1+OyunGunRatio_sonAy*0.9)
            when OyunGunRatio_sonAy>=OyunGunRatio_sonHafta and OyunGunRatio_sonAy>=OyunGunRatio_sonAy and OyunGunRatio_sonAy>=OyunGunRatio_son3Ay and OyunGunRatio_sonAy>=OyunGunRatio_son6Ay and OyunGunRatio_sonAy>=OyunGunRatio_son12Ay then OyunGunRatio_sonAy
            when OyunGunRatio_son3Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son3Ay>=OyunGunRatio_sonAy and OyunGunRatio_son3Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son3Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son3Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son3Ay
            when OyunGunRatio_son6Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son6Ay>=OyunGunRatio_sonAy and OyunGunRatio_son6Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son6Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son6Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son6Ay
            when OyunGunRatio_son12Ay>=OyunGunRatio_sonHafta and OyunGunRatio_son12Ay>=OyunGunRatio_sonAy and OyunGunRatio_son12Ay>=OyunGunRatio_son3Ay and OyunGunRatio_son12Ay>=OyunGunRatio_son6Ay and OyunGunRatio_son12Ay>=OyunGunRatio_son12Ay then OyunGunRatio_son12Ay
            else 0 end,
            Ciro_Ort_W=(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)*pW1+Ciro_pMonth_SonAy*pW2+Ciro_pMonth_Son3Ay*pW3+Ciro_pMonth_Son6Ay*pW4+Ciro_pMonth_Son12Ay*pW5,
            LoginGun_Ort_W=LoginGunRatio_SonHafta*pW1+LoginGunRatio_SonAy*pW2+LoginGunRatio_Son3Ay*pW3+LoginGunRatio_Son6Ay*pW4+LoginGunRatio_Son12Ay*pW5,
            OyunGun_Ort_W=OyunGunRatio_SonHafta*pW1+OyunGunRatio_SonAy*pW2+OyunGunRatio_Son3Ay*pW3+OyunGunRatio_Son6Ay*pW4+OyunGunRatio_Son12Ay*pW5,
            Bonus_Oran_W=(case when NVL(Ciro_SonHafta,0)=0 then 0 else NVL(BonusYukleme_SonHafta,0)*pW1/NVL(Ciro_SonHafta,0) end)+
            (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)*pW2/NVL(Ciro_SonAy,0) end)+
            (case when NVL(Ciro_Son3Ay,0)=0 then 0 else NVL(BonusYukleme_Son3Ay,0)*pW3/NVL(Ciro_Son3Ay,0) end)+
            (case when NVL(Ciro_Son6Ay,0)=0 then 0 else NVL(BonusYukleme_Son6Ay,0)*pW4/NVL(Ciro_Son6Ay,0) end)+
            (case when NVL(Ciro_Son12Ay,0)=0 then 0 else NVL(BonusYukleme_Son12Ay,0)*pW5/NVL(Ciro_Son12Ay,0) end),
            Ticket_Ort_W=(case when NVL(OyunGunAdet_SonHafta,0)=0 then 0 else NVL(Ciro_SonHafta,0)*pW1/NVL(OyunGunAdet_SonHafta,0) end)+
            (case when NVL(OyunGunAdet_SonAy,0)=0 then 0 else NVL(Ciro_SonAy,0)*pW2/NVL(OyunGunAdet_SonAy,0) end)+
            (case when NVL(OyunGunAdet_Son3Ay,0)=0 then 0 else NVL(Ciro_Son3Ay,0)*pW3/NVL(OyunGunAdet_Son3Ay,0) end)+
            (case when NVL(OyunGunAdet_Son6Ay,0)=0 then 0 else NVL(Ciro_Son6Ay,0)*pW4/NVL(OyunGunAdet_Son6Ay,0) end)+
            (case when NVL(OyunGunAdet_Son12Ay,0)=0 then 0 else NVL(Ciro_Son12Ay,0)*pW5/NVL(OyunGunAdet_Son12Ay,0) end)
            ;
         end;
         commit;
    end;
    procedure p_bc_update_15 is
    begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
            set
            Log_Ciro_Ort_W=case when NVL(Ciro_Ort_W,0)<1 then 0 else ln(Ciro_Ort_W) end,
            Log_Ticket_Ort_W=case when NVL(Ticket_Ort_W,0)<1 then 0 else ln(Ticket_Ort_W) end,
            Ciro_Score1=case when NVL(Ciro_pMonth_Max,0)<3 then 0
                            when Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9<1 then 0
                 else
                    (case when ln(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)/ln(Ciro_pMonth_Max)>1 then 1 else ln(Ciro_pMonth_sonHafta*0.1+Ciro_pMonth_sonAy*0.9)/ln(Ciro_pMonth_Max) end)
                 end,
            Ciro_Score2=case when NVL(Ciro_pMonth_Max,0)<3 then 0
                 when Ciro_pMonth_sonAy<1 then 0
                 else
                    (case when ln(Ciro_pMonth_sonAy)/ln(Ciro_pMonth_Max)>1 then 1 else ln(Ciro_pMonth_sonAy)/ln(Ciro_pMonth_Max) end)
                 end
                 ;
                 commit;
    end;
    procedure p_bc_update_16 is
    begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        Login_Score=case when SonLoginUzerindenGecenSure is null then 0
                         when NVL(Login_Ratio_Max,0)<0.03 then 0
                         else power((1-(case when NVL(Login_Ratio_Max,0)>0.95 then 0.95 else NVL(Login_Ratio_Max,0) end)),(SonLoginUzerindenGecenSure-1)) end,
        Game_Score=case when SonOyunUzerindenGecenSure is null then 0
                         when NVL(Ciro_Score1,0)=0 then 0
                         when NVL(Ciro_Score2,0)=0 then 0
                         when NVL(Oyun_Ratio_Max,0)<0.03 then 0
                         else power((1-(case when NVL(Oyun_Ratio_Max,0)>0.95 then 0.95 else NVL(Oyun_Ratio_Max,0) end)),(SonOyunUzerindenGecenSure-1)) end
                        ;
                        commit;
    end;
    procedure p_bc_update_17 is
    begin
        declare
                pParam1_CiroSonHafta number(22,6):=0.4;
                pParam2_CiroSonAy    number(22,6):=0.6;
                pParam3_Login	     number(22,6):=0.2;
                pParam4_SonOyun      number(22,6):=0.8;
        begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        Alarm_Score=power(Ciro_Score1*pParam1_CiroSonHafta+Ciro_Score2*pParam2_CiroSonAy-1,2)+power(Login_Score*pParam3_Login+Game_Score*pParam4_SonOyun-1,2)
        ;
        end;
        commit;
    end;
    procedure p_bc_update_18 is
    begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        Alarm=
        case
        when Alarm_Score> 1.1 then 10
        when Alarm_Score> 0.95 then 9
        when Alarm_Score> 0.85 then 8
        when Alarm_Score> 0.75 then 7
        when Alarm_Score> 0.65 then 6
        when Alarm_Score> 0.55 then 5
        when Alarm_Score> 0.45 then 4
        when Alarm_Score> 0.35 then 3
        when Alarm_Score> 0.25 then 2
        when Alarm_Score> 0.15 then 1
        else 0 end
        ;
        commit;
    end;
    procedure p_bc_update_19 is
    begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        Alarm=10
        where Alarm is null
        ;
        commit;
    end;
    procedure p_bc_update_20 is
    begin
        MERGE  /*+ parallel(4) */into CRM_DM.BONUS_CALISMA_RT_tmp BC
    USING
    (select /*+ parallel(4) */ CN.CUSTOMER_ID,RF.USERID,CN.BIRTHDATE,
    TO_DATE(to_char(sysdate,'yyyy') || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth2,
    TO_DATE(to_char(sysdate,'yyyy')-1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth3,
    TO_DATE(to_char(sysdate,'yyyy')+1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as birth4,
    TO_DATE(to_char(sysdate,'yyyy') || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar2,
    TO_DATE(to_char(sysdate,'yyyy')-1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar3,
    TO_DATE(to_char(sysdate,'yyyy')+1 || decode(to_char(trunc(cast(birthdate as date)),'mmdd'),'0229','0228', to_char(trunc(cast(birthdate as date)),'mmdd')),'YYYYMMDD') as uyeliktar4

    from lbrdwh.customer_new2 CN
    INNER JOIN CRM_DM.BONUS_CALISMA_RT_tmp BC
    ON CN.CUSTOMER_ID = BC.CUSTOMER_ID
    LEFT JOIN crm_DM.RakipFenomen RF
    ON BC.USERID = RF.USERID) MG
    ON (MG.CUSTOMER_ID=BC.CUSTOMER_ID)
    WHEN MATCHED THEN UPDATE SET
    DuzenliAksiyonKitle=
    case
    when UyelikSuresi between 2 and 8 and NVL(Ciro_Donem_Toplam,0)=0 and NVL(BonusYukleme_SonAy,0)=0 then 'Yeni Uye-Oyun Yok'
    when UyelikSuresi<=30 and SonOyunUzerindenGecenSure between 4 and 10 and SonPayoutUzerindenGecenSure is null and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Payout Yok'
    when UyelikSuresi between 10 and 16 and NVL(Ciro_SonAy,0)>=50 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Motivasyon'
    when UyelikSuresi between 24 and 30 and NVL(Ciro_SonAy,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(BAKIYE,0)+NVL(BONUS_BAKIYE,0)<3 then 'Yeni Uye-Motivasyon'
    when KaybedenKuponTutar_SonHafta_BONUS_HARIC>=100 and NVL(PayoutRatio_SonHafta,0)<0.25 and NVL(Alarm,10)>2 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(PayoutRatio_SonAy,0)<0.40 then 'Kaybedenler Kulubu'
    when UyelikSuresi>90 and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)=NVL(Ciro_Son3Ay,0)-NVL(BonusKullanım_Son3Ay,0)
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Geri Kazanılan-1'
    when UyelikSuresi>90 and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)>=100 and NVL(BonusYukleme_SonHafta,0)<=3
         and NVL(Ciro_SonHafta,0)-NVL(BonusKullanım_SonHafta,0)=NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0)
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Geri Kazanılan-2'
    when UyelikSuresi>30 and NVL(Ciro_SonAy,0)>=100 and SonOyunUzerindenGecenSure between 7 and 13 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01
         and NVL(Alarm,10)>4 then 'Mevcut Uye-Motivasyon'
    when UyelikSuresi>30 and NVL(TribunTakipciSayı,0)>=250 and NVL(Ciro_SonAy,0)>=250 and NVL(BonusYukleme_SonHafta,0)<=3
         and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)*1.0/NVL(Ciro_SonAy,0) end)<=0.01
         then 'Tribun-Motivasyon'
    when NVL(MG.USERID,'Yok')<>'Yok' and NVL(BonusYukleme_SonHafta,0)<=3 then 'Tribun-Motivasyon'
    when ActivityStatus='AKTIF' and SonOyunUzerindenGecenSure>15 and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Alarm,10)>4 then 'Mevcut Uye-Son donem oyun yok'
    when ActivityStatus<>'AKTIF' and SonOyunUzerindenGecenSure>30 and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Alarm,10)>4 then 'Mevcut Uye-Inaktif'
    when ( (trunc(sysdate) - birth2 between -3 and 3)/*(datediff(day, YMD(year(getdate()), month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
            or (trunc(sysdate) - birth3 between -3 and 3)/*(datediff(day, YMD(year(getdate())-1, month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
            or (trunc(sysdate) - birth4 between -3 and 3)/*(datediff(day, YMD(year(getdate())+1, month(CN.BIRTHDATE), day(CN.BIRTHDATE)), getdate()) between -3 and 3)*/
               )
         and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Ciro_SonAy,0)>=100 and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01 then 'Mevcut Uye-Dogumgunu'
    when UyelikSuresi>30
         and ((trunc(sysdate) - uyeliktar2 between -3 and 3)/*(datediff(day, YMD(year(getdate()), month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               or (trunc(sysdate) - uyeliktar3 between -3 and 3)/*(datediff(day, YMD(year(getdate())-1, month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               or (trunc(sysdate) - uyeliktar4 between -3 and 3)/*(datediff(day, YMD(year(getdate())+1, month(UyelikTarihi), day(UyelikTarihi)), getdate()) between -3 and 3)*/
               )
         and NVL(BonusYukleme_SonHafta,0)<=3 and NVL(Ciro_SonAy,0)>=100 and (case when NVL(Ciro_SonAy,0)=0 then 0 else NVL(BonusYukleme_SonAy,0)/NVL(Ciro_SonAy,0) end)<=0.01 then 'Mevcut Uye-Uyelik yildonumu'
    /*
    when UyelikSuresi>30 and isnull(Ciro_SonAy,0)>=100 and SonOyunUzerindenGecenSure between 7 and 13 and isnull(SonPayoutUzerindenGecenSure,999)>SonOyunUzerindenGecenSure+10
         and (case when isnull(Ciro_SonAy,0)=0 then 0 else isnull(BonusYukleme_SonAy,0)/isnull(Ciro_SonAy,0) end)<=0.03
         and isnull(BAKIYE,0)+isnull(BONUS_BAKIYE,0)<3 and isnull(PayoutRatio_SonAy,0)<0.40 then 'Mevcut Uye-Payout Dusuk'
    */
    else null end
    WHERE
    BC.TribunDiscard is null
    and BC.YuzdeTeklifDiscard is null
    and NVL(BC.DigerDiscard,9) not in (1,3) ---Sorunlular ve restiricted olanlar
    and (NVL(BC.Ciro_Donem_Toplam,0)>0 or (BC.UyelikSuresi between 2 and 8 and NVL(BC.Ciro_Donem_Toplam,0)=0 ))
    ;
    commit;
    end;
    procedure p_bc_update_21 IS /*GEREK VAR MI?*/
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
                pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
        pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
        pSONGUN :=trunc(last_day(pBUGUN));
         begin
         select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
         into pAYLIK_YUKLEME_SAYI
         from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
         ;
         exception when no_data_found or too_many_rows then
           pAYLIK_YUKLEME_SAYI := 0;
         end;
        merge  /*+ parallel(4) */ into crm_dm.BONUS_CALISMA_RT_tmp A
            using crm_dm.Bonus_Yukleme_Kural B
                on (nvl(A.Ciro_Ort_W,0)>=B.Ciro_Alt and nvl(A.Ciro_Ort_W,0)<B.Ciro_Ust)
            when matched then update set
                OngorulenYuklemeAdet =
                    case when nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio>pAYLIK_YUKLEME_SAYI then round(nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio,0)
                         when nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio>=B.YuklemeAdet then round(nvl(Bonus_Talep_Yukleme_Adet_SonAy,0)*pYuklemeRatio,0)
                         else B.YuklemeAdet
                    end
            ;
            end;
        commit;

    end;
    procedure p_bc_update_22 is
    begin
        declare
                    pYuklemeRatio 		    number(22,6):=0.7;
                    pAlarmBasedBonusRatio 	number(22,6):=0.002;
        begin
            merge /*+ parallel(4) */ into crm_dm.BONUS_CALISMA_RT_tmp A
            using (select /*+ parallel(4) */ a.*, B.Yuzde, c.yuzde_alt,c.yuzde_ust  ----hangi kolonlar gerekiyorsa onları seç !!!!
                   from crm_dm.BONUS_CALISMA_RT_tmp A, crm_dm.Bonus_Yukleme_Kural B, crm_dm.Bonus_Yukleme_Kural_2 C
                   where nvl(A.Ciro_Ort_W,0)>=B.Ciro_Alt and nvl(A.Ciro_Ort_W,0)<B.Ciro_Ust
                     and A.Segment_Assigned=C.Segment )s
            on (a.customer_id = s.customer_id ) ----- burada kolon adına bakamadım, musteri_id?musteri_no ?
            when matched then update set
            OngorulenYuzde= case when nvl(BonusTalepkar,0)=1 and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.01 then 0.01
                                when UyelikSuresi<=30 and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.0125 then 0.0125
                                when DuzenliAksiyonKitle in ('Mevcut Uye-Uyelik yildonumu', 'Mevcut Uye-Dogumgunu','Mevcut Uye-Son donem oyun yok','Mevcut Uye-Inaktif','Kaybedenler Kulubu')
                                        and nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)<0.01 then 0.01
                                when DuzenliAksiyonKitle in ('Geri Kazanılan-1') then 0.0125
                                when DuzenliAksiyonKitle in ('Geri Kazanılan-2') then 0.0125
                                when nvl(Bonus_Oran_W,0)<s.Yuzde then s.Yuzde
                                when nvl(Bonus_Oran_W,0)>nvl(s.Yuzde_Ust,0.00625) then nvl(s.Yuzde_Ust,0.00625)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                                when nvl(Bonus_Oran_W,0)<nvl(s.Yuzde_Alt,0.00175) then nvl(s.Yuzde_Alt,0.00175)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                                else nvl(Bonus_Oran_W,0)*pYuklemeRatio+s.Yuzde*(1-pYuklemeRatio)
                            end + (nvl(Alarm,10)*pAlarmBasedBonusRatio/10)
            ;
        end;
        commit;
    end;
    procedure p_bc_update_23 IS /*GEREK VAR MI*/
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
                pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
        begin
                 select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
                 into pAYLIK_YUKLEME_SAYI
                 from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
                 ;
                 exception when no_data_found or too_many_rows then
                 pAYLIK_YUKLEME_SAYI := 0;
         end;
	update /*+ parallel(4) */ crm_dm.BONUS_CALISMA_RT_tmp
	set
	OngorulenBonus =
		case
			when nvl(MP_Ciro_Donem_Toplam,0)=nvl(Ciro_Donem_Toplam,0) and nvl(MP_Ciro_Donem_Toplam,0)>0 then 0
			when nvl(BonusYukleme_SonHafta,0)>=3 and (nvl(Ciro_SonHafta,0)-nvl(MP_Ciro_SonHafta,0))*OngorulenYuzde-nvl(BonusYukleme_SonHafta,0)<=0 then 0
			when nvl(BonusYukleme_SonAy,0)>=3 and (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.1-nvl(BonusYukleme_SonAy,0)<=0 then 0
			when nvl(BonusYukleme_Son3Ay,0)>=3 and (nvl(Ciro_Son3Ay,0)-nvl(MP_Ciro_Son3Ay,0))*OngorulenYuzde*1.2-nvl(BonusYukleme_Son3Ay,0)<=0 then 0
			when nvl(BonusYukleme_SonHafta,0)-nvl(Ciro_SonHafta,0)*0.015>0 then 0  --- breakeven 0.06'dan 0.015'ye update edildi
			when nvl(BonusYukleme_SonAy,0)-nvl(Ciro_SonAy,0)*0.015>0 then 0 --- breakeven 0.06'dan 0.015'ye update edildi
			when nvl(BonusYukleme_Son3Ay,0)-nvl(Ciro_Son3Ay,0)*0.015>0 then 0 --- breakeven 0.06'dan 0.015'ye update edildi
			when 28.00/nvl(OngorulenYuklemeAdet,0.01)/2>nvl(SonBonusYuklemeUzerindenGecenSure,99) then 0
			when Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 0
			when Ciro_Ort_W*OngorulenYuzde/pAYLIK_YUKLEME_SAYI-nvl(BonusYukleme_SonHafta,0)>0 and (Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet)>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when Ciro_Ort_W*OngorulenYuzde-nvl(BonusYukleme_SonAy,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when Ciro_Ort_W*3*OngorulenYuzde-nvl(BonusYukleme_Son3Ay,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet
			when (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 0
			else (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet
		end,
	OngorulenBonusNeden =
		case
			when nvl(MP_Ciro_Donem_Toplam,0)=nvl(Ciro_Donem_Toplam,0) and nvl(MP_Ciro_Donem_Toplam,0)>0 then 'MP Musterisi'
			when nvl(BonusYukleme_SonHafta,0)>=3 and (nvl(Ciro_SonHafta,0)-nvl(MP_Ciro_SonHafta,0))*OngorulenYuzde-nvl(BonusYukleme_SonHafta,0)<=0 then 'Son hafta yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_SonAy,0)>=3 and (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.1-nvl(BonusYukleme_SonAy,0)<=0 then 'Son ay yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_Son3Ay,0)>=3 and (nvl(Ciro_Son3Ay,0)-nvl(MP_Ciro_Son3Ay,0))*OngorulenYuzde*1.2-nvl(BonusYukleme_Son3Ay,0)<=0 then 'Son 3 ay yuklemesi ongorulenden yuksek - 0 bonus'
			when nvl(BonusYukleme_SonHafta,0)-nvl(Ciro_SonHafta,0)*0.015>0 then 'Son hafta bonus maliyeti yuksek - 0 bonus'
			when nvl(BonusYukleme_SonAy,0)-nvl(Ciro_SonAy,0)*0.015>0 then 'Son ay bonus maliyeti yuksek - 0 bonus'
			when nvl(BonusYukleme_Son3Ay,0)-nvl(Ciro_Son3Ay,0)*0.015>0 then 'Son 3 ay bonus maliyeti yuksek - 0 bonus'
			when 28.00/nvl(OngorulenYuklemeAdet,0.01)/2>nvl(SonBonusYuklemeUzerindenGecenSure,99) then 'Olması gerekenden daha sık yükleme - 0 bonus'
			when Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 'Hakedis yok - 0 bonus'
			when Ciro_Ort_W*OngorulenYuzde/pAYLIK_YUKLEME_SAYI-nvl(BonusYukleme_SonHafta,0)>0 and (Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet)>0 then 'Hakedise gore yukleme'
			when Ciro_Ort_W*OngorulenYuzde-nvl(BonusYukleme_SonAy,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then 'Hakedise gore yukleme'
			when Ciro_Ort_W*3*OngorulenYuzde-nvl(BonusYukleme_Son3Ay,0)>0 and Ciro_Ort_W*OngorulenYuzde*1.00/OngorulenYuklemeAdet>0 then 'Hakedise gore yukleme'
			when (nvl(Ciro_SonAy,0)-nvl(MP_Ciro_SonAy,0))*OngorulenYuzde*1.00/OngorulenYuklemeAdet=0 then 'Hakedis yok - 0 bonus'
			else 'Hakedise gore yukleme'
		end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_24 IS /*GEREK VAR MI?*/
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pYuklemeRatio number(22,6):=0.7;
	--pAlarmBasedBonusRatio number(22,6):=0.002;
        begin
                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
         begin
         select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
         into pAYLIK_YUKLEME_SAYI
         from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
         ;
         exception when no_data_found or too_many_rows then
         pAYLIK_YUKLEME_SAYI := 0;
         end;

        update /*+ parallel(4) */ crm_dm.BONUS_CALISMA_RT_tmp
        set
        OngorulenBonus= case when NVL(Bonus_Donem_Toplam,0)-NVL(Ciro_Donem_Toplam,0)*0.015<=0 --- breakeven 0.06'dan 0.015'ye update edildi
        then
            case
            when (Ciro_Ort_W*0.6+Ciro_pMonth_Max*0.2+Ciro_Donem_Max*0.2)*OngorulenYuzde*1.00/pAYLIK_YUKLEME_SAYI>OngorulenBonus
            then (Ciro_Ort_W*0.6+Ciro_pMonth_Max*0.2+Ciro_Donem_Max*0.2)*OngorulenYuzde*1.00/pAYLIK_YUKLEME_SAYI
            else OngorulenBonus end
        else 0 end,
        OngorulenBonusNeden=case when NVL(Bonus_Donem_Toplam,0)-NVL(Ciro_Donem_Toplam,0)*0.015<=0 --- breakeven 0.06'dan 0.015'ye update edildi
        then 'Terk/Terke yakin musteriler icin yukleme'
        else 'Hakedis yok - 0 bonus' end
        where DuzenliAksiyonKitle in ('Mevcut Uye-Son donem oyun yok','Mevcut Uye-Inaktif')
        ;
        commit;
        end;
    end;
    procedure p_bc_update_25 is
    begin
        update /*+ parallel(4) */crm_DM.BONUS_CALISMA_RT_tmp
        set
            OngorulenBonus =
                case
                    when nvl(OngorulenBonus,0)<1 then 0
                    when nvl(OngorulenBonus,0)<=3 then 3
                    when nvl(OngorulenBonus,0)<=5 then 5
                    when OngorulenBonus<=30 then round(OngorulenBonus/5,0)*5
                    when OngorulenBonus<=250 then round(OngorulenBonus/10,0)*10
                    when OngorulenBonus<=500 then round(OngorulenBonus/20,0)*20
                    when OngorulenBonus<=1000 then round(OngorulenBonus/25,0)*25
                    else round(OngorulenBonus/50,0)*50 end,
                    OngorulenBonusNeden= case
                    when nvl(OngorulenBonus,0)<1 then 'Cok dusuk hakedise istinaden - 0 bonus'
                    else OngorulenBonusNeden
                end
        where OngorulenBonus>0
        ;
        commit;
    end;
    procedure p_bc_insert_01 IS  /*BAKILACAK*/
    begin
      execute immediate 'TRUNCATE TABLE CRM_DM.BONUS_CALISMA_TEKLIF_RT_TEMP';

        insert /*+ append nologging parallel(4) */ into crm_DM.Bonus_Calisma_Teklif_RT_temp
        select /*+ parallel(4) */
        A.CUSTOMER_ID,
        (A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Ciro
        +A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Kaybedilen
        +A.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC*B.Teklif_Yuzde_Kazanilan
        +NVL(A.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_Basketbol
        +NVL(A.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_3OranAltı_Kaybeden
        +NVL(A.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,0)*B.Teklif_Yuzde_5OranAltı_Kaybeden) as Bonus_Teklif,
        TRUNC(SYSDATE) as DWH_DATE
        from crm_DM.BONUS_CALISMA_RT_tmp A
        join crm_DM.Aramalar_Teklifler B on A.USERID=B.USERID and TRUNC(SYSDATE) between BaslangicTar and BitisTar
        ;
        commit;
    end;
    procedure p_bc_update_26 is
    begin
        MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_RT_tmp A
        USING (select  CUSTOMER_ID, sum(Bonus_Teklif) AS  Bonus_Teklif
        FROM crm_DM.Bonus_Calisma_Teklif_RT_temp
        GROUP BY CUSTOMER_ID
        ) B
        ON (A.CUSTOMER_ID=B.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE
        SET
        OngorulenBonus= case when TO_CHAR(SYSDATE,'DY')='Fri' then
                            case
                            when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC=0 and A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC=0 then 0
                            when Segment_Assigned='A0' and B.Bonus_Teklif between 3 and 20 then 20
                            when Segment_Assigned in ('A1','A2','A3','A7','A8') and B.Bonus_Teklif between 3 and 10 then 10
                            when B.Bonus_Teklif<1 then 0
                            when B.Bonus_Teklif<3 then 3
                            when B.Bonus_Teklif<=100 then ceil(B.Bonus_Teklif)
                            when B.Bonus_Teklif<=250 then ceil(B.Bonus_Teklif/5)*5
                            when B.Bonus_Teklif<=500 then ceil(B.Bonus_Teklif/10)*10 ---20
                            when B.Bonus_Teklif<=1000 then ceil(B.Bonus_Teklif/20)*20 ---25
                            else ceil(B.Bonus_Teklif/25)*25 ---50
                            end
        else (case when OngorulenBonus>500 then 500 else OngorulenBonus end) end, --- 20181121'de eklendi.
        OngorulenBonusNeden=case when TO_CHAR(SYSDATE,'DY')='Friday' then
                            case
                            when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC=0 and A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC=0 then 'Teklif-Bonus haric oyun yok - 0 bonus'
                            when Segment_Assigned='A0' and B.Bonus_Teklif between 3 and 20 then 'Teklif-A0 üye için minimum 20 TL bonus'
                            when Segment_Assigned in ('A1','A2','A3','A7','A8') and B.Bonus_Teklif between 3 and 10 then 'Teklif-Platin üye için minimum 10 TL bonus'
                            when B.Bonus_Teklif<1 then 'Teklif-Cok dusuk hakedis - 0 bonus'
                            else 'Teklif-Hakedise gore yukleme'
                            end
        else
        (case when OngorulenBonus>0 then 'Teklif-Cuma haric hakedis var' else 'Teklif-Cuma haric hakedis yok' end)
        end
        ;
        commit;
    end;
    procedure p_bc_update_27 is
    begin
       declare
            pMIN_Bonus_Ratio number(22,6):=0.005;
            pBASLANGIC_TAR   date:=TRUNC(SYSDATE);
        begin

            MERGE into CRM_DM.BONUS_CALISMA_RT_tmp A
            USING (select userid from crm_DM.ARAMALAR_TEKLIFLER
                   where pBASLANGIC_TAR between BaslangicTar and BitisTar
                        and Teklif_Yuzde_Kaybedilen>0
                        and TO_CHAR(SYSDATE,'DY')='Fri') B
            ON (A.USERID=B.USERID)
            WHEN MATCHED THEN UPDATE
            set
            OngorulenBonus= case
            when
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)>OngorulenBonus
            THEN
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)
            else OngorulenBonus end,
            OngorulenBonusNeden= case
            when
                (case
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<1 then 0
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=30 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/5)*5
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=250 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/10)*10
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=500 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/20)*20
                when A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio<=1000 then ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/25)*25
                else ceil(A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*pMIN_Bonus_Ratio/50)*50 end)>OngorulenBonus
            THEN 'Teklif-Kaybeden kuponlar icin duzeltme'
            else OngorulenBonusNeden end
            ;
            commit;
            end;
    end;
    procedure p_bc_update_28 is
    begin
        declare
                pBUGUN  DATE:=TRUNC(SYSDATE);
                pGUN    DATE;
                pSONGUN DATE;
                pAYLIK_YUKLEME_SAYI number;
                pMax_OngorulenYuzde_for_low_Bonus number(22,6):=0.0025;
                pBASLANGIC_TAR DATE:=TRUNC(SYSDATE);
        begin

                pGUN :=trunc(last_day(pBUGUN)-1, 'mm');
                pSONGUN :=trunc(last_day(pBUGUN));
                 begin
                 select ceil(sum(case when GUN in ('Friday','Saturday') then 1 else 0 end)*1.0/2)
                 into pAYLIK_YUKLEME_SAYI
                 from crm_dm.Ay_Gunler where TARIH between pGUN and pSONGUN
                 ;
                 exception when no_data_found or too_many_rows then
                   pAYLIK_YUKLEME_SAYI := 0;
                end;

                MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_RT_tmp A
                USING crm_DM.ARAMALAR_TEKLIFLER B
                ON (A.USERID=B.USERID)
                WHEN MATCHED THEN UPDATE
                set
                OngorulenBonus= case
                when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI-OngorulenBonus>0
                then
                    case
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=30
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/5,0)*5
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=250
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/10,0)*10
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=500
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/20,0)*20
                    when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI<=1000
                            then round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/25,0)*25
                    else
                           round((NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI/50,0)*50
                    end
                else OngorulenBonus end,
                OngorulenBonusNeden=case
                when (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))*pMax_OngorulenYuzde_for_low_Bonus/pAYLIK_YUKLEME_SAYI-OngorulenBonus>0
                then 'Teklif-Dusuk bonuslar icin duzeltme'
                else OngorulenBonusNeden end
                where pBASLANGIC_TAR between BaslangicTar and BitisTar
                and (Teklif_Yuzde_Ciro>0 or Teklif_Yuzde_Kaybedilen>0 or Teklif_Yuzde_Kazanilan>0 or Teklif_Yuzde_Basketbol>0)
                and TO_CHAR(SYSDATE,'DY')='Fri'
                and NVL(OngorulenBonus,0)<250
                and (NVL(Ciro_SonAy,0)-NVL(BonusKullanım_SonAy,0))>=1000
                ;
                commit;
            end;
    end;
    procedure p_bc_update_29 is
    begin
       declare
                pBonusBalanceRatio number(22,6):=0.20; --- 2018-12-11'de değiştirildi. Eski değer: 0.3
            begin

            update /*+ parallel(4) */ crm_dm.BONUS_CALISMA_RT_tmp
            set
            OngorulenBonus= case
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 0
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and BONUS_BAKIYE>=OngorulenBonus*pBonusBalanceRatio then 0
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and NVL(Status_Desc,'XX')<>'Active' then 0
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle='Yeni Uye-Oyun Yok' then 3
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle in ('Geri Kazanılan-1','Geri Kazanılan-2') then (case when OngorulenBonus>500 then 500 else OngorulenBonus end)
            when YuzdeTeklifDiscard is null and NVL(BonusYukleme_SonAy,0)<10 and NVL(Alarm,10) in (0,1,2) then 0
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 then 50
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 then 20
            when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and OngorulenBonus>500 then 500
            when OngorulenBonus>500 and YuzdeTeklifDiscard is null then 500
            else OngorulenBonus end,
            OngorulenBonusNeden= case
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 'Fenomen/Yazar/VIP/Sorunlu/Calisan/Bonus kazanamaz nedeniyle - 0 bonus'
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and BONUS_BAKIYE>=OngorulenBonus*pBonusBalanceRatio then 'Bonus bakiyesi mevcut - 0 bonus'
            when YuzdeTeklifDiscard is null and OngorulenBonus>0 and NVL(Status_Desc,'XX')<>'Active' then 'Uye aktif degil - 0 bonus'
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle='Yeni Uye-Oyun Yok' then 'Duzenli Aksiyon Kitle Yuklemesi'
            when YuzdeTeklifDiscard is null and DuzenliAksiyonKitle in ('Geri Kazanılan-1','Geri Kazanılan-2') then 'Duzenli Aksiyon Kitle Yuklemesi'
            when YuzdeTeklifDiscard is null and NVL(BonusYukleme_SonAy,0)<10 and NVL(Alarm,10) in (0,1,2) then 'Bonus almayan loyal oyuncu - 0 bonus'
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 and YuzdeTeklifDiscard is not null then 'Teklif-A0 üye için minimum 50 TL bonus'
            when Segment_Assigned='A0' and OngorulenBonus>=3 and OngorulenBonus<50 then 'A0 üye için minimum 50 TL bonus'
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 and YuzdeTeklifDiscard is not null then 'Teklif-Platin üye için minimum 20 TL bonus'
            when Segment_Assigned in ('A1','A2','A3','A7','A8') and OngorulenBonus>=3 and OngorulenBonus<20 then 'Platin üye için minimum 20 TL bonus'
            when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and OngorulenBonus>500 then 'Duzenli Aksiyon Kitlesi/Bonus Talepkar icin maksimum 500 TL yukleme'
            when OngorulenBonus>500 and YuzdeTeklifDiscard is null then 'Hakedise gore maksimum 500 TL yukleme'
            when OngorulenBonus>0 and DuzenliAksiyonKitle is not null and OngorulenBonusNeden is null then 'Duzenli Aksiyon Kitle Yuklemesi/'||DuzenliAksiyonKitle
            else OngorulenBonusNeden end
            ;
            commit;
            end;

    end;
    procedure p_bc_update_30 is
    begin
        declare
                pMIN_Bonus_Ratio number(22,6):=0.005;
        begin

        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        Bonus_CuRe_Available=case
        when (case when BonusYukleme_SonHafta>0 and Ciro_SonHafta=0 then 99 when BonusYukleme_SonHafta=0 and Ciro_SonHafta=0 then 0 else BonusYukleme_SonHafta*1.0/Ciro_SonHafta end)>0.018 then 0
        when (case when BonusYukleme_SonAy>0 and Ciro_SonAy=0 then 99 when BonusYukleme_SonAy=0 and Ciro_SonAy=0 then 0 else BonusYukleme_SonAy*1.0/Ciro_SonAy end)>0.018 then 0
        when (case when BonusYukleme_Son3Ay>0 and Ciro_Son3Ay=0 then 99 when BonusYukleme_Son3Ay=0 and Ciro_Son3Ay=0 then 0 else BonusYukleme_Son3Ay*1.0/Ciro_Son3Ay end)>0.018 then 0
        else (Ciro_Ort_W*0.4+Ciro_pMonth_Max*0.3+Ciro_Donem_Max*0.3)*pMIN_Bonus_Ratio end
        ;
        commit;
        end;

    end;
    procedure p_bc_update_31 is
    begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        Bonus_CuRe_Available=case
        when NVL(Bonus_CuRe_Available,0)<1 then 0
        when NVL(Bonus_CuRe_Available,0)<=3 then 3
        when NVL(Bonus_CuRe_Available,0)<=5 then 5
        when Bonus_CuRe_Available<=30 then round(Bonus_CuRe_Available/5,0)*5
        when Bonus_CuRe_Available<=250 then round(Bonus_CuRe_Available/10,0)*10
        when Bonus_CuRe_Available<=500 then round(Bonus_CuRe_Available/20,0)*20
        else 500 end
        ;
        commit;
    end;
    procedure p_bc_update_32 is
    begin
        declare
                pBonusBalanceRatio number(22,6):=0.20; --- 2018-12-11'de değiştirildi. Eski değer: 0.3
        begin

        update /*+ parallel(4) */  crm_DM.BONUS_CALISMA_RT_tmp
        set
        Bonus_CuRe_Available=case
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and (TribunDiscard is not null or NVL(DigerDiscard,9) in (1,3)) then 0
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and BONUS_BAKIYE>=Bonus_CuRe_Available*pBonusBalanceRatio then 0
        when YuzdeTeklifDiscard is null and Bonus_CuRe_Available>0 and NVL(Status_Desc,'XX')<>'Active' then 0
        when Segment_Assigned='A0' and Bonus_CuRe_Available>=3 and Bonus_CuRe_Available<50 then 50
        when Segment_Assigned in ('A1','A2','A3','A7','A8') and Bonus_CuRe_Available>=3 and Bonus_CuRe_Available<20 then 20
        when (DuzenliAksiyonKitle is not null or NVL(BonusTalepkar,0)=1) and YuzdeTeklifDiscard is null and Bonus_CuRe_Available>500 then 500
        when Bonus_CuRe_Available>500 and YuzdeTeklifDiscard is null then 500
        else Bonus_CuRe_Available end
        ;
        commit;
        end;

    end;
    procedure p_bc_update_33 is
    begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        Bonus_CuRe_Available=OngorulenBonus
        where OngorulenBonus>0 and Bonus_CuRe_Available<OngorulenBonus
        ;
        commit;
    end;
    procedure p_bc_update_34 is
    begin
        update /*+ parallel(4) */  crm_dm.BONUS_CALISMA_RT_tmp
        set
        OngorulenBonusNeden=OngorulenBonusNeden||'/CuRe yukleme yapabilir'
        where Bonus_CuRe_Available>OngorulenBonus
        and OngorulenBonus=0
        ;
        commit;
    end;
    procedure p_bc_update_35 IS
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING
        (select LA.CUSTOMER_ID,
            sum(case when TRUNC(OPERATION_DATE)>=TRUNC(SYSDATE)-7 then AMOUNT else 0 end) as HP_YUKLEME_SonHafta,
            sum(case when TRUNC(OPERATION_DATE)>=ADD_MONTHS(TRUNC(SYSDATE),-1) then AMOUNT else 0 end) as HP_YUKLEME_SonAy
        from CRM_DM.BONUS_CALISMA_X BCX
        LEFT JOIN lbrdwh.LOYALTY_ACCOUNT_HISTORY LA
        ON BCX.CUSTOMER_ID = LA.CUSTOMER_ID
        WHERE TRUNC(OPERATION_DATE)>=ADD_MONTHS(TRUNC(SYSDATE),-1)
        AND LA.OPERATION_TYPE in (1,2,5)
        GROUP BY LA.CUSTOMER_ID
        ) MG
        ON (MG.CUSTOMER_ID=BC.CUSTOMER_ID)
        WHEN MATCHED THEN UPDATE SET
        HediyeKatalogPuan_Yukleme_SonAy=NVL(HP_YUKLEME_SonAy,0),
        HediyeKatalogPuan_Yukleme_SonHafta=NVL(HP_YUKLEME_SonHafta,0)
        ;
        commit;
    end;
    procedure p_bc_update_36 is
    begin
        declare
                pRETURN NUMBER(22,6):=0.02;
                pMIN_Ciro_LN NUMBER(22,6):=ln(3);
                pMAX_Ciro_LN NUMBER(22,6):=ln(100000);
                pMAX_Puan_Yuzde NUMBER(22,6);
                pMIN_Puan_Yuzde NUMBER(22,6);
                pSlope NUMBER(22,6);
        begin
                pMAX_Puan_Yuzde:=pRETURN*2;
                PMIN_Puan_Yuzde:=pRETURN*1;
        begin
                pSlope:=(pMAX_Puan_Yuzde-pMIN_Puan_Yuzde)/(pMAX_Ciro_LN-pMIN_Ciro_LN);
        end;
                update /*+ parallel(4) */ crm_dm.BONUS_CALISMA_RT_tmp
                set
                HediyeKatalogPuan_Oran=case
                            when (pMAX_Puan_Yuzde-pSlope*(LN(case when Ciro_Ort_W<3 then 3 else Ciro_Ort_W end)-pMIN_Ciro_LN))<pMIN_Puan_Yuzde then pMIN_Puan_Yuzde
                            else (pMAX_Puan_Yuzde-pSlope*(LN(case when Ciro_Ort_W<3 then 3 else Ciro_Ort_W end)-pMIN_Ciro_LN)) end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_37 is
    begin
        declare
                pRETURN NUMBER(22,6):=0.02;
                pdeviation NUMBER(22,6):=0.5;
        begin
        update  /*+ parallel(4) */ crm_dm.BONUS_CALISMA_RT_tmp
        set
        HediyeKatalogPuan= case
        when NVL(Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)>=100 and TO_CHAR(SYSDATE,'DY') != 'Fri' and NVL(Bonus_Oran_W,0)<=0.012
        then
            case
            when (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta<1000 then 1000
            when (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta>500000 then 500000
            else (HediyeKatalogPuan_Oran*exp(-power(Bonus_Oran_W/pRETURN/pdeviation,2))*Iddaa_STO_Ciro_SonHafta_BONUS_HARIC*3000)-HediyeKatalogPuan_Yukleme_SonHafta
            end
        else 0 end
        ;
        commit;
        end;
    end;
    procedure p_bc_update_38 is
    begin
        update  /*+ parallel(4) */ crm_dm.BONUS_CALISMA_RT_tmp
        set
        HediyeKatalogPuan=0
        where
        (nvl(DigerDiscard,9) in (1,3) or nvl(Status_Desc,'XX')!='Active')
        ;
        commit;
    end;
    procedure p_bc_update_39 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING (select * from CRM_DM.Aramalar_Teklifler
               where TRUNC(SYSDATE) between BaslangicTar and BitisTar and Teklif_Hediye_Katalog_Carpan>0 ) ART
        ON (BC.USERID = ART.USERID)
        WHEN MATCHED THEN UPDATE SET
			HediyeKatalogPuan=case when TO_CHAR(SYSDATE,'DY')='Fri' and NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)>0
                        then
                            case
                            when NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)*ART.Teklif_Hediye_Katalog_Carpan<2000 then 2000
                            else NVL(BC.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,0)*ART.Teklif_Hediye_Katalog_Carpan
                            end
                        else 0 end

        ;
        commit;
    end;
    procedure p_bc_update_40 is
    begin
        update /*+ parallel(4) */ crm_DM.BONUS_CALISMA_RT_tmp
        set
        HediyeKatalogPuan=case when HediyeKatalogPuan<500 then ceil(HediyeKatalogPuan/25)*25
                               when HediyeKatalogPuan<1000 then ceil(HediyeKatalogPuan/50)*50
                               when HediyeKatalogPuan<5000 then ceil(HediyeKatalogPuan/100)*100
                               when HediyeKatalogPuan<20000 then ceil(HediyeKatalogPuan/250)*250
                               when HediyeKatalogPuan<50000 then ceil(HediyeKatalogPuan/500)*500
                               when HediyeKatalogPuan<100000 then ceil(HediyeKatalogPuan/1000)*1000
                               when HediyeKatalogPuan<500000 then ceil(HediyeKatalogPuan/5000)*5000
                               when HediyeKatalogPuan<1000000 then ceil(HediyeKatalogPuan/10000)*10000
                               else ceil(HediyeKatalogPuan/25000)*25000 end
        ;
        commit;
    end;
    procedure p_bc_update_41 is
    begin
        MERGE into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING CRM_DM.YuklemeDisi YD
        ON (BC.USERID = YD.USERID)
        WHEN MATCHED THEN UPDATE SET
                        HediyeKatalogPuan=0
        WHERE
        (
        (NEDEN in ('VIPX','Vefat')) --- VIPX ya da vefat ise kesinlikle yüklenmeyecek
            OR
            (NEDEN in ('Sorunlu') and
             exists (select 1 from crm_DM.Aramalar_Teklifler ART where BC.USERID=ART.USERID and TRUNC(SYSDATE) between BaslangicTar and BitisTar and ART.Teklif_Hediye_Katalog_Carpan=0)) --- Sorunlu ve Tekliflerde HK puan yok ise verme
        )
        ;
        commit;
    end;
    procedure p_bc_update_42 is
    begin
        MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA_RT_tmp BC
        USING CRM_DM.HP_Exclude HPE
        ON (BC.USERID = HPE.USERID)
        WHEN MATCHED THEN UPDATE
        SET
        HediyeKatalogPuan=0
        ;
        commit;
    end;



   procedure p_bc_update_999 is
    begin
		MERGE /*+ parallel(4) */ into CRM_DM.BONUS_CALISMA B
        USING CRM_DM.BONUS_CALISMA_RT_tmp BC
        ON (BC.CUSTOMER_ID = B.CUSTOMER_ID)
        WHEN  MATCHED THEN
    	UPDATE SET
		B.STATUS	=	BC.STATUS	,
		B.STATUS_DESC	=	BC.STATUS_DESC	,
		B.STATUS_AVAILABLE	=	BC.STATUS_AVAILABLE	,
		B.ISNEWCUSTOMER	=	BC.ISNEWCUSTOMER	,
		B.ISCUSTOMER	=	BC.ISCUSTOMER	,
		B.ISVIP	=	BC.ISVIP	,
		B.ACTIVITYSTATUS	=	BC.ACTIVITYSTATUS	,
		B.SEGMENT_CALCULATED	=	BC.SEGMENT_CALCULATED	,
		B.SEGMENT_ASSIGNED	=	BC.SEGMENT_ASSIGNED	,
		B.SEGMENT_BEST	=	BC.SEGMENT_BEST	,
		B.SEGMENT_BEST_INPERIOD	=	BC.SEGMENT_BEST_INPERIOD	,
		B.RFM_SEGMENT	=	BC.RFM_SEGMENT	,
		B.AYRICALIKLI_UYE	=	BC.AYRICALIKLI_UYE	,
		B.TAKIM	=	BC.TAKIM	,
		B.YAS	=	BC.YAS	,
		B.CINSIYET	=	BC.CINSIYET	,
		B.SEHIR	=	BC.SEHIR	,
		B.PAZIZINSMS	=	BC.PAZIZINSMS	,
		B.PAZIZINCC	=	BC.PAZIZINCC	,
		B.PAZIZINMAIL	=	BC.PAZIZINMAIL	,
		B.UYELIKTARIHI	=	BC.UYELIKTARIHI	,
		B.UYELIKSURESI	=	BC.UYELIKSURESI	,
		B.SONLOGINTARIHI	=	BC.SONLOGINTARIHI	,
		B.SONLOGINUZERINDENGECENSURE	=	BC.SONLOGINUZERINDENGECENSURE	,
		B.SONOYUNUZERINDENGECENSURE	=	BC.SONOYUNUZERINDENGECENSURE	,
		B.SONPARATRANSFERIUZERINDENGECENSURE	=	BC.SONPARATRANSFERIUZERINDENGECENSURE	,
		B.SONPAYOUTUZERINDENGECENSURE	=	BC.SONPAYOUTUZERINDENGECENSURE	,
		B.SONBONUSYUKLEMEUZERINDENGECENSURE	=	BC.SONBONUSYUKLEMEUZERINDENGECENSURE	,
		B.PARA_BONUS_KONTROL	=	BC.PARA_BONUS_KONTROL	,
		B.BAKIYE	=	BC.BAKIYE	,
		B.BONUS_BAKIYE	=	BC.BONUS_BAKIYE	,
		B.CIRO_SONHAFTA	=	BC.CIRO_SONHAFTA	,
		B.CIRO_SONAY	=	BC.CIRO_SONAY	,
		B.CIRO_SON3AY	=	BC.CIRO_SON3AY	,
		B.CIRO_SON6AY	=	BC.CIRO_SON6AY	,
		B.CIRO_SON12AY	=	BC.CIRO_SON12AY	,
		B.CIRO_DONEM_TOPLAM	=	BC.CIRO_DONEM_TOPLAM	,
		B.BONUS_DONEM_TOPLAM	=	BC.BONUS_DONEM_TOPLAM	,
		B.IDDAA_CIRO_DONEM_TOPLAM	=	BC.IDDAA_CIRO_DONEM_TOPLAM	,
		B.STO_CIRO_DONEM_TOPLAM	=	BC.STO_CIRO_DONEM_TOPLAM	,
		B.MP_CIRO_DONEM_TOPLAM	=	BC.MP_CIRO_DONEM_TOPLAM	,
		B.CIRO_DONEM_MAX	=	BC.CIRO_DONEM_MAX	,
		B.BONUSKULLANIM_SONHAFTA	=	BC.BONUSKULLANIM_SONHAFTA	,
		B.BONUSKULLANIM_SONAY	=	BC.BONUSKULLANIM_SONAY	,
		B.BONUSKULLANIM_SON3AY	=	BC.BONUSKULLANIM_SON3AY	,
		B.BONUSKULLANIM_SON6AY	=	BC.BONUSKULLANIM_SON6AY	,
		B.BONUSKULLANIM_SON12AY	=	BC.BONUSKULLANIM_SON12AY	,
		B.BONUSYUKLEME_SONHAFTA	=	BC.BONUSYUKLEME_SONHAFTA	,
		B.BONUSYUKLEME_SONAY	=	BC.BONUSYUKLEME_SONAY	,
		B.BONUSYUKLEME_SON3AY	=	BC.BONUSYUKLEME_SON3AY	,
		B.BONUSYUKLEME_SON6AY	=	BC.BONUSYUKLEME_SON6AY	,
		B.BONUSYUKLEME_SON12AY	=	BC.BONUSYUKLEME_SON12AY	,
		B.PARAYATIRMA_SONHAFTA	=	BC.PARAYATIRMA_SONHAFTA	,
		B.PARAYATIRMA_SONAY	=	BC.PARAYATIRMA_SONAY	,
		B.PARAYATIRMA_SON3AY	=	BC.PARAYATIRMA_SON3AY	,
		B.PARAYATIRMA_SON6AY	=	BC.PARAYATIRMA_SON6AY	,
		B.PARAYATIRMA_SON12AY	=	BC.PARAYATIRMA_SON12AY	,
		B.IDDAA_CIRO_SONHAFTA	=	BC.IDDAA_CIRO_SONHAFTA	,
		B.IDDAA_CIRO_SONAY	=	BC.IDDAA_CIRO_SONAY	,
		B.IDDAA_CIRO_SON3AY	=	BC.IDDAA_CIRO_SON3AY	,
		B.IDDAA_CIRO_SON6AY	=	BC.IDDAA_CIRO_SON6AY	,
		B.IDDAA_CIRO_SON12AY	=	BC.IDDAA_CIRO_SON12AY	,
		B.OYUNGUNADET_SONHAFTA	=	BC.OYUNGUNADET_SONHAFTA	,
		B.OYUNGUNADET_SONAY	=	BC.OYUNGUNADET_SONAY	,
		B.OYUNGUNADET_SON3AY	=	BC.OYUNGUNADET_SON3AY	,
		B.OYUNGUNADET_SON6AY	=	BC.OYUNGUNADET_SON6AY	,
		B.OYUNGUNADET_SON12AY	=	BC.OYUNGUNADET_SON12AY	,
		B.OYUNGUNRATIO_SONHAFTA	=	BC.OYUNGUNRATIO_SONHAFTA	,
		B.OYUNGUNRATIO_SONAY	=	BC.OYUNGUNRATIO_SONAY	,
		B.OYUNGUNRATIO_SON3AY	=	BC.OYUNGUNRATIO_SON3AY	,
		B.OYUNGUNRATIO_SON6AY	=	BC.OYUNGUNRATIO_SON6AY	,
		B.OYUNGUNRATIO_SON12AY	=	BC.OYUNGUNRATIO_SON12AY	,
		B.LOGINGUNADET_SONHAFTA	=	BC.LOGINGUNADET_SONHAFTA	,
		B.LOGINGUNADET_SONAY	=	BC.LOGINGUNADET_SONAY	,
		B.LOGINGUNADET_SON3AY	=	BC.LOGINGUNADET_SON3AY	,
		B.LOGINGUNADET_SON6AY	=	BC.LOGINGUNADET_SON6AY	,
		B.LOGINGUNADET_SON12AY	=	BC.LOGINGUNADET_SON12AY	,
		B.LOGINGUNRATIO_SONHAFTA	=	BC.LOGINGUNRATIO_SONHAFTA	,
		B.LOGINGUNRATIO_SONAY	=	BC.LOGINGUNRATIO_SONAY	,
		B.LOGINGUNRATIO_SON3AY	=	BC.LOGINGUNRATIO_SON3AY	,
		B.LOGINGUNRATIO_SON6AY	=	BC.LOGINGUNRATIO_SON6AY	,
		B.LOGINGUNRATIO_SON12AY	=	BC.LOGINGUNRATIO_SON12AY	,
		B.PAYOUT_SONHAFTA	=	BC.PAYOUT_SONHAFTA	,
		B.PAYOUT_SONAY	=	BC.PAYOUT_SONAY	,
		B.PAYOUT_SON3AY	=	BC.PAYOUT_SON3AY	,
		B.PAYOUT_SON6AY	=	BC.PAYOUT_SON6AY	,
		B.PAYOUT_SON12AY	=	BC.PAYOUT_SON12AY	,
		B.PAYOUTRATIO_SONHAFTA	=	BC.PAYOUTRATIO_SONHAFTA	,
		B.PAYOUTRATIO_SONAY	=	BC.PAYOUTRATIO_SONAY	,
		B.PAYOUTRATIO_SON3AY	=	BC.PAYOUTRATIO_SON3AY	,
		B.PAYOUTRATIO_SON6AY	=	BC.PAYOUTRATIO_SON6AY	,
		B.PAYOUTRATIO_SON12AY	=	BC.PAYOUTRATIO_SON12AY	,
		B.BASKETBALL_CIRO_SONHAFTA	=	BC.BASKETBALL_CIRO_SONHAFTA	,
		B.BASKETBALL_CIRO_SONAY	=	BC.BASKETBALL_CIRO_SONAY	,
		B.BASKETBALL_CIRO_SON3AY	=	BC.BASKETBALL_CIRO_SON3AY	,
		B.BASKETBALL_CIRO_SON6AY	=	BC.BASKETBALL_CIRO_SON6AY	,
		B.BASKETBALL_CIRO_SON12AY	=	BC.BASKETBALL_CIRO_SON12AY	,
		B.BASKETBALL_RATIO_SONHAFTA	=	BC.BASKETBALL_RATIO_SONHAFTA	,
		B.BASKETBALL_RATIO_SONAY	=	BC.BASKETBALL_RATIO_SONAY	,
		B.BASKETBALL_RATIO_SON3AY	=	BC.BASKETBALL_RATIO_SON3AY	,
		B.BASKETBALL_RATIO_SON6AY	=	BC.BASKETBALL_RATIO_SON6AY	,
		B.BASKETBALL_RATIO_SON12AY	=	BC.BASKETBALL_RATIO_SON12AY	,
		B.KAYBEDENKUPONTUTAR_SONHAFTA	=	BC.KAYBEDENKUPONTUTAR_SONHAFTA	,
		B.KAYBEDENKUPONTUTAR_SONAY	=	BC.KAYBEDENKUPONTUTAR_SONAY	,
		B.KAYBEDENKUPONTUTAR_SON3AY	=	BC.KAYBEDENKUPONTUTAR_SON3AY	,
		B.KAYBEDENKUPONTUTAR_SON6AY	=	BC.KAYBEDENKUPONTUTAR_SON6AY	,
		B.KAYBEDENKUPONTUTAR_SON12AY	=	BC.KAYBEDENKUPONTUTAR_SON12AY	,
		B.KAZANANKUPONTUTAR_SONHAFTA	=	BC.KAZANANKUPONTUTAR_SONHAFTA	,
		B.KAZANANKUPONTUTAR_SONAY	=	BC.KAZANANKUPONTUTAR_SONAY	,
		B.KAZANANKUPONTUTAR_SON3AY	=	BC.KAZANANKUPONTUTAR_SON3AY	,
		B.KAZANANKUPONTUTAR_SON6AY	=	BC.KAZANANKUPONTUTAR_SON6AY	,
		B.KAZANANKUPONTUTAR_SON12AY	=	BC.KAZANANKUPONTUTAR_SON12AY	,
		B.IDDAA_CIRO_3ORANALTI_SONHAFTA	=	BC.IDDAA_CIRO_3ORANALTI_SONHAFTA	,
		B.IDDAA_CIRO_3ORANALTI_SONAY	=	BC.IDDAA_CIRO_3ORANALTI_SONAY	,
		B.IDDAA_CIRO_3ORANALTI_SON3AY	=	BC.IDDAA_CIRO_3ORANALTI_SON3AY	,
		B.IDDAA_CIRO_3ORANALTI_SON6AY	=	BC.IDDAA_CIRO_3ORANALTI_SON6AY	,
		B.IDDAA_CIRO_3ORANALTI_SON12AY	=	BC.IDDAA_CIRO_3ORANALTI_SON12AY	,
		B.IDDAA_CIRO_5ORANALTI_SONHAFTA	=	BC.IDDAA_CIRO_5ORANALTI_SONHAFTA	,
		B.IDDAA_CIRO_5ORANALTI_SONAY	=	BC.IDDAA_CIRO_5ORANALTI_SONAY	,
		B.IDDAA_CIRO_5ORANALTI_SON3AY	=	BC.IDDAA_CIRO_5ORANALTI_SON3AY	,
		B.IDDAA_CIRO_5ORANALTI_SON6AY	=	BC.IDDAA_CIRO_5ORANALTI_SON6AY	,
		B.IDDAA_CIRO_5ORANALTI_SON12AY	=	BC.IDDAA_CIRO_5ORANALTI_SON12AY	,
		B.IDDAA_CIRO_PAY_SONHAFTA	=	BC.IDDAA_CIRO_PAY_SONHAFTA	,
		B.IDDAA_CIRO_PAY_SONAY	=	BC.IDDAA_CIRO_PAY_SONAY	,
		B.IDDAA_CIRO_PAY_SON3AY	=	BC.IDDAA_CIRO_PAY_SON3AY	,
		B.IDDAA_CIRO_PAY_SON6AY	=	BC.IDDAA_CIRO_PAY_SON6AY	,
		B.IDDAA_CIRO_PAY_SON12AY	=	BC.IDDAA_CIRO_PAY_SON12AY	,
		B.IDDAA_CIRO_3ORANALTI_PAY_SONHAFTA	=	BC.IDDAA_CIRO_3ORANALTI_PAY_SONHAFTA	,
		B.IDDAA_CIRO_3ORANALTI_PAY_SONAY	=	BC.IDDAA_CIRO_3ORANALTI_PAY_SONAY	,
		B.IDDAA_CIRO_3ORANALTI_PAY_SON3AY	=	BC.IDDAA_CIRO_3ORANALTI_PAY_SON3AY	,
		B.IDDAA_CIRO_3ORANALTI_PAY_SON6AY	=	BC.IDDAA_CIRO_3ORANALTI_PAY_SON6AY	,
		B.IDDAA_CIRO_3ORANALTI_PAY_SON12AY	=	BC.IDDAA_CIRO_3ORANALTI_PAY_SON12AY	,
		B.IDDAA_CIRO_5ORANALTI_PAY_SONHAFTA	=	BC.IDDAA_CIRO_5ORANALTI_PAY_SONHAFTA	,
		B.IDDAA_CIRO_5ORANALTI_PAY_SONAY	=	BC.IDDAA_CIRO_5ORANALTI_PAY_SONAY	,
		B.IDDAA_CIRO_5ORANALTI_PAY_SON3AY	=	BC.IDDAA_CIRO_5ORANALTI_PAY_SON3AY	,
		B.IDDAA_CIRO_5ORANALTI_PAY_SON6AY	=	BC.IDDAA_CIRO_5ORANALTI_PAY_SON6AY	,
		B.IDDAA_CIRO_5ORANALTI_PAY_SON12AY	=	BC.IDDAA_CIRO_5ORANALTI_PAY_SON12AY	,
		B.IDDAA_CIRO_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_CIRO_SONHAFTA_BONUS_HARIC	,
		B.IDDAA_CIRO_3ORANALTI_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_CIRO_3ORANALTI_SONHAFTA_BONUS_HARIC	,
		B.IDDAA_CIRO_5ORANALTI_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_CIRO_5ORANALTI_SONHAFTA_BONUS_HARIC	,
		B.KAYBEDENKUPONTUTAR_SONHAFTA_BONUS_HARIC	=	BC.KAYBEDENKUPONTUTAR_SONHAFTA_BONUS_HARIC	,
		B.KAZANANKUPONTUTAR_SONHAFTA_BONUS_HARIC	=	BC.KAZANANKUPONTUTAR_SONHAFTA_BONUS_HARIC	,
		B.BASKETBALL_CIRO_SONHAFTA_BONUS_HARIC	=	BC.BASKETBALL_CIRO_SONHAFTA_BONUS_HARIC	,
		B.IDDAA_CIRO_3ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_CIRO_3ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC	,
		B.IDDAA_CIRO_5ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_CIRO_5ORANALTI_KAYBEDEN_SONHAFTA_BONUS_HARIC	,
		B.TRIBUNUYE	=	BC.TRIBUNUYE	,
		B.TRIBUNTAKIPCISAYI	=	BC.TRIBUNTAKIPCISAYI	,
		B.TRIBUNOYNANANSONKUPONUZERINDENGECENGUN	=	BC.TRIBUNOYNANANSONKUPONUZERINDENGECENGUN	,
		B.TRIBUNPAYLASILANSONKUPONUZERINDENGECENGUN	=	BC.TRIBUNPAYLASILANSONKUPONUZERINDENGECENGUN	,
		B.TRIBUNOYNANANKUPONSAYI_SONHAFTA	=	BC.TRIBUNOYNANANKUPONSAYI_SONHAFTA	,
		B.TRIBUNOYNANANKUPONSAYI_SONAY	=	BC.TRIBUNOYNANANKUPONSAYI_SONAY	,
		B.TRIBUNOYNANANKUPONSAYI_SON3AY	=	BC.TRIBUNOYNANANKUPONSAYI_SON3AY	,
		B.TRIBUNOYNANANKUPONSAYI_SON6AY	=	BC.TRIBUNOYNANANKUPONSAYI_SON6AY	,
		B.TRIBUNOYNANANKUPONSAYI_SON12AY	=	BC.TRIBUNOYNANANKUPONSAYI_SON12AY	,
		B.TRIBUNPAYLASILANKUPONSAYI_SONHAFTA	=	BC.TRIBUNPAYLASILANKUPONSAYI_SONHAFTA	,
		B.TRIBUNPAYLASILANKUPONSAYI_SONAY	=	BC.TRIBUNPAYLASILANKUPONSAYI_SONAY	,
		B.TRIBUNPAYLASILANKUPONSAYI_SON3AY	=	BC.TRIBUNPAYLASILANKUPONSAYI_SON3AY	,
		B.TRIBUNPAYLASILANKUPONSAYI_SON6AY	=	BC.TRIBUNPAYLASILANKUPONSAYI_SON6AY	,
		B.TRIBUNPAYLASILANKUPONSAYI_SON12AY	=	BC.TRIBUNPAYLASILANKUPONSAYI_SON12AY	,
		B.MP_CIRO_SONHAFTA	=	BC.MP_CIRO_SONHAFTA	,
		B.MP_CIRO_SONAY	=	BC.MP_CIRO_SONAY	,
		B.MP_CIRO_SON3AY	=	BC.MP_CIRO_SON3AY	,
		B.MP_CIRO_SON6AY	=	BC.MP_CIRO_SON6AY	,
		B.MP_CIRO_SON12AY	=	BC.MP_CIRO_SON12AY	,
		B.MP_CIRO_PAY_SONHAFTA	=	BC.MP_CIRO_PAY_SONHAFTA	,
		B.MP_CIRO_PAY_SONAY	=	BC.MP_CIRO_PAY_SONAY	,
		B.MP_CIRO_PAY_SON3AY	=	BC.MP_CIRO_PAY_SON3AY	,
		B.MP_CIRO_PAY_SON6AY	=	BC.MP_CIRO_PAY_SON6AY	,
		B.MP_CIRO_PAY_SON12AY	=	BC.MP_CIRO_PAY_SON12AY	,
		B.SAATDILIM_1	=	BC.SAATDILIM_1	,
		B.SAATDILIM_2	=	BC.SAATDILIM_2	,
		B.SAATDILIM_3	=	BC.SAATDILIM_3	,
		B.SAATDILIM_4	=	BC.SAATDILIM_4	,
		B.SAATDILIM_5	=	BC.SAATDILIM_5	,
		B.SAATDILIM_6	=	BC.SAATDILIM_6	,
		B.SAATDILIM_7	=	BC.SAATDILIM_7	,
		B.SAATDILIM_8	=	BC.SAATDILIM_8	,
		B.GUN_1_SONAY	=	BC.GUN_1_SONAY	,
		B.GUN_2_SONAY	=	BC.GUN_2_SONAY	,
		B.GUN_3_SONAY	=	BC.GUN_3_SONAY	,
		B.GUN_4_SONAY	=	BC.GUN_4_SONAY	,
		B.GUN_5_SONAY	=	BC.GUN_5_SONAY	,
		B.GUN_6_SONAY	=	BC.GUN_6_SONAY	,
		B.GUN_7_SONAY	=	BC.GUN_7_SONAY	,
		B.HAFTAICI_OGLE_SONAY	=	BC.HAFTAICI_OGLE_SONAY	,
		B.HAFTAICI_OGLE_PAY_SONAY	=	BC.HAFTAICI_OGLE_PAY_SONAY	,
		B.CIRO_PMONTH_SONHAFTA	=	BC.CIRO_PMONTH_SONHAFTA	,
		B.CIRO_PMONTH_SONAY	=	BC.CIRO_PMONTH_SONAY	,
		B.CIRO_PMONTH_SON3AY	=	BC.CIRO_PMONTH_SON3AY	,
		B.CIRO_PMONTH_SON6AY	=	BC.CIRO_PMONTH_SON6AY	,
		B.CIRO_PMONTH_SON12AY	=	BC.CIRO_PMONTH_SON12AY	,
		B.CIRO_PMONTH_MAX	=	BC.CIRO_PMONTH_MAX	,
		B.LOGIN_RATIO_MAX	=	BC.LOGIN_RATIO_MAX	,
		B.OYUN_RATIO_MAX	=	BC.OYUN_RATIO_MAX	,
		B.SONBONUSTALEPYUKLEMEUZERINDENGECENSURE	=	BC.SONBONUSTALEPYUKLEMEUZERINDENGECENSURE	,
		B.TALEP_SONAY	=	BC.TALEP_SONAY	,
		B.BONUSTALEP_SONAY	=	BC.BONUSTALEP_SONAY	,
		B.BONUSTALEPKAR	=	BC.BONUSTALEPKAR	,
		B.BONUS_TALEP_YUKLEME_ADET_SONAY	=	BC.BONUS_TALEP_YUKLEME_ADET_SONAY	,
		B.CIRO_ORT_W	=	BC.CIRO_ORT_W	,
		B.LOG_CIRO_ORT_W	=	BC.LOG_CIRO_ORT_W	,
		B.LOGINGUN_ORT_W	=	BC.LOGINGUN_ORT_W	,
		B.OYUNGUN_ORT_W	=	BC.OYUNGUN_ORT_W	,
		B.BONUS_ORAN_W	=	BC.BONUS_ORAN_W	,
		B.TICKET_ORT_W	=	BC.TICKET_ORT_W	,
		B.LOG_TICKET_ORT_W	=	BC.LOG_TICKET_ORT_W	,
		B.CIRO_SCORE1	=	BC.CIRO_SCORE1	,
		B.CIRO_SCORE2	=	BC.CIRO_SCORE2	,
		B.LOGIN_SCORE	=	BC.LOGIN_SCORE	,
		B.GAME_SCORE	=	BC.GAME_SCORE	,
		B.ALARM_SCORE	=	BC.ALARM_SCORE	,
		B.ALARM	=	BC.ALARM	,
		B.TRIBUNDISCARD	=	BC.TRIBUNDISCARD	,
		B.YUZDETEKLIFDISCARD	=	BC.YUZDETEKLIFDISCARD	,
		B.DIGERDISCARD	=	BC.DIGERDISCARD	,
		B.ONGORULENYUKLEMEADET	=	BC.ONGORULENYUKLEMEADET	,
		B.ONGORULENYUZDE	=	BC.ONGORULENYUZDE	,
		B.ONGORULENBONUS	=	BC.ONGORULENBONUS	,
		B.BONUS_CURE_AVAILABLE	=	BC.BONUS_CURE_AVAILABLE	,
		B.ONGORULENBONUSNEDEN	=	BC.ONGORULENBONUSNEDEN	,
		B.DUZENLIAKSIYONKITLE	=	BC.DUZENLIAKSIYONKITLE	,
		B.HEDIYEKATALOGPUAN_BAKIYE	=	BC.HEDIYEKATALOGPUAN_BAKIYE	,
		B.HEDIYEKATALOGPUAN_ORAN	=	BC.HEDIYEKATALOGPUAN_ORAN	,
		B.HEDIYEKATALOGPUAN	=	BC.HEDIYEKATALOGPUAN	,
		B.HEDIYEKATALOGPUAN_YUKLEME_SONAY	=	BC.HEDIYEKATALOGPUAN_YUKLEME_SONAY	,
		B.HEDIYEKATALOGPUAN_YUKLEME_SONHAFTA	=	BC.HEDIYEKATALOGPUAN_YUKLEME_SONHAFTA	,
		B.IDDAA_STO_CIRO_SONHAFTA	=	BC.IDDAA_STO_CIRO_SONHAFTA	,
		B.IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA	=	BC.IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA	,
		B.IDDAA_STO_KAZANAN_SONHAFTA	=	BC.IDDAA_STO_KAZANAN_SONHAFTA	,
		B.IDDAA_STO_KAYBEDEN_SONHAFTA	=	BC.IDDAA_STO_KAYBEDEN_SONHAFTA	,
		B.IDDAA_STO_CIRO_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_STO_CIRO_SONHAFTA_BONUS_HARIC	,
		B.IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_STO_DEGERLENDIRILMEMIS_SONHAFTA_BONUS_HARIC	,
		B.IDDAA_STO_KAZANAN_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_STO_KAZANAN_SONHAFTA_BONUS_HARIC	,
		B.IDDAA_STO_KAYBEDEN_SONHAFTA_BONUS_HARIC	=	BC.IDDAA_STO_KAYBEDEN_SONHAFTA_BONUS_HARIC	,
		B.DDWH_DATE	=	sysdate 	;
	commit;
    end;

end ;
/

create or replace procedure               bc_update_01 as
begin
  merge into crm_dm.Bonus_Calisma_X A
using(
    select
        B.CUSTOMER_ID,
        IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,
        IKDD.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
        IKDD.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
        IKDD.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
        IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
        IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,
        IKDD.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
        IKDD.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
        NVL(IKDD.Iddaa_Ciro_SonHafta,0) + NVL(SKDD.STO_Ciro_SonHafta,0) AS Iddaa_STO_Ciro_SonHafta,
        NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta,
        NVL(IKDD.KazananKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta,0) AS Iddaa_STO_Kazanan_SonHafta,
        NVL(IKDD.KaybedenKuponTutar_SonHafta,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta,0) AS Iddaa_STO_Kaybeden_SonHafta,
        NVL(IKDD.Iddaa_Ciro_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
        NVL(IKDD.DegerlendirilmemisKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Degerlendirilmemis_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
        NVL(IKDD.KazananKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kazanan_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
        NVL(IKDD.KaybedenKuponTutar_SonHafta_BONUS_HARIC,0) + NVL(SKDD.STO_Ciro_Kaybeden_SonHafta_BONUS_HARIC,0) AS Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
        IKDD.KaybedenKuponTutar_SonHafta,
        IKDD.KaybedenKuponTutar_SonAy,
        IKDD.KaybedenKuponTutar_Son3Ay,
        IKDD.KaybedenKuponTutar_Son6Ay,
        IKDD.KaybedenKuponTutar_Son12Ay,
        IKDD.KazananKuponTutar_SonHafta,
        IKDD.KazananKuponTutar_SonAy,
        IKDD.KazananKuponTutar_Son3Ay,
        IKDD.KazananKuponTutar_Son6Ay,
        IKDD.KazananKuponTutar_Son12Ay
    from crm_DM.Bonus_Calisma_X B
    left join CRM_DM.DM_IDDAA_KUPONDURUM_DAILY IKDD on B.CUSTOMER_ID=IKDD.CUSTOMER_ID
    left join CRM_DM.DM_STO_KUPONDURUM_DAILY SKDD on B.CUSTOMER_ID=SKDD.CUSTOMER_ID
) S
  ON (A.CUSTOMER_ID = S.CUSTOMER_ID)
when matched then update
set
    A.Iddaa_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_SonHafta_BONUS_HARIC,
    A.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_SonHafta_BONUS_HARIC,
    A.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_SonHafta_BONUS_HARIC,
    A.BASKETBALL_CIRO_SonHafta_BONUS_HARIC = S.BASKETBALL_CIRO_SonHafta_BONUS_HARIC,
    A.KaybedenKuponTutar_SonHafta_BONUS_HARIC = S.KaybedenKuponTutar_SonHafta_BONUS_HARIC,
    A.KazananKuponTutar_SonHafta_BONUS_HARIC = S.KazananKuponTutar_SonHafta_BONUS_HARIC,
    A.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_3OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
    A.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_Ciro_5OranAltı_Kaybeden_SonHafta_BONUS_HARIC,
    A.Iddaa_STO_Ciro_SonHafta = S.Iddaa_STO_Ciro_SonHafta,
    A.Iddaa_STO_Degerlendirilmemis_SonHafta = S.Iddaa_STO_Degerlendirilmemis_SonHafta,
    A.Iddaa_STO_Kazanan_SonHafta = S.Iddaa_STO_Kazanan_SonHafta,
    A.Iddaa_STO_Kaybeden_SonHafta = S.Iddaa_STO_Kaybeden_SonHafta,
    A.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC = S.Iddaa_STO_Ciro_SonHafta_BONUS_HARIC,
    A.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC = S.Iddaa_STO_Degerlendirilmemis_SonHafta_BONUS_HARIC,
    A.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kazanan_SonHafta_BONUS_HARIC,
    A.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC = S.Iddaa_STO_Kaybeden_SonHafta_BONUS_HARIC,
    A.KaybedenKuponTutar_SonHafta = S.KaybedenKuponTutar_SonHafta,
    A.KaybedenKuponTutar_SonAy = S.KaybedenKuponTutar_SonAy,
    A.KaybedenKuponTutar_Son3Ay = S.KaybedenKuponTutar_Son3Ay,
    A.KaybedenKuponTutar_Son6Ay = S.KaybedenKuponTutar_Son6Ay,
    A.KaybedenKuponTutar_Son12Ay = S.KaybedenKuponTutar_Son12Ay,
    A.KazananKuponTutar_SonHafta = S.KazananKuponTutar_SonHafta,
    A.KazananKuponTutar_SonAy = S.KazananKuponTutar_SonAy,
    A.KazananKuponTutar_Son3Ay = S.KazananKuponTutar_Son3Ay,
    A.KazananKuponTutar_Son6Ay = S.KazananKuponTutar_Son6Ay,
    A.KazananKuponTutar_Son12Ay = S.KazananKuponTutar_Son12Ay
;
end bc_update_01;
/

create or replace PROCEDURE        TS_CUSTOMER_BENEFITS_ALL
IS

       VD_CDAY DATE;
       VD_FDAY DATE;
	   vn_daily_cust_count NUMBER(10);
	   vn_daily_cust_count_30 NUMBER(10);
	   vn_cust_first_coupon_count NUMBER(10);
	   vn_cust_day_active_count NUMBER(10);
	   vn_amnt_30 NUMBER(10);
	   vn_cust_day_active_sum NUMBER(10);
	   i integer :=1;


BEGIN

execute IMMEDIATE 'TRUNCATE TABLE CRM_DM.tmp_bnfts_cstnw';

INSERT INTO CRM_DM.tmp_bnfts_cstnw
(CUSTOMER_ID,REGISTRATION_DATE,DWH_DATE)
SELECT c.customer_id,(c.REGISTRATION_DATE) as REGISTRATION_DATE,SYSDATE as dwh_date
FROM lbrdwh.customer_new c
WHERE c.status IN (3, 7, 10,19)
AND c.userid IS NOT NULL
and c.cust_from='N'
and c.registration_date BETWEEN  TRUNC(SYSDATE)-60 and TRUNC(SYSDATE);
COMMIT;

execute IMMEDIATE 'TRUNCATE TABLE CRM_DM.tmp_bnfts_tscda';

INSERT INTO CRM_DM.tmp_bnfts_tscda
(DPLAY_DATE,NCUSTOMER_ID,NAMOUNT,DWH_DATE)
 select t.DPLAY_DATE,t.NCUSTOMER_ID,t.NAMOUNT,SYSDATE as dwh_Date
   from CRM_DM.ts_customer_daily_amount t
  where t.dplay_Date between trunc(sysdate)-3  and  trunc(sysdate)-1;
COMMIT;

	FOR i IN 1..3
	LOOP


dbms_output.put_line(i) ;


SELECT TRUNC(SYSDATE)-i
INTO VD_CDAY
FROM DUAL;

SELECT TRUNC(SYSDATE)-30
INTO VD_FDAY
FROM DUAL;

SELECT COUNT (c.customer_id)
INTO vn_daily_cust_count
FROM CRM_DM.tmp_bnfts_cstnw c
WHERE c.registration_date >= VD_CDAY/* -2 VE -3 GELECEK*/ ;


SELECT COUNT (c.customer_id)
INTO vn_daily_cust_count_30
FROM  CRM_DM.tmp_bnfts_cstnw c
WHERE  (c.registration_date) BETWEEN trunc(sysdate)-30  and  VD_CDAY /* -2 VE -3 GELECEK*/;


SELECT COUNT (x.ncustomer_id)
INTO vn_cust_first_coupon_count
FROM (SELECT   t.ncustomer_id
         FROM CRM_DM.tmp_bnfts_tscda t,
              CRM_DM.tmp_bnfts_cstnw c
        WHERE t.ncustomer_id = c.customer_id
          AND (c.registration_date) BETWEEN trunc(sysdate)-30  and  VD_CDAY /* -2 VE -3 GELECEK*/
     GROUP BY t.ncustomer_id
       HAVING MIN (t.dplay_date) = VD_CDAY /* -2 VE -3 GELECEK*/) x;


SELECT SUM (t.namount)
INTO vn_amnt_30
FROM CRM_DM.tmp_bnfts_tscda t, CRM_DM.tmp_bnfts_cstnw c
WHERE t.ncustomer_id = c.customer_id
AND  (c.registration_date) BETWEEN trunc(sysdate)-30  and VD_CDAY /* -2 VE -3 GELECEK*/
AND t.dplay_date >= VD_CDAY/* -2 VE -3 GELECEK*/;

SELECT COUNT (DISTINCT z.ncustomer_id) as cnt,
	   SUM (z.namount) as sm
   INTO vn_cust_day_active_count, vn_cust_day_active_sum
   FROM (SELECT   y.ncustomer_id, SUM (y.namount) AS namount
             FROM (SELECT c.customer_id
                     FROM lbrdwh.customer_new c
                    WHERE 	c.status IN (3, 7, 10)
                              AND c.userid IS NOT NULL
							 and c.cust_from='N' and
                    not exists(
                   SELECT distinct t.ncustomer_id
                              FROM CRM_DM.tmp_bnfts_tscda t
                             WHERE t.dplay_date BETWEEN trunc(sysdate)-30  and  VD_CDAY-1
                             and t.ncustomer_id=c.customer_id)) x,
                  CRM_DM.tmp_bnfts_tscda y
            WHERE x.customer_id = y.ncustomer_id
              AND y.dplay_date >= trunc(sysdate)-30
         GROUP BY y.ncustomer_id
           HAVING MIN (y.dplay_date) =  VD_CDAY) z ;

DELETE FROM CRM_DM.ts_customer_benefits
WHERE ddate= VD_CDAY;
COMMIT;

  INSERT INTO CRM_DM.ts_customer_benefits
                     (ddate,
                      ddate_30,
                      ndaily_cst_count,
                      ndaily_cst_count_30,
                      n_cust_first_coupon_count,
                      n_cust_day_active_count,
                      n_amnt_30,
                      n_cust_day_active_sum,
                      dwh_date
                     )
              VALUES (
                      vd_cday,
                      vd_fday,
                      vn_daily_cust_count,
                      vn_daily_cust_count_30,
                      vn_cust_first_coupon_count,
                      vn_cust_day_active_count,
					  vn_amnt_30,
                      vn_cust_day_active_sum,
                      SYSDATE
                     );
COMMIT;


DELETE FROM CRM_DM.ts_customer_benefits_monthly
WHERE d_Man_RegDate= VD_CDAY;
COMMIT;


INSERT INTO CRM_DM.ts_customer_benefits_monthly
(d_Man_RegDate,CUSTOMER_ID,DWH_DATE)
SELECT
VD_CDAY as d_Man_RegDate,
c.CUSTOMER_ID ,
SYSDATE as DWH_DATE
 FROM lbrdwh.customer_new c
WHERE c.REGISTRATION_DATE between TRUNC(SYSDATE)-30 AND (VD_CDAY-1)-(1/(60*60*24))
  AND c.status IN (3, 7, 10,19)
  AND c.userid IS NOT NULL
  AND c.cust_from='N';
COMMIT;

	END LOOP;
END;
/

create or replace procedure        truncate_crm_dm_rfm
as
begin
execute immediate 'truncate table crm_dm.rfm';
end;
/

create synonym DM_CUSTOMER_DAILY_SEG_HIS for DM_CUSTOMER_DAILY_SEGMENT_HISTORY
/

